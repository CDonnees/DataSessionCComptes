<?xml version='1.0' encoding='ISO-8859-15'?>
<CADIC NOM="Legifrance">
<FICHE ID="JF00138325">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>3ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00138325</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68234</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. DE NICOLAY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme MOATI, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>12/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">23/12/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">23/12/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Université Paris VI Pierre et Marie Curie (UPMC) - Exercices 2005 à 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00138325.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00138308">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>Chambres réunies</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00138308</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68503</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. RESPLANDY-BERNARD, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. SABBE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>09/12/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">19/12/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">19/12/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Comptable du groupement d'intérêt public Transport sanitaire par hélicoptère en Ile-de-France (GIP TSH IF) à Créteil (Val-de-Marne).</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Décharge</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00138308.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00138306">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>Chambres réunies</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00138306</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68434</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. MICHELET, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. BACCOU, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>26/11/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">19/12/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">19/12/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Comptable du Port autonome de Bordeaux (PAB) - Arrêt après cassation par le Conseil d'Etat.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Décharge</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00138306.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00138302">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>2ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00138302</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68201</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. PICARD, Auditeur</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MONTEILS, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>11/10/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">19/12/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">19/12/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Service hydrographique et océanographique de la marine (SHOM) - Exercices 2007 à 2010.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p.198.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public administratif</DESCRIPTEUR>
<DESCRIPTEUR>Prescription</DESCRIPTEUR>
<DESCRIPTEUR>Force majeure</DESCRIPTEUR>
<DESCRIPTEUR>Rejet</DESCRIPTEUR>
<DESCRIPTEUR>Indemnité</DESCRIPTEUR>
<DESCRIPTEUR>Rémunération</DESCRIPTEUR>
<DESCRIPTEUR>Qualification juridique</DESCRIPTEUR>
<DESCRIPTEUR>Paiement indu</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable invoquait un certain nombre d'éléments afin de se décharger de sa responsabilité pour le versement irrégulier d'indemnités. La Cour relève que les bouleversements allégués par le comptable lors de la transformation du service en établissement public ne constituaient pas une force majeure, étant notamment ni imprévisibles, ni irrésistibles. Elle constate la mauvaise imputation des dépenses par le comptable car des indemnités de repas étaient utilisées en fait comme des dépenses de rémunération. Par ailleurs, des indemnités d'enseignement avaient été versées alors que les pièces justificatives fournies interdisaient formellement leur versement aux catégories d'agents concernés. Dans les deux cas, la Cour constate le préjudice financier et met donc le comptable en débet. Bien que les prestations aient été réelles, elle rappelle qu'un paiement effectué en violation du droit est un indu qui constitue, en soi, un préjudice financier et que le service fait ne suffit pas pour faire reconnaître l'absence de préjudice financier. La Cour refuse par ailleurs de se fonder sur des comparaisons économiques hypothétiques pour écarter le préjudice financier.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00138302.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137822">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137822</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68181</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme DEMIER, Conseillère maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GANSER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>24/10/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">29/11/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/11/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Syndicat intercommunal à vocation unique (SIVU) du groupe scolaire de La Plana (Alpes-Maritimes) - Appel d'un jugement de la chambre régionale des comptes de Provence-Alpes-Côte d'Azur.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137822.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">ICBDT1VSIERFUyBDT01QVEVTCiAgICAgICAgICAgICAgIC0tLS0tLS0tClFVQVRSSUVNRSBDSEFNQlJFCiAgICAgICAgICAgICAgIC0tLS0tLS0tCiAgUFJFTUlFUkUgU0VDVElPTgogICAgLS0tLS0tLS0KICAgICAgICAgIEFycsOqdCBuwrAgNjgxODEKU3luZGljYXQgaW50ZXJjb21tdW5hbCBhIHZvY2F0aW9uIHVuaXF1ZSAoU0lWVSkgZHUgZ3JvdXBlIHNjb2xhaXJlIGRlIGxhIHBsYW5hCiAoQWxwZXMtbWFyaXRpbWVzKQpBcHBlbCBk4oCZdW4ganVnZW1lbnQgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIFByb3ZlbmNlLUFscGVzLUPDtHRlIGTigJlBenVyClJhcHBvcnQgbsKwIDIwMTMtNTQxLTAKQXVkaWVuY2UgcHVibGlxdWUgZXQgZMOpbGliw6lyw6kgZHUgMjQgb2N0b2JyZSAyMDEzCkxlY3R1cmUgcHVibGlxdWUgZHUgMjggbm92ZW1icmUgMjAxMwoKTEEgQ09VUiBERVMgQ09NUFRFUyBhIHJlbmR1IGzigJlhcnLDqnQgc3VpdmFudMKgOgpMQSBDT1VSLApWdSBsYSByZXF1w6p0ZSwgZW5yZWdpc3Ryw6llIGxlIDI1IG1haSAyMDEyIGF1IGdyZWZmZSBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgKENSQykgZGUgUHJvdmVuY2UtQWxwZXMtQ8O0dGUgZOKAmUF6dXIsIHBhciBsYXF1ZWxsZSAKTS7CoFgsIGNvbXB0YWJsZSBkdSBzeW5kaWNhdCBpbnRlcmNvbW11bmFsIMOgIHZvY2F0aW9uIHVuaXF1ZSAoU0lWVSkgZHUgZ3JvdXBlIHNjb2xhaXJlIGRlIExBIFBMQU5BLCBwb3VyIGxlcyBleGVyY2ljZXMgMjAwNiDDoCAyMDA5LCBhIMOpbGV2w6kgYXBwZWwgZHUganVnZW1lbnQgbsKwIDIwMTItMDAwMyBkdSAyMCBtYXJzIDIwMTIgcGFyIGxlcXVlbCBsYWRpdGUgY2hhbWJyZSBs4oCZYSBjb25zdGl0dcOpIGTDqWJpdGV1ciBkZXMgZGVuaWVycyBkdSBzeW5kaWNhdCBwcsOpY2l0w6kgZGUgbGEgc29tbWUgZGUgMcKgNjc1LDAywqDigqwgYXVnbWVudMOpZSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCA7ClZ1IGzigJlhcnLDqnQgbsKwwqA2NTY0MyBkdSA1IGTDqWNlbWJyZSAyMDEyLCBub3RpZmnDqSBsZSAyMSBkw6ljZW1icmUgMjAxMiwgcGFyIGxlcXVlbCBsYSBDb3VyIGEgc3Vyc2lzIMOgIHN0YXR1ZXIgc3VyIGNldHRlIHJlcXXDqnRlIDsKVnUgbGUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlc8KgOwpWdSBsZSBjb2RlIGfDqW7DqXJhbCBkZXMgY29sbGVjdGl2aXTDqXMgdGVycml0b3JpYWxlcyA7ClZ1IGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkZSBmaW5hbmNlcyBuwrDCoDYzLTE1NiBkdSAyMyBmw6l2cmllciAxOTYzIG1vZGlmacOpZSA7ClZ1IGxlIGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5IGTDqWNlbWJyZSAxOTYyIG1vZGlmacOpIHBvcnRhbnQgcsOoZ2xlbWVudCBnw6luw6lyYWwgc3VyIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUsIGVuIHZpZ3VldXIgYXUgbW9tZW50IGRlcyBmYWl0c8KgOwpWdSBsZSByYXBwb3J0IGRlIE1tZSBDYXRoZXJpbmUgRMOpbWllciwgY29uc2VpbGzDqHJlIG1hw650cmXCoDsKVnUgbGVzIGNvbmNsdXNpb25zIGR1IFByb2N1cmV1ciBnw6luw6lyYWwgbsKwwqA1NzEgZHUgMjkgYW/Du3QgMjAxM8KgOwpFbnRlbmR1LCBsb3JzIGRlIGzigJlhdWRpZW5jZSBwdWJsaXF1ZSBkZSBjZSBqb3VyLCBNbWXCoETDqW1pZXIsIGVuIHNvbiByYXBwb3J0LCBNbWXCoE1hcmllLUFpbcOpZSBHYXNwYXJpLCBlbiBsZXMgY29uY2x1c2lvbnMgZHUgbWluaXN0w6hyZSBwdWJsaWMsIGzigJlhcHBlbGFudCwgaW5mb3Jtw6kgZGUgbOKAmWF1ZGllbmNlLCBu4oCZw6l0YW50IG5pIHByw6lzZW50LCBuaSByZXByw6lzZW50w6nCoDsKQXByw6hzIGF2b2lyIGVudGVuZHUsIGVuIGTDqWxpYsOpcsOpLCBNLsKgR8OpcmFyZCBHYW5zZXIsIGNvbnNlaWxsZXIgbWHDrnRyZSwgZW4gc2VzIG9ic2VydmF0aW9uc8KgOwpBdHRlbmR1IHF1ZSwgcGFyIGp1Z2VtZW50IGR1IDIwIG1hcnMgMjAxMiBzdXN2aXPDqSwgbGEgQ1JDIGRlIFByb3ZlbmNlLUFscGVzLUPDtHRlIGTigJlBenVyLCBhIGNvbnN0aXR1w6kgTS7CoFggZMOpYml0ZXVyIGR1IFNJVlUgYXUgbW90aWYgcXXigJlpbCBu4oCZYSBwdSBhcHBvcnRlciBsYSBwcmV1dmUgZOKAmWF2b2lyIGV4ZXJjw6kgZGVzIGRpbGlnZW5jZXMgYWTDqXF1YXRlcywgY29tcGzDqHRlcyBldCByYXBpZGVzIGVuIHZ1ZSBkZSByZWNvdXZyZXIgdW4gdGl0cmUgZGUgcmVjZXR0ZSDDqW1pcyBsZSAzIGphbnZpZXIgMjAwMSwgcG91ciB1biBtb250YW50IGRlIDHCoDY3NSwwMsKg4oKsLCBldCBhdHRlaW50IHBhciBsYSBwcmVzY3JpcHRpb24gbGUgMyBqYW52aWVyIDIwMDbCoDsgcXXigJlpbCBu4oCZYSBub3RhbW1lbnQgcGFzIGFwcG9ydMOpIGxhIHByZXV2ZSBkZXMgbm90aWZpY2F0aW9ucyBsZXMgNSBhb8O7dCAyMDAzIGV0IDIgbWFpIDIwMDUgZGVzIGNvbW1hbmRlbWVudHMgaW50ZXJydXB0aWZzIGRlIHByZXNjcmlwdGlvbiBxdeKAmWlsIGFsbMOoZ3VlwqA7IApBdHRlbmR1IHF1ZSBNLsKgWCBzb3V0aWVudCBlbiBhcHBlbCwgY29tbWUgaWwgbOKAmWF2YWl0IGZhaXQgZGV2YW50IGxlIHByZW1pZXIganVnZSwgcXVlIGxlIHRpdHJlIGRldmFpdCDDqnRyZSBhbm51bMOpIGF1IG1vdGlmIHF1ZSBsYSBzb21tZSBlbiBqZXUgYXZhaXQgw6l0w6kgcGF5w6llIHBhciBsZSBkw6liaXRldXIgc291cyBmb3JtZSBkZSBkw6lkdWN0aW9uIGR1IG1vbnRhbnQgZOKAmXVuZSBkZSBzZXMgZmFjdHVyZXMgdWx0w6lyaWV1cmVzwqA7IHF14oCZZW4gb3V0cmUgaWwgYSBwcm9kdWl0IHVuIG1hbmRhdCBkZSBs4oCZb3Jkb25uYXRldXIgbsKwwqA2MCBkdSAyIG1haSAyMDEyIGFubnVsYW50IGxlIHRpdHJlIGVuIGNhdXNlwqA7CkNvbnNpZMOpcmFudCBxdeKAmWVuIHZlcnR1IGRlIGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkdSAyMyBmw6l2cmllciAxOTYzIHN1c3Zpc8OpZSDCq8KgbGVzIGNvbXB0YWJsZXMgcHVibGljcyBzb250IHBlcnNvbm5lbGxlbWVudCBldCBww6ljdW5pYWlyZW1lbnQgcmVzcG9uc2FibGVzIGR1IHJlY291dnJlbWVudCBkZXMgcmVjZXR0ZXPCoMK7IGV0IHF1ZSBjZXR0ZSByZXNwb25zYWJpbGl0w6kgZXN0IGVuZ2Fnw6llIMKrwqBkw6hzIGxvcnMgKOKApikgcXUndW5lIHJlY2V0dGUgbidhIHBhcyDDqXTDqSByZWNvdXZyw6llwqDCu8KgOyBxdeKAmWlsIHLDqXN1bHRlIGRlIGNlIHRleHRlIHF1ZSBsZSBkw6lmYXV0IGRlIHJlY291dnJlbWVudCBk4oCZdW5lIGNyw6lhbmNlIGRvbnQgbGUgdGl0cmUgZGUgcmVjZXR0ZSBhIMOpdMOpIHLDqWd1bGnDqHJlbWVudCBwcmlzIGVuIGNoYXJnZSBlbnRyYcOubmUsIGVuIGzigJlhYnNlbmNlIGRlIGRpbGlnZW5jZXMgYWTDqXF1YXRlcywgY29tcGzDqHRlcyBldCByYXBpZGVzLCBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgZHUgY29tcHRhYmxlIGVuIGZvbmN0aW9uIGxvcnNxdWUgbGEgY3LDqWFuY2UgZXN0IGRldmVudWUgaXJyw6ljb3V2cmFibGUgOwpDb25zaWTDqXJhbnQgcXXigJlldSDDqWdhcmQgYXV4IGNvbnRyw7RsZXMgaW5jb21iYW50IGF1IGNvbXB0YWJsZSBlbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSAxMyBkdSBkw6ljcmV0IGR1IDI5IGTDqWNlbWJyZSAxOTYyIHN1c3Zpc8OpLCBsYSBwcmlzZSBlbiBjaGFyZ2UgZOKAmXVuIHRpdHJlIHBhciBsZSBjb21wdGFibGUgcHLDqXN1bWUgZGUgbOKAmWV4aXN0ZW5jZSBkZSBsYSBjcsOpYW5jZSBhc3NvY2nDqWUgw6AgY2UgdGl0cmUgOyBxdWUgbOKAmWFubnVsYXRpb24gZOKAmXVuIHRpdHJlIG5lIGTDqWNoYXJnZSBsZSBjb21wdGFibGUgZGUgc2EgcmVzcG9uc2FiaWxpdMOpIHF1ZSBzaSBlbGxlIHNlIGZvbmRlIHN1ciBkZXMgcGnDqGNlcyBhdHRlc3RhbnQgZGUgbOKAmWluZXhpc3RlbmNlIGRlIGxhIGNyw6lhbmNlIHLDqXB1dMOpZSBhc3NvY2nDqWUgYXUgdGl0cmXCoDsKQ29uc2lkw6lyYW50IHF14oCZaWwgcmV2ZW5haXQgYWluc2kgYXUgY29tcHRhYmxlIG1pcyBlbiBjYXVzZSBk4oCZYXBwb3J0ZXIgcG91ciBzYSBkw6ljaGFyZ2UgbGEgcHJldXZlIGRlIGzigJlleHRpbmN0aW9uIGRlIGxhIGNyw6lhbmNlIGR1IHN5bmRpY2F0IGF2YW50IHF1ZSBsZSB0aXRyZSBuZSBzb2l0IGF0dGVpbnQgcGFyIGxhIHByZXNjcmlwdGlvbiA7IHF14oCZZW4gbOKAmWVzcMOoY2UsIGJpZW4gcXXigJlpbCBsdWkgYWl0IMOpdMOpIGRlbWFuZMOpIHBhciBsYSByYXBwb3J0ZXVyZSwgbOKAmWFwcGVsYW50IG7igJlhIHBhcyBwcm9kdWl0IGxhIGZhY3R1cmUgZHUgZMOpYml0ZXVyIGF0dGVzdGFudCBxdWUgY2VsdWktY2kgYXVyYWl0IGTDqWR1aXQgZGVzIHNvbW1lcyBkdWVzIHBhciBsZSBzeW5kaWNhdCBsZSBtb250YW50IGRlIHNhIGRldHRlIGRlIDHCoDY3NSwwMsKg4oKsLCBwacOoY2UgcXVpIGF1cmFpdCBwdSBwcm91dmVyIHNlcyBkaXJlc8KgOyBxdeKAmWlsIG7igJlhIHBhcyBub24gcGx1cyBwcm9kdWl0IGxlcyBwacOoY2VzLCDDqWdhbGVtZW50IGRlbWFuZMOpZXMgcGFyIGxhIHJhcHBvcnRldXJlLCBzdXIgbGVzcXVlbGxlcyBsZSBtYW5kYXQgZOKAmWFubnVsYXRpb24gZXN0IGZvbmTDqSBldCBxdWkgYXVyYWllbnQgcHUgYXR0ZXN0ZXIgZGUgbOKAmWluZXhpc3RlbmNlIGRlIGxhIGNyw6lhbmNlIGF2YW50IGxhIGRhdGUgZGUgc2EgcHJlc2NyaXB0aW9uIDsKQ29uc2lkw6lyYW50IHF14oCZaWwgcsOpc3VsdGUgZGUgbOKAmWVuc2VtYmxlIGRlcyDDqWzDqW1lbnRzIHJhcHBlbMOpcyBjaS1kZXNzdXMgcXVlIGxlIHNldWwgbW95ZW4gZGUgbOKAmWFwcGVsYW50IGVzdCDDoCDDqWNhcnRlciBwdWlzcXXigJlpbCBu4oCZYSBwYXMgcHJvdXbDqSBxdWUgbGEgY3LDqWFuY2Ugw6l0YWl0IGluZXhpc3RhbnRlIMOgIGxhIGRhdGUgZGUgc2EgcHJlc2NyaXB0aW9uIHJldGVudWUgcGFyIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSwgw6Agc2F2b2lyIGxlIDPCoGphbnZpZXLCoDIwMDYgOwpQYXIgY2VzIG1vdGlmcywKREVDSURFwqA6CkFydGljbGUgdW5pcXVlIC0gTGEgcmVxdcOqdGUgZGUgTS4gWCBlc3QgcmVqZXTDqWUuCi0tLS0tLS0tLS0tLQpGYWl0IGV0IGp1Z8OpIGVuIGxhIENvdXIgZGVzIGNvbXB0ZXMsIHF1YXRyacOobWUgY2hhbWJyZSwgcHJlbWnDqHJlIHNlY3Rpb24uIFByw6lzZW50cywgTS7CoE1haXN0cmUsIHByw6lzaWRlbnQgZGUgc2VjdGlvbiwgcHLDqXNpZGVudCBkZSBsYSBmb3JtYXRpb24sIApNLsKgR2Fuc2VyLCBwcsOpc2lkZW50IGRlIHNlY3Rpb24sIE1tZXMgRG9zIFJlaXMgZXQgR2FkcmlvdC1SZW5hcmQsIE1NLsKgUm91c3NlbG90IGV0IEdlb2Zmcm95LCBjb25zZWlsbGVycyBtYcOudHJlcy4KU2lnbsOpwqA6IE1haXN0cmUsIHByw6lzaWRlbnQgZGUgc2VjdGlvbiwgZXQgRmVyZXosIGdyZWZmaWVyLgpDb2xsYXRpb25uw6ksIGNlcnRpZmnDqSBjb25mb3JtZSDDoCBsYSBtaW51dGUgw6l0YW50IGF1IGdyZWZmZSBkZSBsYcKgQ291ciBkZXMgY29tcHRlcyBldCBkw6lsaXZyw6kgcGFyIG1vaSwgc2VjcsOpdGFpcmUgZ8OpbsOpcmFsLgpQb3VyIGxlIFNlY3LDqXRhaXJlIGfDqW7DqXJhbApldCBwYXIgZMOpbMOpZ2F0aW9uLApsZSBDaGVmIGR1IGdyZWZmZSBjb250ZW50aWV1eAoKCgoKCgpEYW5pZWwgRkVSRVoK</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137783">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137783</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68108</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GAUTIER, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. LAFAURE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>19/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">28/11/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/11/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune d'Orgeval (Yvelines) - Appel d'un jugement de la chambre régionale des comptes d'Ile-de-France.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 190.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Maîtrise d'ouvrage</DESCRIPTEUR>
<DESCRIPTEUR>Pénalité de retard</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Maîtrise d'oeuvre</DESCRIPTEUR>
<DESCRIPTEUR>Rejet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Constitué en débet pour ne pas avoir veillé à la liquidation des pénalités de retard lors du règlement du solde de marchés de travaux, un comptable faisait valoir en appel que la livraison d'un ouvrage public avait été retardée par des demandes de travaux supplémentaires du maître d'ouvrage ou des sujétions techniques, que donc les entreprises cocontractantes n'étaient pas responsables des retards et qu'en conséquence il n'avait pas à imposer de telles pénalités. La Cour a rappelé que le comptable devait veiller à ce que lui soit produite la pièce lui permettant de vérifier que l'autorité compétente s'était effectivement prononcée sur les retards constatés et, ce, au moment du paiement. Même si le Conseil d'État estime que les parties peuvent, de façon tacite, déroger aux stipulations du contrat initial, y compris en ce qui concerne les pénalités de retard, la Cour a rappelé que le comptable était tenu de vérifier la décision de l'autorité compétente, et que, à défaut de celle-ci, il devait appliquer les clauses du contrat. Enfin, même si le maître d'oeuvre n'a procédé à aucune définition de responsabilité des entreprises, cette carence n'est pas de nature à paralyser l'application du contrat et le comptable doit imposer les pénalités de retard prévues par le CCAP. Le débet a donc été confirmé.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue dans le cadre des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la modification tacite du contrat par les parties, y compris pour les pénalités de retard cf. CE, 17 mars 2010, n° 308676, &lt;I style="mso-bidi-font-style: normal"&gt;commune d'Issy-les-Moulineaux&lt;/I&gt;. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Pour un commentaire de cet arrêt, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. &lt;I style="mso-bidi-font-style: normal"&gt;AJDA&lt;/I&gt;, 2014, p. 670.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137783.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137778">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137778</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68236</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. THEROND, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>19/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">28/11/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/11/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Université du Mans (Sarthe) - Appel d'un jugement de la chambre régionale des comptes des Pays de la Loire.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137778.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137758">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137758</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68227</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LEGER, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>24/10/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">28/11/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/11/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Centre communal d'action sociale (CCAS) de Mont-de-Marsan (Landes) - Appel d'un jugement de la chambre régionale des comptes d'Aquitaine, Poitou-Charentes.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 186.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Centre communal d'action sociale</DESCRIPTEUR>
<DESCRIPTEUR>Réquisitoire</DESCRIPTEUR>
<DESCRIPTEUR>Notification</DESCRIPTEUR>
<DESCRIPTEUR>Responsabilité</DESCRIPTEUR>
<DESCRIPTEUR>Prescription</DESCRIPTEUR>
<DESCRIPTEUR>Droits de la défense</DESCRIPTEUR>
<DESCRIPTEUR>Renvoi</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un réquisitoire, pris avant le 1er juillet 2012, avait été notifié au comptable après cette date, qui correspond à l'entrée en vigueur des dispositions de la loi n° 2011-1978 du 28 décembre 2011, qui modifie le régime de mise en jeu de la responsabilité des comptables.Le comptablesoutenait, en appel, que la chambre régionale des comptes avait commis une erreur de procédure en ne faisant pas application des dispositions nouvelles. La Cour a estimé, sur conclusions contraires du Procureur général, que le premier acte de mise en jeu de la responsabilité du comptable au sens de la loi ne pouvait produire d'effet qu'au moment où le comptable accusait réception du réquisitoire. Elle a, en conséquence, annulé le jugement et renvoyé l'affaire devant les premiers juges.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Dans cette espèce, la Cour a considéré que les règles du code de procédure pénale ne sont pas transposables au juge financier et que la mise en jeu de la responsabilité du comptable ne peut être faite que par une notification du réquisitoire qui permet d'ouvrir la contradiction.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le même sujet, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 9 juillet 2014, &lt;I style="mso-bidi-font-style: normal"&gt;communauté d'agglomération rouennaise et communauté de communes de Piémont Oloronais&lt;/I&gt; que l'on peut consulter sur le site &lt;I style="mso-bidi-font-style: normal"&gt;ccomptes.fr&lt;/I&gt;. Dans ces deux affaires, les chambres réunies ont procédé à une infirmation du jugement de première instance et non à une annulation.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137758.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137734">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137734</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">68299</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme DEMIER, Conseillère maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GANSER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>24/10/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">28/11/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/11/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Roquebrune-Cap-Martin (Alpes-Maritimes) - Appel d'un jugement de la chambre régionale des comptes de Provence-Alpes-Côte d'Azur - Exercices 2006 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137734.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137637">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>7ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137637</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67620</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. RESPLANDY-BERNARD, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GUEDON, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>08/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/11/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/11/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Centre d'expérimentation pédagogique (CEP) de Florac - Exercice 2006.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137637.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137515">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137515</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67904</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LAIR, Conseiller maitre</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. CHOUVET, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>21/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">20/11/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">20/11/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Trésorier-payeur général (TPG) des Bouches-du-Rhône - Exercices 2006 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 178.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Comptable supérieur</DESCRIPTEUR>
<DESCRIPTEUR>Recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Trop-payé</DESCRIPTEUR>
<DESCRIPTEUR>Reversement</DESCRIPTEUR>
<DESCRIPTEUR>Admission en non-valeur</DESCRIPTEUR>
<DESCRIPTEUR>Unité de caisse</DESCRIPTEUR>
<DESCRIPTEUR>Débet administratif</DESCRIPTEUR>
<DESCRIPTEUR>Délégation de signature</DESCRIPTEUR>
<DESCRIPTEUR>Qualité de l'ordonnateur</DESCRIPTEUR>
<DESCRIPTEUR>Manquement</DESCRIPTEUR>
<DESCRIPTEUR>Somme non rémissible</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
&lt;I style="mso-bidi-font-style: normal"&gt;La Cour des comptes a retenu plusieurs charges engageant la responsabilité de deux comptables et a notamment prononcé des débets au titre des motifs suivants :&lt;/I&gt;
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
* La responsabilité du comptable est engagée en cas de non-justification des créances dans les écritures ; elle l'est à hauteur de la totalité de la créance non intégralement justifiée et non à hauteur de la différence entre le montant de ladite créance et la partie de celle-ci susceptible d'être justifiée ou reconstituée.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
* Il est fait interdiction au comptable de compenser un trop versé et un trop perçu ; l'engagement de la responsabilité est à hauteur du trop versé.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
* Le comptable supérieur ne saurait s'exonérer de sa responsabilité en engageant tardivement la responsabilité d'un comptable subordonné après que le dossier concerné a fait l'objet d'une charge dans un réquisitoire qui lui a été notifié.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
&lt;I style="mso-bidi-font-style: normal"&gt;La Cour a mis à la charge d'un comptable plusieurs sommes non-rémissibles, en vertu des dispositions issues de la loi du 28 décembre 2011. Elle a relevé que :&lt;/I&gt;
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
* Le non-recouvrement d'une créance de l'Etat sur lui-même ne cause pas à l'Etat un préjudice financier, par application du principe d'unité de caisse.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
* Le comptable n'est pas mis en débet dès lors que le compte a été apuré à la suite d'une procédure administrative conduite à son terme, ce manquement étant alors sanctionné par une somme non rémissible.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
* Le paiement de mandats non accompagnés des pièces prévues par les textes n'entraîne pas un préjudice financier dès lors que la somme n'est pas indue. Il n'en constitue pas moins un manquement, sanctionné par une somme non-rémissible.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
* L'absence de vérification de la qualité de l'ordonnateur (en l'occurrence dans un cas de non-publication des délégations) n'entraîne pas de préjudice financier dès lors que l'objet des paiements est avéré.* Le cumul de manquements sur un même paiement (constitué à la fois par le défaut de vérification de la qualité de l'ordonnateur et par l'absence et de justificatifs et de certification du service fait) entraîne en l'espèce l'infliction d'une somme non rémissible pour chaque manquement.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.Le juge a infligé un total de sommes non-rémissibles par exercice supérieur au plafond, illustrant ainsi la position de la Cour sur l'interprétation de l'article 60 de la loi du 28 décembre 2011 : le maximum fixé par les textes en vigueur vaut par manquement et non par exercice. Cette interprétation a été confirmée depuis par le Conseil d'Etat,&lt;EM&gt;cf&lt;/EM&gt;. CC, 29 janvier 2013, &lt;EM&gt;CELRL&lt;/EM&gt;, Recueil 2013, p. 29 et CE, 21 mai 2014, &lt;EM&gt;n° 367254 &lt;/EM&gt;que l'on peut consulter sur le site &lt;EM&gt;légifrance.fr.&lt;/EM&gt;
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la limitation du débet au montant du seul trop payé déterminé au moyen d'éléments permettant une rectification du calcul de liquidation, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CE, 30 décembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CNIL&lt;/I&gt;, Recueil 2013, p. 245.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la substitution de la responsabilité d'un comptable subordonné à celle d'un comptable supérieur, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 3 mai 2004, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la Martinique&lt;/I&gt;, Recueil 2003, p. 91 ; CC, 3 avril 2007, &lt;I style="mso-bidi-font-style: normal"&gt;TPG des Bouches-du-Rhône&lt;/I&gt;, Recueil 2007, p. 27 et&lt;I style="mso-bidi-font-style: normal"&gt; &lt;/I&gt;CC, 6 novembre 2008, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de Seine-et-Marne&lt;/I&gt;, Recueil 2008, p. 66.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
L'absence de préjudice financier suppose non seulement l'existence d'un service fait mais encore l'existence de pièces justificatives nécessaires au contrôle de la validité de la créance, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 5 septembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ANPE&lt;/I&gt;, Recueil 2013, p. 130 et CC, 24 octobre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ENSP&lt;/I&gt;, Recueil 2013, p. 156.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la régularité d'une délégation de signature et l'obligation pour le comptable de contrôler la qualité de l'ordonnateur, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 3 mai 2007, &lt;I style="mso-bidi-font-style: normal"&gt;université Paris III - Sorbonne Nouvelle&lt;/I&gt;, Recueil 2007, p. 51 ; CC, 24 janvier 2012, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de Belfort&lt;/I&gt;, Recueil 2012, p. 17 ; CC, 26 juillet 2012, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM du ministère de l'outre-mer&lt;/I&gt;, Recueil 2012, p. 132 ; CC, 27 mars 2013, &lt;I style="mso-bidi-font-style: normal"&gt;DDFIP des Hauts-de-Seine&lt;/I&gt;, Recueil 2013, p. 45 et CC, 28 juin 2013, &lt;I style="mso-bidi-font-style: normal"&gt;TPG du Gard&lt;/I&gt;, Recueil 2013, p. 93.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur les conséquences à tirer du règlement d'une dépense au vu d'un mandat non signé ou n'émanant pas de l'ordonnateur, cf. CC, 14 février 2014, &lt;I style="mso-bidi-font-style: normal"&gt;INRIA&lt;/I&gt; et CC, 22 juillet 2014, &lt;I style="mso-bidi-font-style: normal"&gt;université de Limoges&lt;/I&gt;, que l'on peut consulter sur le site &lt;I style="mso-bidi-font-style: normal"&gt;ccomptes.fr&lt;/I&gt;.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le principe de publication des actes administratifs, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CE, 21 octobre 2005, &lt;I style="mso-bidi-font-style: normal"&gt;préfet d'Ille et Vilaine&lt;/I&gt;, n° 269361.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur des irrégularités de même nature constituant un manquement unique intervenues au cours d'un même exercice, &lt;I style="mso-bidi-font-style: normal"&gt;cf. &lt;/I&gt;CC, 24 juillet 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ABM&lt;/I&gt;, Recueil 2013, p. JF00135003 et CC, 24 octobre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ENSP&lt;/I&gt;, Recueil 2013, p. 156.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137515.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137150">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137150</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67950</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. THEROND, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme GADRIOT-RENARD, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>19/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/10/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/10/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Maurepas (Yvelines) - Appel d'un jugement de la chambre régionale des comptes d'Ile-de-France.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137150.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137148">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137148</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67948</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. THEROND, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. VERMEULEN, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>19/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/10/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/10/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Maurepas (Yvelines) - Appel d'un jugement de la chambre régionale des comptes d'Ile-de-France.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137148.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137146">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137146</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67984</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LAFAURE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>19/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/10/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/10/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Maison de retraite Saint-François à Vermenton (Yonne) - Appel d'un jugement de la chambre régionale des comptes de Bourgogne.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 167.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public local social et médico-social</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Reversement</DESCRIPTEUR>
<DESCRIPTEUR>Recours</DESCRIPTEUR>
<DESCRIPTEUR>Exactitude des calculs de liquidation</DESCRIPTEUR>
<DESCRIPTEUR>Délibération</DESCRIPTEUR>
<DESCRIPTEUR>Disponibilité des crédits</DESCRIPTEUR>
<DESCRIPTEUR>Infirmation</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
L'ordonnateur d'une maison de retraite avait passé une convention de recherches d'économies, en application de laquelle le comptable avait payé des honoraires au cocontractant. La convention ayant été déclarée illégale par le tribunal administratif, les sommes en cause avaient été restituées à l'établissement public. Saisie par réquisitoire desdits paiements au motif que la convention n'indiquait pas les prix au sens du code des marchés publics, la chambre régionale des comptes avait dit n'y avoir lieu à charge, au motif que des délibérations du conseil d'administration de l'établissement public valaient autorisation donnée au directeur de l'établissement de régler les factures et s'imposaient au comptable. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Saisie en appel par le procureur financier, la Cour a infirmé le jugement en rappelant que le contrôle de la disponibilité des crédits ne se confondait pas avec celui de la validité de la créance, après avoir écarté l'argument tiré des reversements obtenus du cocontractant, qui ne pouvaient être pris en compte qu'après épuisement des voies de recours tant devant le juge administratif que devant le juge financier.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Sur les conventions de recherche d'économies et l'absence d'effet exonératoire de délibérations à caractère purement budgétaire, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 8 décembre 2011, &lt;I style="mso-bidi-font-style: normal"&gt;maison de retraite Les Fontenottes&lt;/I&gt;, Recueil 2011, p 117.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le fait que les reversements des sommes irrégulièrement payées s'imputent sur le débet, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;.  CC, 4 avril 2013, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Verneuil-sur-Avre&lt;/I&gt;, que l'on peut consulter sur le site &lt;I style="mso-bidi-font-style: normal"&gt;ccomptes.fr&lt;/I&gt; et CC, 12 septembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;département de la Réunion&lt;/I&gt;, Recueil 2013, p. 141. La même solution est retenue en cas de reversement de fonds détournés dans un poste comptable, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 22 mai 2008, &lt;I style="mso-bidi-font-style: normal"&gt;SIAEP de Guerbigny&lt;/I&gt;, Recueil 2008, p. 14.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la notion de reversement précaire, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CE 23 avril 2000, &lt;I style="mso-bidi-font-style: normal"&gt;Mme Barthélemy&lt;/I&gt;, n° 187863 ;&lt;I style="mso-bidi-font-style: normal"&gt; &lt;/I&gt;CC, 5 juillet 2006, &lt;I style="mso-bidi-font-style: normal"&gt;communauté de communes de Plélan-le-Petit&lt;/I&gt;, Recueil 2006, p. 15 et&lt;I style="mso-bidi-font-style: normal"&gt; &lt;/I&gt;CC,&lt;I style="mso-bidi-font-style: normal"&gt; &lt;/I&gt;2 février 2012, &lt;I style="mso-bidi-font-style: normal"&gt;commune d'Auby&lt;/I&gt;, Recueil 2012, p. 35 et conclusions du Procureur général.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137146.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">ICBDT1VSIERFUyBDT01QVEVTCiAgICAgICAgICAgICAgIC0tLS0tLS0tClFVQVRSSUVNRSBDSEFNQlJFCiAgICAgICAgICAgICAgIC0tLS0tLS0tCiAgUFJFTUlFUkUgU0VDVElPTgogICAgICAgICAgICAgICAtLS0tLS0tLQogICAgICAgICAgQXJyw6p0IG7CsCA2Nzk4NAoKTUFJU09OIERFIFJFVFJBSVRFIMKrwqBTQUlOVC1GUkFOw4dPSVPCoMK7CkEgVkVSTUVOVE9OIChZb25uZSkKCkFwcGVsIGTigJl1biBqdWdlbWVudCBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgQm91cmdvZ25lCgpSYXBwb3J0IG7CsMKgMjAxMy01NTgtMAoKQXVkaWVuY2UgcHVibGlxdWUgZXQgZMOpbGliw6lyw6kgZHUgMTkgc2VwdGVtYnJlIDIwMTMKCkxlY3R1cmUgcHVibGlxdWUgZHUgMjQgb2N0b2JyZSAyMDEzCkxBIENPVVIgREVTIENPTVBURVMgYSByZW5kdSBs4oCZYXJyw6p0IHN1aXZhbnTCoDoKTEEgQ09VUiwKVnUgbGEgcmVxdcOqdGUsIGVucmVnaXN0csOpZSBsZSAxMSBtYXJzIDIwMTEgYXUgZ3JlZmZlIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyAoQ1JDKSBkZSBCb3VyZ29nbmUsIHBhciBsYXF1ZWxsZSBNLiBUaGllcnJ5IEZhcmVuYywgcHJvY3VyZXVyIGZpbmFuY2llciBwcsOocyBsYWRpdGUgY2hhbWJyZSwgYSDDqWxldsOpIGFwcGVsIGR1IGp1Z2VtZW50IGR1IDEzIGphbnZpZXIgMjAxMSBwYXIgbGVxdWVsIGNldHRlIENSQyBhIGTDqWNoYXJnw6kgZGUgc2EgZ2VzdGlvbiBNbWUgWCwgY29tcHRhYmxlIGRlIGxhIG1haXNvbiBkZSByZXRyYWl0ZSDCq8KgU0FJTlQtRlJBTsOHT0lTwqDCuyDDoCB2ZXJtZW50b24gKFlvbm5lKcKgOwpWdSBsZSByw6lxdWlzaXRvaXJlIGR1IFByb2N1cmV1ciBnw6luw6lyYWwgcHLDqHMgbGEgQ291ciBkZXMgY29tcHRlcyBkdSAyMiBhb8O7dCAyMDExIHRyYW5zbWV0dGFudCBsYSByZXF1w6p0ZSBwcsOpY2l0w6llIMOgIGxhIENvdXLCoDsKVnUgbGUgbcOpbW9pcmUgZW4gZMOpZmVuc2UgZXQgbGUgbcOpbW9pcmUgY29tcGzDqW1lbnRhaXJlIHByb2R1aXRzIHJlc3BlY3RpdmVtZW50IGxlcyAyMiBhdnJpbCBldCA5IG5vdmVtYnJlIDIwMTEgcGFyIE1tZSBYOwpWdSBsZXMgcGnDqGNlcyBkZSBsYSBwcm9jw6lkdXJlIHN1aXZpZSBlbiBwcmVtacOocmUgaW5zdGFuY2UgOwpWdSBsZSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzwqA7ClZ1IGxlIGNvZGUgZ8OpbsOpcmFsIGRlcyBjb2xsZWN0aXZpdMOpcyB0ZXJyaXRvcmlhbGVzwqA7ClZ1IGxlIGNvZGUgZGVzIG1hcmNow6lzIHB1YmxpY3PCoDsKVnUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGRlIGZpbmFuY2VzIG7CsMKgNjMtMTU2IGR1IDIzwqBmw6l2cmllcsKgMTk2MyBtb2RpZmnDqWXCoDsKVnUgbGUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjkgZMOpY2VtYnJlIDE5NjIgbW9kaWZpw6kgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgZW4gdmlndWV1ciBhdSBtb21lbnQgZGVzIGZhaXRzwqA7ClZ1IGxlIHJhcHBvcnQgZGUgTS4gSmVhbi1QaWVycmUgTGFmYXVyZSwgY29uc2VpbGxlciBtYcOudHJlwqA7ClZ1IGxlcyBjb25jbHVzaW9ucyBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIG7CsMKgNTk3IGR1IDkgc2VwdGVtYnJlIDIwMTPCoDsKRW50ZW5kdSwgbG9ycyBkZSBs4oCZYXVkaWVuY2UgcHVibGlxdWUsIE0uwqBMYWZhdXJlIGVuIHNvbiByYXBwb3J0LCBNLsKgWXZlcyBQZXJyaW4sIGF2b2NhdCBnw6luw6lyYWwsIGVuIGxlcyBjb25jbHVzaW9ucyBkdSBtaW5pc3TDqHJlIHB1YmxpYywgbGEgY29tcHRhYmxlIGVuIGNhdXNlLCBpbmZvcm3DqWUgZGUgbOKAmWF1ZGllbmNlLCBu4oCZw6l0YW50IG5pIHByw6lzZW50ZSBuaSByZXByw6lzZW50w6llwqA7CkVudGVuZHUsIGVuIGTDqWxpYsOpcsOpLCBNLsKgUm9jaC1PbGl2aWVyIE1haXN0cmUsIGNvbnNlaWxsZXIgbWHDrnRyZSwgZW4gc2VzIG9ic2VydmF0aW9uc8KgOwpBdHRlbmR1IHF1ZSwgbGUgMjAgYXZyaWwgMjAwNywgdW5lIMKrwqBjb252ZW50aW9uIGRlIHJlY2hlcmNoZSBk4oCZw6ljb25vbWllc8KgwrsgYSDDqXTDqSBjb25jbHVlIHNhbnMgZm9ybWFsaXTDqXMgZW50cmUgbGEgc29jacOpdMOpIMKrwqBjb2xsZWN0aXZpdMOpcyB0ZXJyaXRvcmlhbGVzIHJlc3NvdXJjZXPCoMK7IChDVFIpIGTigJl1bmUgcGFydCwgZXQgbGVzIG1haXNvbnMgZGUgcmV0cmFpdGUgZGUgUmF2acOocmVzLCBk4oCZQW5jeS1sZS1GcmFuYyBldCBkZSBTYWludC1GcmFuw6dvaXMgcmVwcsOpc2VudMOpZXMgcGFyIGxldXIgZGlyZWN0ZXVyIHVuaXF1ZSBk4oCZYXV0cmUgcGFydMKgOwpBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBk4oCZdW4gwqvCoG9yZHJlIGRlIG1pc3Npb27CoMK7IGRhdMOpIGR1IG3Dqm1lIGpvdXIsIGxlcyDDqXRhYmxpc3NlbWVudHMgc3VzbWVudGlvbm7DqXMgY2hhcmdlYWllbnQgbGEgc29jacOpdMOpIENUUiBkZSByZWNoZXJjaGVyIGRlcyDDqWNvbm9taWVzIGRlIGNoYXJnZXMgc29jaWFsZXMgZXQgZGUgdGF4ZXMgYXNzaXNlcyBzdXIgbGVzIHNhbGFpcmVzwqA7IHF14oCZdW4gYXZlbmFudCDDoCBjZXQgb3JkcmUgZGUgbWlzc2lvbiwgc2lnbsOpIGxlIDE5wqBqdWlsbGV0IDIwMTMsIHJhbcOobmUgbGUgdGF1eCBkZSByw6ltdW7DqXJhdGlvbiBkZSBsYSBzb2Npw6l0w6kgZGUgNTDCoCUgw6AgNDDCoCUgZGVzIMOpY29ub21pZXMgZGUgZ2VzdGlvbiByw6lhbGlzw6llc8KgOwpBdHRlbmR1IHF1ZSBs4oCZZXjDqWN1dGlvbiBkZSBjZSBjb250cmF0IHPigJllc3QgdHJhZHVpdGUgcGFyIHVuIHBhaWVtZW50IGRlIDM3wqAwOTgsNzLCoOKCrCBhdSBwcm9maXQgZGUgbGEgc29jacOpdMOpIENUUiBlbiAyMDA3wqA7IHF1ZSBjZSBwYWllbWVudCBzdWl0IGRldXggZMOpbGliw6lyYXRpb25zIGR1IGNvbnNlaWwgZOKAmWFkbWluaXN0cmF0aW9uIG1vZGlmaWFudCBsZXMgc2VjdGlvbnMgZMOpcGVuZGFuY2UgZXQgaMOpYmVyZ2VtZW50IGR1IGJ1ZGdldCBwcmltaXRpZiBkZSBs4oCZZXhlcmNpY2XCoDIwMDcgYWZpbiBkZSBjb25zdGF0ZXIgbGEgcmVjZXR0ZSBsacOpZSBhdSByZW1ib3Vyc2VtZW50IHN1ciBjaGFyZ2VzIGRlIHPDqWN1cml0w6kgc29jaWFsZSBldCBk4oCZYWZmZWN0ZXIgY2VzIHJlc3NvdXJjZXMgYnVkZ8OpdGFpcmVzIMOgIGRlcyBsaWduZXMgZGUgY3LDqWRpdHMgZW4gZMOpcGVuc2VzwqA7CkF0dGVuZHUgcXVlLCBwYXIgc29uIHLDqXF1aXNpdG9pcmUgZHUgMTUgamFudmllciAyMDEwLCBsZSBwcm9jdXJldXIgZmluYW5jaWVyIHByw6hzIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBhIHNhaXNpIGxhIGp1cmlkaWN0aW9uIGTigJl1bmUgcHLDqXNvbXB0aW9uIGRlIGNoYXJnZSDDoCByYWlzb24gZHUgcGFpZW1lbnQsIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA3LCBkZSBjZXR0ZSBzb21tZSBkZSAzN8KgMDk4LDcywqDigqwgYWxvcnMgcXVlIGxlIG1hbmRhdCBhZmbDqXJlbnQgw6l0YWl0IGFwcHV5w6kgZOKAmXVuIGNvbnRyYXQgcXVpIG5lIGNvbXBvcnRhaXQgcGFzIGxhIG1lbnRpb24gZHUgcHJpeCBkZSBsYSBwcmVzdGF0aW9uIG91IGRlcyBtb2RhbGl0w6lzIGRlIHNhIGTDqXRlcm1pbmF0aW9uwqA7IHF14oCZYWluc2kgbGEgY29tcHRhYmxlLCBNbWUgWCwgYXVyYWl0IGVuZ2Fnw6kgc2EgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlwqA7CkF0dGVuZHUgcXVlLCBkYW5zIHNvbiBqdWdlbWVudCBkdSAxMyBqYW52aWVyIDIwMTEsIGxhIENSQyBkZSBCb3VyZ29nbmUgYSBkw6ljaGFyZ8OpIE1tZSBYIGRlIHNhIGdlc3Rpb24gYXUgbW90aWYgcXVlIGxlcyBkw6lsaWLDqXJhdGlvbnMgZGUgbOKAmcOpdGFibGlzc2VtZW50IHB1YmxpYywgcXVpIGNvcnJlc3BvbmRlbnQgcHLDqWNpc8OpbWVudCBhdSBtb250YW50IGRlcyBob25vcmFpcmVzIG1hbmRhdMOpcywgZG9pdmVudCDDqnRyZSByZWdhcmTDqWVzIGNvbW1lIGzigJlhdXRvcmlzYXRpb24gZG9ubsOpZSBhdSBkaXJlY3RldXIgZGUgbOKAmcOpdGFibGlzc2VtZW50IGRlIHLDqWdsZXIgbGVzIGZhY3R1cmVzIGRlIGxhIHNvY2nDqXTDqSBDVFLCoDsgcXVlIGxlIGNvbnNlaWwgZOKAmWFkbWluaXN0cmF0aW9uIGF1cmFpdCBhaW5zaSBhdXRvcmlzw6kgbGUgcGFpZW1lbnQgYXUgcHJlc3RhdGFpcmUgZGFucyBsYSBsaW1pdGUgZGUgMzfCoDA5OSwwMMKg4oKswqA7IHF1ZSBjZXR0ZSB2b2xvbnTDqSBz4oCZaW1wb3NhaXQgw6AgbGEgY29tcHRhYmxlIGV0IHF1ZSwgc2F1ZiDDoCBz4oCZaW1taXNjZXIgZGFucyBsZSBjb250csO0bGUgZGUgbGEgbMOpZ2FsaXTDqSBpbnRlcm5lIGRlIGxhIGNvbnZlbnRpb24gcHLDqWNpdMOpZSwgbGEgY29tcHRhYmxlIG7igJlhdmFpdCBwYXMgbGUgcG91dm9pciBkZSBzdXNwZW5kcmUgbGUgcGFpZW1lbnTCoDsKQXR0ZW5kdSBxdWUgcGFyIGxhIHJlcXXDqnRlIHN1c3Zpc8OpZSBsZSBwcm9jdXJldXIgZmluYW5jaWVyIHByw6hzIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBhIGludGVyamV0w6kgYXBwZWwgZGUgY2UganVnZW1lbnTCoDsgcXXigJlpbCBlc3RpbWUgcXVlIGzigJlpbXByw6ljaXNpb24gZGUgbOKAmWFzc2lldHRlIGRlIGNhbGN1bCBkZXMgaG9ub3JhaXJlcyBldCBs4oCZYWJzZW5jZSBkZSBtYXhpbXVtIGF1IG1hcmNow6kgbmUgcGVybWV0dGFpZW50IHBhcyBhdSBjb21wdGFibGUgZOKAmWV4ZXJjZXIgbGVzIGNvbnRyw7RsZXMgcXVpIGx1aSBpbmNvbWJhaWVudCwgc2FucyBxdeKAmWlsIGFpdCDDoCBjb25zaWTDqXJlciBsYSBsw6lnYWxpdMOpIGludGVybmUgZHUgY29udHJhdMKgOwpBdHRlbmR1IHF1ZSBkYW5zIHNvbiBtw6ltb2lyZSBlbiBkw6lmZW5zZSwgTW1lIFggYXJndWUgcXVlIGxlIG1vbnRhbnQgbWF4aW1hbCBkdSBtYXJjaMOpIHNlIGTDqWR1aXQgZHUgbW9udGFudCB0b3RhbCBkZXMgY2hhcmdlc8KgOyBxdWUgbOKAmWFzc2lldHRlIGRlIGNhbGN1bCBkZXMgaG9ub3JhaXJlcyBzZSBkw6lkdWl0IGRlcyDDqWNvbm9taWVzIHLDqWFsaXPDqWVzwqA7IHF1ZSBsYSBkaXNjdXNzaW9uIGRlIGNlcyDDqWzDqW1lbnRzIHJlc3NvcnRpdCBkZSBs4oCZYW5hbHlzZSBkZSBs4oCZb2JqZXQgZHUgY29udHJhdCwgZG9udCBlbGxlIG7igJlhdmFpdCBwYXMgw6AganVnZXLCoDsgcXXigJllbmZpbiBsZXMgZMOpbGliw6lyYXRpb25zIGR1IGNvbnNlaWwgZOKAmWFkbWluaXN0cmF0aW9uIHPigJlpbXBvc2VudCBhdSBjb21wdGFibGXCoDsKU3VyIGzigJllZmZldCBkdSByZXZlcnNlbWVudCBvcMOpcsOpIHBhciBsYSBzb2Npw6l0w6kgQ1RSCkF0dGVuZHUgcXVlLCBzYWlzaSBwYXIgbOKAmW9yZG9ubmF0ZXVyIGRlIGzigJnDqXRhYmxpc3NlbWVudCwgbGUgdHJpYnVuYWwgYWRtaW5pc3RyYXRpZiBkZSBEaWpvbiwgY29uc2lkw6lyYW50IGxlcyBtb2RhbGl0w6lzIGRlIHBhc3NhdGlvbiBldCBsZXMgY2xhdXNlcyBkdSBjb250cmF0IGR1IDIwIGF2cmlsIDIwMDcsIGzigJlhIGTDqWNsYXLDqSBudWwgbGUgMTQgYXZyaWzCoDIwMTEgZXQgYSBjb25kYW1uw6kgbGEgc29jacOpdMOpIENUUiDDoCB2ZXJzZXIgw6AgbOKAmcOpdGFibGlzc2VtZW50IGxhIHNvbW1lIGRlIDM0wqAwOTgsNzLCoOKCrCwgYXNzb3J0aWUgZGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWzCoDsgcXVlIGxhIHNvY2nDqXTDqSBDVFIgYSB2ZXJzw6kgw6AgbGEgY2Fpc3NlIGRlIGzigJnDqXRhYmxpc3NlbWVudCBsYSBzb21tZSBkZSAzNMKgNDI2LDA3wqDigqwgbGUgMjkgYW/Du3QgMjAxMcKgOyBxdWUgTW1lIFggZW4ganVzdGlmaWUsIMOgIGzigJlhcHB1aSBkZSBzb24gbcOpbW9pcmUgY29tcGzDqW1lbnRhaXJlwqA7CkNvbnNpZMOpcmFudCBxdWUgbGEgcmVzcG9uc2FiaWxpdMOpIGR1IGNvbXB0YWJsZSBz4oCZYXBwcsOpY2llIGF1IG1vbWVudCBkdSBwYWllbWVudMKgOyBxdWUgbGUgcmV2ZXJzZW1lbnQgcHLDqWNpdMOpIHBvdXJyYWl0IHZlbmlyIGVuIGTDqWR1Y3Rpb24gZOKAmXVuIGTDqWJldCwgbG9yc3F14oCZaWwgYXVyYSBhY3F1aXMgdW4gY2FyYWN0w6hyZSBkw6lmaW5pdGlmLCBldCB1bmUgZm9pcyBsZXMgcmVjb3VycyBjb250ZW50aWV1eCBhY2hldsOpc8KgOwpDb25zaWTDqXJhbnQsIHBhciBhaWxsZXVycywgcXVlIGxhIGNvbXB0YWJsZSBu4oCZZXN0IHBhcyBjaGFyZ8OpZSBkZSBsYSB2w6lyaWZpY2F0aW9uIGRlIGxhIHLDqWd1bGFyaXTDqSBkZXMgY29uZGl0aW9ucyBk4oCZZW5nYWdlbWVudCBkZXMgZMOpcGVuc2VzLCBzb2l0LCBlbiBs4oCZZXNww6hjZSwgZGVzIGNvbmRpdGlvbnMgZGUgcHVibGljaXTDqSBldCBkZSBtaXNlIGVuIGNvbmN1cnJlbmNlIGTigJl1biBjb250cmF0wqA7ClN1ciBs4oCZZWZmZXQgZGVzIGTDqWxpYsOpcmF0aW9ucyBidWRnw6l0YWlyZXMgZGUgbOKAmcOpdGFibGlzc2VtZW50CkF0dGVuZHUgcXVlLCBwb3VyIMOpY2FydGVyIGxhIHJlc3BvbnNhYmlsaXTDqSBkZSBsYSBjb21wdGFibGUsIGxhIENSQyBkZSBCb3VyZ29nbmUgYSBjb25zaWTDqXLDqSBsZXMgZGV1eCBkw6lsaWLDqXJhdGlvbnMgZHUgMTkgb2N0b2JyZSAyMDA3IGRlIGzigJnDqXRhYmxpc3NlbWVudCwgwqvCoGNvbXB0ZSB0ZW51IGRlIGxhIHByw6ljaXNpb24gZGVzIG1vbnRhbnRzIGVuIGNhdXNlIGV0IGRlIGxldXIgY29uY29yZGFuY2UgYXZlYyBsYSBmYWN0dXJlwqDCuywgwqvCoGNvbW1lwqBs4oCZZXhwcmVzc2lvbiBkZSBsYSB2b2xvbnTDqSBkdSBjb25zZWlsIGTigJlhZG1pbmlzdHJhdGlvbiBk4oCZYXV0b3Jpc2VyIGxlIGRpcmVjdGV1ciDDoCByw6lnbGVyIGxlcyBob25vcmFpcmVzIGRlIGxhIHNvY2nDqXTDqSBDVFIgZGFucyBsYSBsaW1pdGUgZGUgMzfCoDA5OSwwMMKg4oKswqDCu8KgOyAKCkNvbnNpZMOpcmFudCBxdWUgbGVzIGRldXggZMOpbGliw6lyYXRpb25zIHByw6ljaXTDqWVzIG9udCB1biBjYXJhY3TDqHJlIGV0IHVuZSBwb3J0w6llIGV4Y2x1c2l2ZW1lbnQgYnVkZ8OpdGFpcmVzwqA7IHF14oCZZWxsZXMgbmUgbWVudGlvbm5lbnQgbmkgbGEgc29jacOpdMOpIENUUiwgbmkgbGUgY29udHJhdCBsYSBsaWFudCDDoCBs4oCZw6l0YWJsaXNzZW1lbnTCoDsgcXXigJllbGxlcyBzb250IHBvc3TDqXJpZXVyZXMgw6AgbGEgZmFjdHVyZSwgZG9uYyDDoCBs4oCZZXhwcmVzc2lvbiBk4oCZdW4gc2VydmljZSBmYWl0wqA7IHF14oCZZWxsZXMgbuKAmcOpdGFpZW50IHBhcyBqb2ludGVzIGF1IGNvbXB0ZSBwcm9kdWl0IHBhciBsYSBjb21wdGFibGUsIHBhcm1pIGxlcyBqdXN0aWZpY2F0aW9ucyBkZXMgZMOpcGVuc2VzIGFjcXVpdHTDqWVzwqA7CkNvbnNpZMOpcmFudCwgcGFyIGFpbGxldXJzIHF1ZSBs4oCZb3V2ZXJ0dXJlIGRlIGNyw6lkaXRzIGF1IGJ1ZGdldCBlc3QgdW5lIGNvbmRpdGlvbiBuw6ljZXNzYWlyZSDDoCBsYSByw6lndWxhcml0w6kgZGUgbGEgZMOpcGVuc2UsIG1haXMgcGFzIHN1ZmZpc2FudGXCoDsgcXVlIGxlIGNvbnRyw7RsZSBkZSBsYSBkaXNwb25pYmlsaXTDqSBkZXMgY3LDqWRpdHMgaW5jb21iZSBhdSBjb21wdGFibGUsIHBhciBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSAxMiBkdSBkw6ljcmV0IGR1IDI5IGTDqWNlbWJyZSAxOTYyIHN1c3Zpc8OpLCBtYWlzIHF14oCZaWwgbmUgc2UgY29uZm9uZCBwYXMgYXZlYyBjZWx1aSwgcHLDqXZ1IHBhciBsZSBtw6ptZSB0ZXh0ZSBldCBwcsOpY2lzw6kgw6AgbOKAmWFydGljbGUgMTMsIHN1ciBsYSB2YWxpZGl0w6kgZGUgbGEgY3LDqWFuY2XCoDsKQ29uc2lkw6lyYW50IHF14oCZaWwgcsOpc3VsdGUgZGVzIMOpbMOpbWVudHMgYWluc2kgcmFwcGVsw6lzIHF1ZSBsYSBDUkMgZGUgQm91cmdvZ25lIGEgY29tbWlzIHVuZSBlcnJldXIgZGUgZHJvaXQgZW4gc2UgZm9uZGFudCBzdXIgY2VzIGRldXggZMOpbGliw6lyYXRpb25zIHBvdXIgw6ljYXJ0ZXIgbGEgcmVzcG9uc2FiaWxpdMOpIGRlIGxhIGNvbXB0YWJsZcKgOyBxdeKAmWVuIGNvbnPDqXF1ZW5jZSBzb24ganVnZW1lbnQgZG9pdCDDqnRyZSBpbmZpcm3DqcKgOwpDb25zaWTDqXJhbnQgcXVlLCBwYXIgbOKAmWVmZmV0IGTDqXZvbHV0aWYgZGUgbOKAmWFwcGVsLCBsYSBDb3VyIGVzdCBlbiBtZXN1cmUgZGUgc3RhdHVlciBhdSBmb25kwqA7ClN1ciBsZSBjb250csO0bGUgZGVzIGNvbnZlbnRpb25zIGTigJnDqWNvbm9taWUgZXQgZGVzIG9yZHJlcyBkZSBtaXNzaW9uCkF0dGVuZHUgcXVlIGRhbnMgbGEgbW90aXZhdGlvbiBkZSBzb24ganVnZW1lbnQsIGxhIENSQyBkZSBCb3VyZ29nbmUgYSByZWxldsOpIHF1ZSBsYSBjb252ZW50aW9uIGRlIHJlY2hlcmNoZSBk4oCZw6ljb25vbWllcyBldCBzb24gYXZlbmFudCBuZSBjb21wb3J0YWllbnQgYXVjdW4gbW9udGFudCBwb3V2YW50IGNvcnJlc3BvbmRyZSBhdSBtb250YW50IG1heGltYWwgZHUgbWFyY2jDqcKgOyBxdWUgbGEgY29udmVudGlvbiBuZSBwcsOpdm95YWl0IHBhcyBub24gcGx1cyBkZSBkw6l0ZXJtaW5hdGlvbiBkdSBwcml4IHN1ZmZpc2FtbWVudCBleHBsaWNpdGUgcG91ciBjb25zaWTDqXJlciBxdWUgbGEgbWVudGlvbiBkdSBwcml4IG91IGRlcyBtb2RhbGl0w6lzIGRlIHNhIGTDqXRlcm1pbmF0aW9uIHkgZmlndXJhaWVudMKgOwpBdHRlbmR1IHF1ZSBsZSByZXF1w6lyYW50IGZhaXQgdmFsb2lyIHF1ZSBsZSBjb250cmF0IHBhc3PDqSBhdmVjIENUUiBwcsOpdm95YWl0IHVuZSByw6ltdW7DqXJhdGlvbiBleGNsdXNpdmVtZW50IGZvbmTDqWUgc3VyIHVuZSBmb3JtdWxlIGTigJlpbnTDqXJlc3NlbWVudCBhcHBsaXF1w6llIMOgIHVuZSBhc3NpZXR0ZSBjb25zdGl0dcOpZSBkZXMgY2hhcmdlcyBzb2NpYWxlcyBpbmTDu21lbnQgcsOpZ2zDqWVzLCBkb250IGxhIHZhbGV1ciBu4oCZZXN0IHBhcyBjb25udWUgbG9ycyBkZSBsYSBjb25jbHVzaW9uIGR1IG1hcmNow6ksIGNlIHF1aSBuZSBwZXJtZXQgcGFzIGRlIGNvbm5hw650cmUgbGUgcHJpeCBtYXhpbXVtIGR1IG1hcmNow6nCoDsKQXR0ZW5kdSBxdWUgbGEgY29tcHRhYmxlIGVzdGltZSBxdWUgbGUgcHJpeCBkdSBtYXJjaMOpIHNlIGTDqWR1aXQgZOKAmXVuIHRhdXggY29udHJhY3R1ZWwgZGUgcsOpbXVuw6lyYXRpb24sIGFwcGxpcXXDqSDDoCB1bmUgYXNzaWV0dGUsIHbDqXJpZmlhYmxlIMOgIGxhIGZhY3R1cmF0aW9uLCBk4oCZw6ljb25vbWllcyByw6lhbGlzw6llc8KgOyBxdWUgbGUgcHJpeCBtYXhpbWFsIGVzdCBjZWx1aSwgw6lnYWxlbWVudCB2w6lyaWZpYWJsZSwgZHUgdG90YWwgYnVkZ8OpdMOpIGRlcyBjaGFyZ2VzIHN1c2NlcHRpYmxlcyBk4oCZw6p0cmUgw6ljb25vbWlzw6llc8KgOwpBdHRlbmR1IHF1ZSBzZWxvbiBsYSBjb21wdGFibGUsIGxlIGNvbnRyw7RsZSBkZSBsYSByw6lndWxhcml0w6kgZHUgcHJpeCB0ZWwgcXXigJnDqXRhYmxpIHBhciBsZSBjb250cmF0IG5lIHJlbMOodmUgcGFzIGRlIGNlbHVpIGRlIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSBldCBkZSBs4oCZZXhhY3RpdHVkZSBkZXMgY2FsY3VscyBkZSBsaXF1aWRhdGlvbsKgOyBxdeKAmWlsIGNvbnN0aXR1ZSB1biBjb250csO0bGUgZGUgbMOpZ2FsaXTDqSBpbnRlcm5lIGRlIGzigJllbmdhZ2VtZW50IGRlIGxhIGTDqXBlbnNlwqA7IHF14oCZYWluc2kgaWwgbHVpIMOpdGFpdCBpbnRlcmRpdMKgOwpDb25zaWTDqXJhbnQgcXVlIMKrwqBsYSBjb252ZW50aW9uIGTigJnDqWNvbm9taWVzwqDCuyBldCB1biBvdSBkZXMgwqvCoG9yZHJlcyBkZSBtaXNzaW9uwqDCuyBmb3JtZW50LCBlbnNlbWJsZSwgdW4gbWFyY2jDqSBwdWJsaWMgY29uZm9ybWUgw6AgbGEgZMOpZmluaXRpb24gcXXigJllbiBkb25uZSBs4oCZYXJ0aWNsZSBwcmVtaWVyIGR1IGNvZGUgZGVzIG1hcmNow6lzIHB1YmxpY3PCoChDTVApwqA7IHF14oCZaWxzIGNvbnN0aXR1ZW50IHVuIG1hcmNow6kgZGUgY29uc2VpbCBlbiBnZXN0aW9uIGV0IHNlcnZpY2VzIGNvbm5leGVzLCBhdSBzZW5zIGRlIGzigJlhcnRpY2xlIDI5LTExIGR1ZGl0IGNvZGXCoDsKQ29uc2lkw6lyYW50IHF1ZSBsYSBydWJyaXF1ZSA0IGRlIGzigJlhbm5leGUgMSDDoCBs4oCZYXJ0aWNsZSBELsKgMTYxNy0xOSBkdSBjb2RlIGfDqW7DqXJhbCBkZXMgY29sbGVjdGl2aXTDqXMgdGVycml0b3JpYWxlcyBwcsOpY2lzZSBsYSBsaXN0ZSBkZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyDDoCBqb2luZHJlIGF1eCBwYWllbWVudHMgZmFpdHMgc3VyIG1hcmNow6lzIHB1YmxpY3PCoDsgcXVlIGzigJlhbm5leGUgRyDDoCBsYWRpdGUgbGlzdGUgbWVudGlvbm5lIGxlcyDCq8KgY2FyYWN0w6lyaXN0aXF1ZXMgZm9ybWVsbGVzIGRlcyBtYXJjaMOpcyBwdWJsaWNzwqDCuyBwYXJtaSBsZXNxdWVsbGVzIGZpZ3VyZW50IGxlIHByaXggb3Ugc2VzIG1vZGFsaXTDqXMgZGUgcsOoZ2xlbWVudMKgOwpDb25zaWTDqXJhbnQgcXVlIGzigJlhcnRpY2xlIDE3IGR1IENNUCBtZW50aW9ubmUgcXVlIGxlcyBwcml4IGRlcyBwcmVzdGF0aW9ucyBmYWlzYW50IGzigJlvYmpldCBk4oCZdW4gbWFyY2jDqSBzb250IHNvaXQgZGVzIHByaXggdW5pdGFpcmVzIGFwcGxpcXXDqXMgYXV4IHF1YW50aXTDqXMgcsOpZWxsZW1lbnQgbGl2csOpZXMgb3UgZXjDqWN1dMOpZXMsIHNvaXQgZGVzIHByaXggZm9yZmFpdGFpcmVzIGFwcGxpcXXDqXMgw6AgdG91dCBvdSBwYXJ0aWUgZHUgbWFyY2jDqSwgcXVlbGxlcyBxdWUgc29pZW50IGxlcyBxdWFudGl0w6lzIGxpdnLDqWVzIG91IGV4w6ljdXTDqWVzwqA7IHF1ZSBkZXMgY2xhdXNlcyBpbmNpdGF0aXZlcyBwZXV2ZW50IMOqdHJlIGluc8OpcsOpZXMgZGFucyBsZXMgbWFyY2jDqXPCoDsgcXXigJllbGxlcyBkb2l2ZW50IGF2b2lyIHBvdXIgZmluIMKrwqBk4oCZYW3DqWxpb3JlciBsZXMgZMOpbGFpcyBk4oCZZXjDqWN1dGlvbiwgZGUgcmVjaGVyY2hlciB1bmUgbWVpbGxldXJlIHF1YWxpdMOpIGRlcyBwcmVzdGF0YWlyZXMgZXQgZGUgcsOpZHVpcmUgbGVzIGNvw7t0cyBkZXMgcHJvZHVjdGlvbnPCoMK7wqA7IHF1ZSBs4oCZYXJ0aWNsZSAxMTggZHUgbcOqbWUgY29kZSBwcsOpdm9pdCBxdWUsIGxvcnNxdWUgbGUgbW9udGFudCBkZXMgcHJlc3RhdGlvbnMgZXhjdXTDqWVzIGF0dGVpbnQgbGUgbW9udGFudCBwcsOpdnUgcGFyIGxlIG1hcmNow6ksIGxhIHBvdXJzdWl0ZSBlc3Qgc291bWlzZSDDoCB1biBhdmVuYW50IG91LCBsb3JzcXVlIHByw6l2dSwgw6AgdW5lIGTDqWNpc2lvbiBkZSBwb3Vyc3VpdnJlwqA7CkNvbnNpZMOpcmFudCBxdWUgc+KAmWlsIGluY29tYmFpdCDDoCBsYSBjb21wdGFibGUgYXUgcmVnYXJkIGRlIHNlcyBvYmxpZ2F0aW9ucyBkZSBjb250csO0bGVyIGzigJlleGlzdGVuY2UgZHUgbWFyY2jDqSBldCwgZW4gbOKAmWVzcMOoY2UsIGRlIGNsYXVzZXMgZml4YW50IGxhIHLDqW11bsOpcmF0aW9uIGR1IGNvLWNvbnRyYWN0YW50IGV0IGTDqXRlcm1pbmFudCBzYSBsaXF1aWRhdGlvbiBzZWxvbiB1bmUgZm9ybXVsZSB2w6lyaWZpYWJsZSDDoCBsYSBmYWN0dXJhdGlvbiwgaWwgbmUgbHVpIHJldmVuYWl0IHBhcyBlbiByZXZhbmNoZSBkZSBz4oCZYXNzdXJlciwgYXZhbnQgcGFpZW1lbnQsIHNpIGNlcyBjbGF1c2VzIMOpdGFpZW50IHLDqWd1bGnDqHJlcyBhdSByZWdhcmQgZGVzIHByaW5jaXBlcyBldCBtb2RhbGl0w6lzIGFwcGxpY2FibGVzIGR1IENNUCwgZW4gcGFydGljdWxpZXIgZGUgc2VzIGFydGljbGVzIDE3IGV0IDExOCwgYXBwcsOpY2lhdGlvbiBxdWkgcmVsw6h2ZSBkdSBzZXVsIGNvbnRyw7RsZSBkZSBsw6lnYWxpdMOpwqA7CkNvbnNpZMOpcmFudCBxdeKAmWlsIHJlc3NvcnQgZGVzIHBpw6hjZXMgZXQgZGVzIGRpcmVzIGRlcyBwYXJ0aWVzIHF1ZSBsYSBjb21wdGFibGUgYSBwcm9jw6lkw6kgYXZhbnQgcGFpZW1lbnQgYXUgY29udHLDtGxlIGRlIGxhIGxpcXVpZGF0aW9uLCBmYWl0ZSBlbiBhcHBsaWNhdGlvbiBkZXMgY2xhdXNlcyBjb250cmFjdHVlbGxlcyBxdWkgZm9uZGVudCBsZSBtb2RlIGRlIHLDqW11bsOpcmF0aW9uIGR1IGNvLWNvbnRyYWN0YW50LCBhaW5zaSBxdWUgZOKAmXVuIG1heGltdW0sIMOpZ2FsIGF1IG1vbnRhbnQgYnVkZ8OpdMOpIGRlIGNoYXJnZXMgY29uY2VybsOpZXMgcGFyIGxlcyDDqWNvbm9taWVzIMOgIHJlY2hlcmNoZXLCoDsgcXXigJlhaW5zaSwgc2EgcmVzcG9uc2FiaWxpdMOpIG7igJllc3QgcGFzIGVuZ2Fnw6llwqA7ClBhciBjZXMgbW90aWZzLApEw6lDSURFwqA6CkFydGljbGUgMSAtIExlIGp1Z2VtZW50IGR1IDEzIGphbnZpZXIgwqAyMDExIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBkZSBCb3VyZ29nbmUgZXN0IGluZmlybcOpLgpBcnRpY2xlIDIgLSBJbCBu4oCZeSBhIHBhcyBsaWV1IGTigJllbmdhZ2VyIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZSBNbWUgWC4KLS0tLS0tLS0tLS0tCkZhaXQgZXQganVnw6kgZW4gbGEgQ291ciBkZXMgY29tcHRlcywgcXVhdHJpw6htZSBjaGFtYnJlLCBwcmVtacOocmUgc2VjdGlvbi4gUHLDqXNlbnRzwqA6IE1NLsKgQmF5bGUsIHByw6lzaWRlbnQsIE1haXN0cmUsIHByw6lzaWRlbnQgZGUgc2VjdGlvbiwgVmVybWV1bGVuLCBNbWVzwqBEb3MtUmVpcywgR2FkcmlvdC1SZW5hcmQsIGV0IE0uwqBHZW9mZnJveSwgY29uc2VpbGxlcnMgbWHDrnRyZXMuClNpZ27DqcKgOiBCYXlsZSwgcHLDqXNpZGVudCwgZXQgTGUgQmFyb24sIGdyZWZmaWVyLgpDb2xsYXRpb25uw6ksIGNlcnRpZmnDqSBjb25mb3JtZSDDoCBsYSBtaW51dGUgw6l0YW50IGF1IGdyZWZmZSBkZSBsYSBDb3VyIGRlcyBjb21wdGVzIGV0IGTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuCgpQb3VyIGxlIFNlY3LDqXRhaXJlIGfDqW7DqXJhbApldCBwYXIgZMOpbMOpZ2F0aW9uLApsZSBDaGVmIGR1IEdyZWZmZSBjb250ZW50aWV1eApEYW5pZWwgRkVSRVoK</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137144">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137144</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67936</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. DELOYE, Auditeur</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>12/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/10/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/10/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Brue-Auriac (Var) - Appel d'un jugement de la chambre régionale des comptes de Provence-Alpes-Côte-d'Azur (PACA). </TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 163.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Arrêté de charge provisoire</DESCRIPTEUR>
<DESCRIPTEUR>Etat de développement du solde</DESCRIPTEUR>
<DESCRIPTEUR>Restes à recouvrer</DESCRIPTEUR>
<DESCRIPTEUR>Manquant en deniers ou en valeur</DESCRIPTEUR>
<DESCRIPTEUR>Motivation</DESCRIPTEUR>
<DESCRIPTEUR>Réquisitoire</DESCRIPTEUR>
<DESCRIPTEUR>Qualification juridique</DESCRIPTEUR>
<DESCRIPTEUR>Annulation</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable communal avait fait l'objet d'un arrêté de charge provisoire du comptable supérieur au motif d'un écart sur un état de restes à recouvrer constitutif d'un manquant ; la chambre régionale, saisie d'un réquisitoire, avait prononcé un non-lieu à débet au motif que la somme en cause était la conséquence d'un détournement intervenu au cours d'un exercice atteint par la prescription. Sur la forme, saisie d'un moyen tenant à l'obligation de motivation, la Cour a estimé que celle-ci n'était pas satisfaite lorsque, comme en l'espèce, le jugement se bornait à rappeler les termes du réquisitoire et à citer l'une des catégories de manquements prévues par la loi du 23 février 1963 ; il convient en effet que le jugement discute, même succinctement, la qualification juridique de l'anomalie telle qu'argumentée au rapport et aux conclusions. Statuant au fond, la Cour a rappelé qu'en cas de manquant sur un état de restes à recouvrer, le fait générateur de responsabilité ne datait ni de l'exercice de prise en charge des titres, ni en l'espèce de celui où l'anomalie était apparue, mais de celui où persistait la créance litigieuse : le fait que le comptable ait été déchargé pour tel ou tel exercice antérieur ne s'opposait donc pas à la mise en jeu de sa responsabilité.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue dans le cadre des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'annulation pour défaut de motivation du jugement, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 7 octobre 1993, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Marseille&lt;/I&gt;, Recueil 1993, p 108 et, sur la possibilité de motivations succinctes &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 14, 21 décembre 1989 et 22 mars 1990, &lt;I style="mso-bidi-font-style: normal"&gt;OPHLM de Caen&lt;/I&gt;, Recueil 1990, p. 103. 
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137144.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137142">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137142</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67934</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. MAISTRE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>12/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/10/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/10/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Maison de retraite Fondation Roux à Vertheuil (Gironde) -  Appel d'un jugement de la chambre régionale des comptes d'Aquitaine, Poitou-Charentes.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 161.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public local social et médico-social</DESCRIPTEUR>
<DESCRIPTEUR>Délibération</DESCRIPTEUR>
<DESCRIPTEUR>Dépense</DESCRIPTEUR>
<DESCRIPTEUR>Imputation comptable</DESCRIPTEUR>
<DESCRIPTEUR>Contrôle de légalité</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Suspension de paiement</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable d'une maison de retraite avait imputé des dépenses conformément à des délibérations du conseil d'administration mais en contradiction avec les règles de la comptabilité publique. La Cour a rappelé qu'il appartenait au comptable d'effectuer le contrôle de l'exacte imputation des dépenses au regard des exigences du règlement général sur la comptabilité publique et que l'existence des délibérations ne l'exonérait pas de sa responsabilité. Par ailleurs, le comptable avait versé une NBI (nouvelle bonification indiciaire) à des agents contractuels alors que la loi la réserve à certains fonctionnaires. Pour rejeter son appel, la Cour a indiqué que le contrôle du comptable pouvait le conduire à porter une appréciation juridique sur les actes administratifs, qu'il lui appartenait alors d'en donner une interprétation conforme à la réglementation en vigueur ; par ailleurs, si les pièces justificatives sont contradictoires, le comptable doit suspendre le paiement. En l'espèce, le comptable aurait dû suspendre le paiement d'un abondement dénommé « NBI » dans les contrats, cette mention étant contradictoire avec les textes applicables. 
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un pourvoi en cassation a été introduit contre cet arrêt, sur la question de la NBI (problème du contrôle de légalité.)
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Cette décision a été rendue dans le cadre des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur les obligations incombant au comptable en matière de production des pièces justificatives contradictoires ou insuffisantes, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CE, 8 février 2012, &lt;I style="mso-bidi-font-style: normal"&gt;CCAS de Polaincourt&lt;/I&gt;, Recueil 2012, p. 203.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137142.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137140">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137140</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67942</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GEOFFROY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GANSER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>11/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>15/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/10/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/10/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Ecole nationale supérieure de la police (ENSP) - Exercices 2006 à 2011.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Décharge</SOLUTION>
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 156.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public administratif</DESCRIPTEUR>
<DESCRIPTEUR>Frais de représentation</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Mandat de paiement</DESCRIPTEUR>
<DESCRIPTEUR>Contrôle du comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Service fait</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR>
<DESCRIPTEUR>Somme non rémissible</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable avait payé des dépenses sans les pièces justificatives nécessaires, en l'occurrence une attestation de l'organisateur d'une réception. La Cour considère que l'irrégularité constatée n'entrainait &lt;I style="mso-bidi-font-style: normal"&gt;pas de préjudice financier&lt;/I&gt; car la facture et le mandat permettaient au comptable de connaitre l'objet de la manifestation et sa validation par le directeur de l'établissement. De même, pour la troisième charge, un paiement sans facture est jugé irrégulier mais n'entraine pas de préjudice financier, la Cour relevant que la convention prévoyant la dépense indiquait le montant et la date de réalisation de la prestation.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
En l'absence de préjudice, à l'occasion de la première charge, pour sept mandats litigieux en raison de l'identité de l'irrégularité, la Cour retient &lt;I style="mso-bidi-font-style: normal"&gt;un manquement unique&lt;/I&gt; et impose au comptable le versement d'une seule somme non rémissible.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
En revanche, pour d'autres dépenses, l'objet de la manifestation n'apparaissait ni sur les mandats ni sur les factures, ce qui, en application notamment de l'instruction M9 et d'une jurisprudence constante rendait les dépenses irrégulières. La Cour considère que cette cause d'irrégularité entraîne nécessairement un préjudice financier et elle met donc le comptable en débet, en rappelant « &lt;I style="mso-bidi-font-style: normal"&gt;que des dépenses qui ne peuvent être régulièrement financées par un établissement public lui portent un préjudice financier lorsqu'elles sont payées. &lt;/I&gt;»
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
En cas de pluralité de charges sur un même exercice, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 29 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CELRL&lt;/I&gt;, Recueil 2013, p. 29.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'existence du préjudice financier et les diligences du comptable, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 14 décembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;DRFIP du Nord-Pas-de-Calais et du département du Nord&lt;/I&gt;, Recueil 2012, p. 171 et CC, 5 septembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ANPE&lt;/I&gt;, Recueil 2013, p. 130.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137140.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137118">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137118</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67940</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LEGER, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>12/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/10/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/10/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Institut pour le développement des compétences en Nouvelle-Calédonie (IDC-NC) - Appel d'un jugement de la chambre territoriale des comptes de Nouvelle-Calédonie.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 155.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Collectivité territoriale</DESCRIPTEUR>
<DESCRIPTEUR>Outre-mer</DESCRIPTEUR>
<DESCRIPTEUR>Association</DESCRIPTEUR>
<DESCRIPTEUR>Organisme para-administratif</DESCRIPTEUR>
<DESCRIPTEUR>Formation</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable avait vu sa responsabilité mise en jeu pour avoir réglé des prestations de formation professionnelle en l'absence des marchés requis par le code des marchés publics applicable en Nouvelle-Calédonie. Il soutenait, en appel, que le bénéficiaire des payements, l'AFPA, devait être considéré comme un « &lt;I style="mso-bidi-font-style: normal"&gt;tiers public&lt;/I&gt; » au sens du décret du 2 septembre 1996 sur la liste des pièces justificatives concernant les paiements des collectivités en Nouvelle-Calédonie. La Cour a rejeté ce moyen en affirmant que l'AFPA, association de droit privé, était un prestataire qui devait faire l'objet d'une mise en concurrence et qu'elle ne pouvait donc être considérée comme un « tiers public, » terme qui recouvre les collectivités publiques de Nouvelle-Calédonie et les personnes morales sur lesquelles ces collectivités ont un pouvoir de direction. Le débet a donc été maintenu.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137118.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00137116">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00137116</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67938</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GEOFFROY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>12/09/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/10/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/10/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Païta (Nouvelle-Calédonie) - Appel d'un jugement de la chambre territoriale des comptes de Nouvelle-Calédonie.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 153.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Titre de recette</DESCRIPTEUR>
<DESCRIPTEUR>Recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Preuve</DESCRIPTEUR>
<DESCRIPTEUR>Annulation</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable, mis en débet pour avoir laissé prescrire une créance à l'encontre d'une collectivité, faisait valoir en appel que la créance en cause avait été déjà été recouvrée puis régularisée par l'émission d'un autre titre, le titre litigieux ayant été annulé en cours d'instance devant la chambre territoriale. La Cour a rappelé que la prise en charge d'un titre par le comptable présumait de l'existence de la créance, que si un titre n'était pas soldé, il revenait au comptable d'apporter la preuve que la créance n'avait pas à être recouvrée ; en particulier l'annulation par l'ordonnateur d'un titre non recouvré ne décharge le comptable de sa responsabilité que si elle se fonde sur des pièces attestant de l'inexistence de la créance associée au titre. En l'espèce, le comptable ayant apporté la preuve de l'émission du titre et du recouvrement du principal, le jugement initial a été infirmé.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Sur la responsabilité du comptable face à la prescription d'une créance &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 8 septembre 2011, &lt;I style="mso-bidi-font-style: normal"&gt;commune d'Argenteuil&lt;/I&gt;, Recueil 2011, p. 98 et 17 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Saint-Denis de la Réunion&lt;/I&gt;, Recueil 2013, p. 20.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00137116.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00136172">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00136172</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67810</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHAMPOMIER, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. LAIR, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/06/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">19/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">18/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction départementale des finances publiques (DDFIP) de l'Indre - Service des impôts des entreprises (SIE) - Service des impôts des particuliers du Blanc - Exercices 2006 et 2007.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 150
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Impôts</DESCRIPTEUR>
<DESCRIPTEUR>TVA</DESCRIPTEUR>
<DESCRIPTEUR>Procédure collective</DESCRIPTEUR>
<DESCRIPTEUR>Créance</DESCRIPTEUR>
<DESCRIPTEUR>Recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Caution</DESCRIPTEUR>
<DESCRIPTEUR>Irrégularité</DESCRIPTEUR>
<DESCRIPTEUR>Hypothèque</DESCRIPTEUR>
<DESCRIPTEUR>Prescription</DESCRIPTEUR>
<DESCRIPTEUR>Admission en non-valeur</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Une société à responsabilité limitée, déclarée en redressement judiciaire puis mise en liquidation judiciaire, était débitrice envers l'Etat de plusieurs créances fiscales. La Cour relève que pour une des créances de taxe sur la valeur ajoutée (TVA), le gérant de la société s'était porté caution personnelle et solidaire, et qu'une hypothèque légale du Trésor avait été inscrite sur les biens immobiliers de la caution. Or, la Cour constate qu'aucune procédure de saisie immobilière n'avait pu être engagée en raison d'irrégularités présentes dans l'acte de cautionnement. La Cour estime qu'en acceptant un acte de cautionnement irrégulier, le comptable de l'Etat a gravement compromis les chances de recouvrement de la somme restante à payer au titre de la créance de TVA. Dès lors, cette irrégularité n'a pas permis de recouvrer les créances sur le gérant et est donc à l'origine d'un préjudice financier pour l'Etat équivalent au montant de la somme devenue irrécouvrable. La Cour constitue donc le comptable en débet à cette hauteur.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'étendue des diligences du comptable, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 29 avril 2013, &lt;I style="mso-bidi-font-style: normal"&gt;direction régionale des douanes de Paris&lt;/I&gt;, Recueil 2013, p. 67.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00136172.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00136171">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00136171</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67809</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHAMPOMIER, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. LAIR, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/06/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">19/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">18/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction départementale des finances publiques (DDFIP) de l'Indre - Service des impôts des entreprises (SIE) - Service des impôts des particuliers d'Issoudun - Exercice 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Décharge</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00136171.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00136170">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00136170</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67808</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHAMPOMIER, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. LAIR, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/06/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">19/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">18/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction départementale des finances publiques (DDFIP) de l'Indre - Pôle de recouvrement spécialisé de Châteauroux - Exercice 2010.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00136170.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00136169">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00136169</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67807</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHAMPOMIER, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. LAIR, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/06/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">19/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">18/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction départementale des finances publiques (DDFIP) de l'Indre - Service des impôts des entreprises (SIE) de Châteauroux (ex recette divisionnaire de Châteauroux) - Exercice 2007.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 146.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Redressement judiciaire</DESCRIPTEUR>
<DESCRIPTEUR>Liquidation</DESCRIPTEUR>
<DESCRIPTEUR>TVA</DESCRIPTEUR>
<DESCRIPTEUR>Procédure collective</DESCRIPTEUR>
<DESCRIPTEUR>Créance non recouvrée</DESCRIPTEUR>
<DESCRIPTEUR>Extinction de l'action publique</DESCRIPTEUR>
<DESCRIPTEUR>Trésorerie</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Somme non rémissible</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable avait vu sa responsabilité engagée pour ne pas s'être acquitté de ses diligences. En effet, celui-ci n'avait pas déclaré à titre définitif au passif une créance de taxe sur la valeur ajoutée lors d'une procédure de sauvegarde mais au cours d'une procédure de redressement judiciaire d'une société. La créance est rejetée par le mandataire judiciaire du fait de l'expiration du délai de la déclaration et demeure irrécouvrée. Cependant, la Cour, au vu de l'état de reddition des comptes intervenu postérieurement au jugement de radiation de la société du tribunal de commerce, constate que les créanciers privilégiés n'avaient pas été désintéressés. Alors que le parquet avait considéré que l'insolvabilité du débiteur ne pouvait pas être présumée au moment de la prise en charge des créances, la Cour, appréciant le préjudice non au temps de l'action mais &lt;I style="mso-bidi-font-style: normal"&gt;in fine&lt;/I&gt;, considère que le manquement du comptable n'a pas engendré de préjudice financier. A ce titre, et contrairement aux conclusions du parquet, elle lui impose alors une somme non rémissible.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour a opéré un revirement de jurisprudence dans cette décision. Dorénavant, si le manquement reste apprécié au moment des faits, en revanche le préjudice financier est apprécié par la Cour, non au temps de l'(in)action du comptable mais &lt;I style="mso-bidi-font-style: normal"&gt;in fine&lt;/I&gt;. La Cour n'a pas suivi les conclusions du Procureur général qui estimait que « &lt;I style="mso-bidi-font-style: normal"&gt;l'absence de recouvrement de recettes, sauf dans le cas d'une insolvabilité avérée du débiteur antérieure à la prise en charge, par le comptable, des créances qu'il doit recouvrer, constitue dans tous les cas un préjudice financier pour l'organisme public &lt;/I&gt;».
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
En sens contraire (jurisprudence avant revirement), &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 21 mai 2013, &lt;I style="mso-bidi-font-style: normal"&gt;DDFIP des Côtes d'Armor - SIE de Saint-Brieuc Est&lt;/I&gt;, Recueil 2013, p. 74.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00136169.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00136167">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00136167</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67806</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHAMPOMIER, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. LAIR, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/06/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">19/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">18/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction départementale des finances publiques (DDFIP) de l'Indre - Service des impôts des entreprises (SIE) de Châteauroux-val de l'Indre (ancienne recette divisionnaire de Châteauroux) - Exercice 2006.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00136167.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135988">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135988</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67623</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GEOFFROY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>11/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>15/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">12/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">12/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Département de la Réunion - Appel d'un jugement de la chambre régionale des comptes de La Réunion.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 141.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Département</DESCRIPTEUR>
<DESCRIPTEUR>Double paiement</DESCRIPTEUR>
<DESCRIPTEUR>Régularisation</DESCRIPTEUR>
<DESCRIPTEUR>Réquisitoire</DESCRIPTEUR>
<DESCRIPTEUR>Reversement</DESCRIPTEUR>
<DESCRIPTEUR>Comptabilisation</DESCRIPTEUR>
<DESCRIPTEUR>Preuve</DESCRIPTEUR>
<DESCRIPTEUR>Informatique</DESCRIPTEUR>
<DESCRIPTEUR>Infirmation</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable départemental, mis en débet pour avoir payé à l'Etat deux fois la même dépense, soutenait en appel que le double paiement avait été régularisé. La Cour, tout en rappelant qu'en principe la responsabilité des comptables s'appréciait au moment des faits, a admis une « régularisation », le comptable ayant apporté en appel la preuve du recouvrement du trop-versé et de sa prise en compte dans les écritures du poste. Cette « régularisation » a toutefois des effets distincts selon la date à laquelle elle intervient : si, comme en l'espèce, elle est antérieure au réquisitoire du ministère public, il n'y a pas lieu à débet ; si elle lui est postérieure, les sommes reversées s'imputent sur le principal du débet, les intérêts restant dus. Pour vérifier la concordance entre le reversement et le double paiement litigieux, ainsi que la correcte prise en compte dans les écritures, la Cour s'appuie sur des éléments de preuve établis par des pièces, en l'espèce le rapprochement de factures, titres de recettes, correspondances papier ou électroniques, états de banque, états informatiques des encaissements, sous réserve que la fiabilité des éditions informatiques produites ne soit pas en cause.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue dans le cadre des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.C'est la première fois que la Cour se prononce sur l'effet de reversements antérieurs au réquisitoire (sur des affaires relevant du régime de la loi n° 2008-1091 du 28 octobre 2008), et considère que les doubles paiements ainsi régularisés ne peuvent donner lieu à débet. Sur le fait que les reversements tardifs des sommes irrégulièrement payées s'imputent sur le débet, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;.  CC&lt;I style="mso-bidi-font-style: normal"&gt;, &lt;/I&gt;4 avril 2013, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Verneuil sur Avre &lt;/I&gt;que l'on peut consulter sur le site &lt;EM&gt;ccomptes.fr&lt;/EM&gt;, et CC, 24 octobre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;maison de retraite Saint-François à Vermenton&lt;/I&gt;, Recueil 2013, p. 167. La même solution est retenue en cas de reversement de fonds ayant été détournés dans un poste comptable &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 22 mai 2008, &lt;I style="mso-bidi-font-style: normal"&gt;SIAEP de Guerbigny&lt;/I&gt;, Recueil 2008, p. 14.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135988.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135985">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135985</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67631</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. MAISTRE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>11/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>15/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">12/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">12/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Centre hospitalier de Montluçon (Allier) - Appel d'un jugement de la chambre régionale des comptes d'Auvergne, Rhône-Alpes.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135985.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135979">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135979</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67725</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GEOFFROY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. LAFAURE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>11/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>15/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">12/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">12/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Gestion de fait des deniers du centre hospitalier de Champagnole (Jura) - Appel d'un jugement de la chambre régionale des comptes de Franche-Comté.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Gestion de fait</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 136.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public hospitalier</DESCRIPTEUR>
<DESCRIPTEUR>Gestion de fait</DESCRIPTEUR>
<DESCRIPTEUR>Mandat fictif</DESCRIPTEUR>
<DESCRIPTEUR>Rémunération</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Service fait</DESCRIPTEUR>
<DESCRIPTEUR>Infirmation</DESCRIPTEUR>
<DESCRIPTEUR>Comptable de fait</DESCRIPTEUR>
<DESCRIPTEUR>Solidarité</DESCRIPTEUR>
<DESCRIPTEUR>Recevabilité</DESCRIPTEUR>
<DESCRIPTEUR>Délai d'appel</DESCRIPTEUR>
<DESCRIPTEUR>Moyen d'ordre public</DESCRIPTEUR>
<DESCRIPTEUR>Parties à l'instance</DESCRIPTEUR>
<DESCRIPTEUR>Notification</DESCRIPTEUR>
<DESCRIPTEUR>Impartialité</DESCRIPTEUR>
<DESCRIPTEUR>Observations définitives</DESCRIPTEUR>
<DESCRIPTEUR>Infirmation</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un directeur d'hôpital avait été constitué comptable de fait, solidairement avec la responsable des ressources humaines de l'établissement, laquelle avait bénéficié d'éléments indus de rémunération obtenus au moyen de faux en écritures.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Saisie en appel du défaut de notification d'une pièce, la Cour a indiqué que les parties avaient accès au dossier et que la juridiction était tenue de notifier les seuls éléments produits après la clôture de l'instruction et dans la seule mesure où le juge en tire un élément à charge. En outre, la publication par la juridiction d'un rapport d'observations définitives qui, tout en faisant état de désordres de gestion, n'évoque pas les éléments d'une gestion de fait présumée n'est pas constitutif de préjugement et ne disqualifie pas le juge pour connaître de l'affaire au titre de ses compétences juridictionnelles.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le fond, après avoir rappelé que le mandat fictif en dépenses se caractérisait par la dissimulation au comptable patent de l'objet desdites dépenses, la Cour a considéré que le fait qu'une personne ait été rémunérée au-delà de ses droits sur la base de pièces fausses présentées au comptable ne suffisait pas à caractériser un mandat fictif, dès lors qu' il y avait service fait et que le service mentionné sur les pièces était conforme à l'affectation réelle de la personne. Elle a infirmé la déclaration de gestion de fait à l'égard de l'appelant et, se fondant sur la solidarité entre comptables de fait, elle a étendu le bénéfice de cette solution à l'autre personne non appelante qui avait été déclarée comptable de fait en première instance.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Sur les moyens d'appel présentés hors délai : pour juger de la recevabilité d'un moyen, la Cour s'en tient au délai réglementaire de deux mois prévu par le code des juridictions financières ; elle applique ce délai strict à tous les moyens, sauf ceux d'ordre public, et ne fait donc pas application de la théorie des «&lt;I style="mso-bidi-font-style: normal"&gt;causes juridiques&lt;/I&gt;» dégagée par le juge de droit commun, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CE, 20 février 1953, &lt;I style="mso-bidi-font-style: normal"&gt;société Intercopie&lt;/I&gt;, et CE, 14 février 2011, n° 320516, &lt;I style="mso-bidi-font-style: normal"&gt;conseil départemental de Paris de l'ordre des chirurgiens-dentistes&lt;/I&gt;. Sur le fait qu'un mémoire présenté au-delà du délai de deux mois est examiné par le juge d'appel pour autant qu'il n'invoque pas de moyen nouveau, ou s'il invoque un moyen d'ordre public, à soulever d'office, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 février 2000, &lt;I style="mso-bidi-font-style: normal"&gt;commune d'Istres&lt;/I&gt;, Recueil 2000, p. 24 et 30 mai 2002, &lt;I style="mso-bidi-font-style: normal"&gt;commune d'Huez&lt;/I&gt;, Recueil 2002, p. 65. Plus généralement, sur le caractère d'ordre public du moyen tenant au manquement à l'impartialité de la formation de jugement, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CE, 16 juin 2008, &lt;I style="mso-bidi-font-style: normal"&gt;association les Amis de Méru information/commune de Méru&lt;/I&gt;, Recueil 2008, p. 103.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la « circularisation » des pièces : la Cour transpose aux procédures issues de la loi n° 2008-1091 du 28 octobre 2008  ses anciennes jurisprudences : elle y vérifiait si le contradictoire avait eu lieu en cas de non-communication d'une pièce ; elle ne prononçait l'annulation que si le jugement se fondait, au moins en partie, sur la pièce en question qui n'avait pas été communiquée c&lt;I style="mso-bidi-font-style: normal"&gt;f.&lt;/I&gt; par exemple CC, 25 mars 1991, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Cuers&lt;/I&gt;, Recueil 1991, p. 18, et ne sanctionnait pas le jugement à ce motif dans les autres cas&lt;I style="mso-bidi-font-style: normal"&gt; cf&lt;/I&gt;. CC, 4 mai 1993&lt;I style="mso-bidi-font-style: normal"&gt;, commune de La Ciotat/OEil Emergence&lt;/I&gt;, Recueil 1993, p. 62.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la disqualification du juge à raison de la publication d'un document public évoquant l'affaire : il n'y a pas de disqualification si le rapport publié ne porte aucune appréciation sur la gravité des faits et l'imputation personnelle des responsabilités &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CE, 10 mai 2004, &lt;I style="mso-bidi-font-style: normal"&gt;ADEEC&lt;/I&gt;, Recueil 2004, p. 145 ; CC, 29 novembre 2007, &lt;I&gt;COM de Polynésie française&lt;/I&gt;, Recueil 2007, p. 76 et CC, 4 juillet 2013, &lt;I&gt;CCIN&lt;/I&gt;, Recueil 2013, p. 99.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le mandat fictif en dépenses à raison d'emplois publics &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;.  CC, 12 mars 1998, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Levallois-Perret&lt;/I&gt;, Recueil 1998, p. 39 (dissimulation de l'affectation réelle des agents).
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'incompétence de la Cour pour condamner une partie à payer des frais à l'autre &lt;I style="mso-bidi-font-style: normal"&gt;cf. &lt;/I&gt;CC, 6 mai 2010, &lt;I style="mso-bidi-font-style: normal"&gt;association centre culturel Michel Simon à Noisy-le-Grand&lt;/I&gt;, Recueil 2010, p. 39 et CC, 23 juillet 2012, &lt;I style="mso-bidi-font-style: normal"&gt;université de Savoie&lt;/I&gt;, Recueil 2012, p. 137.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135979.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135839">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>3ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135839</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67812</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. SAUDUBRAY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. TOURNIER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>24/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">06/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">06/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Centre national de la chanson, des variétés et du jazz (CNV) - Exercices 2006 et 2007. </TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 134.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public industriel et commercial</DESCRIPTEUR>
<DESCRIPTEUR>Créance non recouvrée</DESCRIPTEUR>
<DESCRIPTEUR>Prescription quadriennale</DESCRIPTEUR>
<DESCRIPTEUR>Taxe parafiscale</DESCRIPTEUR>
<DESCRIPTEUR>Titre de recette</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
La Cour rappelle la distinction entre prescription d'assiette et prescription de recouvrement. En l'occurrence, un agent comptable n'avait pas effectué les diligences qui lui incombaient en vue du recouvrement de plusieurs ordres de recettes émis par un établissement public pour interrompre utilement la prescription. Le comptable invoque la prescription trentenaire du code civil. Le fondement est écarté par la Cour qui rappelle que la prescription s'appliquant à la perception des taxes parafiscales se décompte dans un délai de quatre ans (en application du décret du 30 octobre 1980) à partir du jour où le titre de perception a été rendu exécutoire, contrairement à la prescription de l'émission de ces taxes qui, elle, est trentenaire. Les créances étant atteintes par la prescription, la Cour constitue le comptable en débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Il existe deux types de prescription : la prescription d'assiette et la prescription de recouvrement. La prescription d'assiette est la durée courue à partir du fait générateur d'une créance et au terme de laquelle l'ordonnateur n'est plus en droit d'émettre le titre de recette concernant cette créance. La prescription de recouvrement est la durée ouverte par l'émission du titre de recette par l'ordonnateur et à l'issue de laquelle le recouvrement de la créance ne peut plus être exigé par le comptable, car celle-ci est éteinte, si aucune intervention n'est venue interrompre l'écoulement de la durée de cette prescription.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la durée des délais de prescription, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. &lt;I style="mso-bidi-font-style: normal"&gt;CPG&lt;/I&gt;, 1 février 2007, Recueil 2007, p. 142 et CC, 12 décembre 2011, &lt;I style="mso-bidi-font-style: normal"&gt;TPG des créances spéciales du Trésor&lt;/I&gt;, Recueil 2011, p. 124.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135839.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135837">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>3ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135837</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67819</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GLIMET, Conseiller maître</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme SEYVET, Conseillere maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>12/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">06/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">06/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Arrêtés conservatoires de débet - Lycée Augustin Ty à Touho (Nouvelle-Calédonie) - Exercices 2003 et 2004.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 133.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public local d'enseignement</DESCRIPTEUR>
<DESCRIPTEUR>Comptable supérieur</DESCRIPTEUR>
<DESCRIPTEUR>Arrêté conservatoire de débet</DESCRIPTEUR>
<DESCRIPTEUR>Réquisitoire</DESCRIPTEUR>
<DESCRIPTEUR>Dépense</DESCRIPTEUR>
<DESCRIPTEUR>Contrôle</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Décharge du comptable</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
La Cour a été saisie d'un arrêté conservatoire de débet pris par un trésorier-payeur général à l'encontre de l'agent comptable d'un établissement public local d'enseignement pour défaut de justification de dépenses liées à un voyage scolaire. Lors de l'instruction, le rapporteur a relevé d'autres charges non soulevées par le trésorier-payeur général. Le juge des comptes a rappelé ne pouvoir se prononcer que dans les limites de la charge telle qu'elle a été définie par l'arrêté conservatoire de débet et dans le réquisitoire. Ayant constaté l'insuffisance des pièces justificatives fournies par le trésorier-payeur général pour motiver la charge retenue dans son arrêté conservatoire de débet, la Cour a déchargé le comptable.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135837.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135835">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>3ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135835</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67814</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. SAUDUBRAY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. SABBE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>24/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">06/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">06/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Service du contrôle budgétaire et comptable ministériel (CBCM) placé auprès du ministère de la culture et de la communication - Exercices 2007 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 132.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Ministère</DESCRIPTEUR>
<DESCRIPTEUR>Mécénat</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Service fait</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Exactitude des calculs de liquidation</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
La Cour rappelle qu'une pièce prévue par un contrat doit être produite. En l'occurrence, le comptable avait effectué un paiement à une société de recherche de partenariat et de mécénat sur la base d'une facture sans s'assurer de l'exécution du service fait que devait établir la remise des conventions de partenariat obtenues. Par ailleurs, il devait vérifier les calculs de liquidation sur la base de la commission de 5% prévue sur les fonds de mécénat, ce qui s'est révélé impossible sur la base des chiffres et des pièces à l'appui. A défaut, la Cour a prononcé un débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.Sur les diligences du comptable et l'absence de pièces justificatives, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CRC Ile-de France, 9 février 2012, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Dugny&lt;/I&gt;, Recueil 2012, p. 41 ; CC, 21 décembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la Haute-Loire&lt;/I&gt;, Recueil 2012, p. 181 et CC, 28 décembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;grand port maritime de Nantes Saint-Nazaire&lt;/I&gt;, Recueil 2012, p. 183.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135835.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135831">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>5ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135831</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67782</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. BACCOU, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. CAHUZAC, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>24/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">05/09/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">05/09/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Agence nationale pour l'emploi (ANPE) - Exercices 2006 à 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 130.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public administratif</DESCRIPTEUR>
<DESCRIPTEUR>Personnel</DESCRIPTEUR>
<DESCRIPTEUR>Indemnité</DESCRIPTEUR>
<DESCRIPTEUR>Service fait</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Responsabilité</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Validité de la créance</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable avait effectué le paiement d'une indemnité dans des conditions irrégulières. L'absence de préjudice financier suppose non seulement l'existence d'un service fait mais encore l'existence de pièces justificatives nécessaires au contrôle de la validité de la créance, ce qui n'est pas le cas en l'espèce. La Cour constitue donc le comptable en débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le paiement irrégulier d'indemnités par le comptable en l'absence de fondement juridique au moment du paiement, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 25 septembre 2008, &lt;I style="mso-bidi-font-style: normal"&gt;AMOTMJ&lt;/I&gt;, Recueil 2008, p. 48 ; CC, 24 février 2009, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la Seine-Saint-Denis&lt;/I&gt;, Recueil 2009, p. 10 et CC, 20 novembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;TPG des Bouches du Rhône&lt;/I&gt;, Recueil 2013, p. 178.Sur la reconnaissance du préjudice financier et les diligences du comptable, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 octobre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ENSP&lt;/I&gt;, Recueil 2013, p. 156. 
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135831.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135243">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135243</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67542</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme SMANIOTTO-GRUSKA, Conseillere referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>04/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">29/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Lycée polyvalent La Jetée du François (Martinique) - Appel d'un jugement de la chambre régionale des comptes de Martinique.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135243.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">CgoKQ09VUiBERVMgQ09NUFRFUwogICAgICAgICAgICAgICAtLS0tLS0tLQpRVUFUUklFTUUgQ0hBTUJSRQogICAgICAgICAgICAgICAtLS0tLS0tLQpQUkVNSUVSRSBTRUNUSU9OCiAgICAgICAgICAgICAgIC0tLS0tLS0tCgogICAgIEFycsOqdCBuwrAgNjc1NDIKCgpMWUNFRSBQT0xZVkFMRU5UIExBIEpFVEVFIERVIEZSQU7Dp29pcyAoTWFydGluaXF1ZSkKCkFwcGVsIGTigJl1biBqdWdlbWVudCBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgTWFydGluaXF1ZQoKUmFwcG9ydCBuwrAgMjAxMy0zNzAtMAoKQXVkaWVuY2UgZXQgZMOpbGliw6lyw6kgZHUgNCBqdWlsbGV0IDIwMTMKCkxlY3R1cmUgcHVibGlxdWUgZHUgMjUganVpbGxldCAyMDEzCgoKTEEgQ09VUiBERVMgQ09NUFRFUyBhIHJlbmR1IGzigJlhcnLDqnQgc3VpdmFudMKgOgpMQSBDT1VSLApWdSBsYSByZXF1w6p0ZSwgZW5yZWdpc3Ryw6llIGxlIDcgZMOpY2VtYnJlIDIwMTEgYXUgZ3JlZmZlIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyAoQ1JDKSBkZSBNYXJ0aW5pcXVlLCBwYXIgbGFxdWVsbGUgTS4gWCwgY29tcHRhYmxlIGR1IGx5Y8OpZSBwb2x5dmFsZW50IExhIEpldMOpZSBkdSBGcmFuw6dvaXMgKE1hcnRpbmlxdWUpIGR1IDE0IHNlcHRlbWJyZSAxOTk2IGF1IDMxIGFvw7t0IDE5OTgsIGEgw6lsZXbDqSBhcHBlbCBkdSBqdWdlbWVudCBuwrAgMjAwMS0wMTIzIGR1IDYgbm92ZW1icmUgMjAwMSBwYXIgbGVxdWVsIGxhZGl0ZSBjaGFtYnJlLCBzdGF0dWFudCBwcm92aXNvaXJlbWVudCwgYSBzdXJzaXMgw6Agc2EgZMOpY2hhcmdlIHBvdXIgbOKAmWVuc2VtYmxlIGRlIHNhIGdlc3Rpb27CoDsKVnUgbGUgcsOpcXVpc2l0b2lyZSBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIHByw6hzIGxhIENvdXIgZGVzIGNvbXB0ZXMgbsKwIDIwMTItMjkgZHUgMTYgbWFpIDIwMTIgdHJhbnNtZXR0YW50IMOgIGxhIENvdXIgbGEgcmVxdcOqdGUgcHLDqWNpdMOpZSA7ClZ1IGxlIGNvZGUgZGVzIGp1cmlkaWN0aW9ucyBmaW5hbmNpw6hyZXPCoDsKVnUgbGUgcmFwcG9ydCBkZSBNbWUgU3lsdmllIFNtYW5pb3R0bywgY29uc2VpbGxlciByw6lmw6lyZW5kYWlyZcKgOwpWdSBsZXMgY29uY2x1c2lvbnMgZHUgUHJvY3VyZXVyIGfDqW7DqXJhbCBuwrDCoDQ4MCBkdSAyIGp1aWxsZXQgMjAxM8KgOwoKRW50ZW5kdSwgbG9ycyBkZSBs4oCZYXVkaWVuY2UgcHVibGlxdWUgZGUgY2Ugam91ciwgTW1lIFN5bHZpZSBTbWFuaW90dG8sIGVuIHNvbiByYXBwb3J0LCBNLiBMdWMgSMOpcml0aWVyLCBjaGFyZ8OpIGRlIG1pc3Npb24gYXUgcGFycXVldCBnw6luw6lyYWwsIGVuIGxlcyBjb25jbHVzaW9ucyBkdSBtaW5pc3TDqHJlIHB1YmxpYywgbOKAmWFwcGVsYW50LCBNLiBYLCBpbmZvcm3DqSBkZSBs4oCZYXVkaWVuY2UsIG7igJnDqXRhbnQgbmkgcHLDqXNlbnQgbmkgcmVwcsOpc2VudMOpwqA7CkVudGVuZHUsIGVuIGTDqWxpYsOpcsOpLCBob3JzIGxhIHByw6lzZW5jZSBkdSByYXBwb3J0ZXVyIGV0IGR1IG1pbmlzdMOocmUgcHVibGljLCBNLiBSb2NoLU9saXZpZXIgTWFpc3RyZSwgY29uc2VpbGxlciBtYcOudHJlLCBlbiBzZXMgb2JzZXJ2YXRpb25zwqA7CkF0dGVuZHUgcXVlIGxlIHJlY291cnMgZGUgTS4gWCBlc3QgZGlyaWfDqSBjb250cmUgbGUgZmFpdCBxdWUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGFpdCBzdXJzaXMgw6Agc2EgZMOpY2hhcmdlwqA7CkNvbnNpZMOpcmFudCBxdSdlbiBhcHBsaWNhdGlvbiBkZSBsJ2FydGljbGUgUi4gMjQzLTEgZHUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlcywgZW4gdmlndWV1ciBhdSBtb21lbnQgb8O5IGzigJlhcHBlbCBhIMOpdMOpIGludGVyamV0w6ksIMKrwqBMZXMganVnZW1lbnRzIGV0IG9yZG9ubmFuY2VzIHJlbmR1cyBwYXIgbGVzIGNoYW1icmVzIHLDqWdpb25hbGVzIGRlcyBjb21wdGVzIHBldXZlbnQgw6p0cmUgYXR0YXF1w6lzIGRhbnMgbGV1cnMgZGlzcG9zaXRpb25zIGTDqWZpbml0aXZlcyBwYXIgbGEgdm9pZSBkZSBsJ2FwcGVsIGRldmFudCBsYSBDb3VyIGRlcyBjb21wdGVzwqDCu8KgOyAKQ29uc2lkw6lyYW50IHF1ZSBsZSBzdXJzaXMgw6AgZMOpY2hhcmdlIHByb25vbmPDqSBwYXIgdW5lIGp1cmlkaWN0aW9uIGZpbmFuY2nDqHJlIHJldsOqdCB1biBjYXJhY3TDqHJlIHByb3Zpc29pcmXCoDsgcXXigJlhaW5zaSBsYSByZXF1w6p0ZSBu4oCZZXN0IHBhcyByZWNldmFibGXCoDsKClBhciBjZXMgbW90aWZzLAoKREVDSURFwqA6CgpBcnRpY2xlIHVuaXF1ZcKgOiBMYSByZXF1w6p0ZSBkZSBNLiBYIGVzdCBpcnJlY2V2YWJsZS4KCkZhaXQgZXQganVnw6kgZW4gbGEgQ291ciBkZXMgY29tcHRlcywgcXVhdHJpw6htZSBjaGFtYnJlLCBwcmVtacOocmUgc2VjdGlvbi4gUHLDqXNlbnRzIDogTU0uwqBCYXlsZSwgcHLDqXNpZGVudCwgTWFpc3RyZSwgcHLDqXNpZGVudCBkZSBzZWN0aW9uLCBHYW5zZXIsIFZlcm1ldWxlbiwgUm91c3NlbG90IGV0IEdlb2Zmcm95LCBjb25zZWlsbGVycyBtYcOudHJlcy4gCgpTaWduw6kgOsKgQmF5bGUsIHByw6lzaWRlbnQsIGV0IEbDqXJleiwgZ3JlZmZpZXIuCgpDb2xsYXRpb25uw6ksIGNlcnRpZmnDqSBjb25mb3JtZSDDoCBsYSBtaW51dGUgw6l0YW50IGF1IGdyZWZmZSBkZSBsYSBDb3VyIGRlcyBjb21wdGVzIGV0IGTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuCgpQb3VyIGxlIFNlY3LDqXRhaXJlIGfDqW7DqXJhbApldCBwYXIgZMOpbMOpZ2F0aW9uLApsZSBDaGVmIGR1IEdyZWZmZSBjb250ZW50aWV1eAoKCgoKCgoKCkRhbmllbCBGRVJFWgo=</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135241">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135241</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67538</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. ROGUE, Auditeur</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>04/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">29/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Collège Eugène Varlin au Havre (Seine-Maritime) - Appel d'un jugement de la chambre régionale des comptes de Haute-Normandie - Exercices 2004 à 2007.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135241.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135009">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135009</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67567</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme SMANIOTTO-GRUSKA, Conseillere referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>04/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Syndicat mixte pour le développement de la zone industrielle et portuaire Eure-Calvados (ZIPEC) - Appel d'un jugement de la chambre régionale des comptes de Basse-Normandie</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 123.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Syndicat mixte</DESCRIPTEUR>
<DESCRIPTEUR>Créance</DESCRIPTEUR>
<DESCRIPTEUR>Prescription</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Mise en recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Ordonnateur</DESCRIPTEUR>
<DESCRIPTEUR>Preuve</DESCRIPTEUR>
<DESCRIPTEUR>Procédure collective</DESCRIPTEUR>
<DESCRIPTEUR>Rejet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Des créances de loyers avaient été atteintes par la prescription sous la gestion du comptable d'un établissement public local, durant sa période de liquidation. Saisie en appel d'un débet prononcé par la chambre régionale des comptes, la Cour a d'abord rappelé sa jurisprudence constante selon laquelle, lorsqu'il a connaissance d'une créance non réclamée, le comptable est tenu de demander à l'ordonnateur de la notifier au créancier. Dans le cas d'un organisme en liquidation, elle a précisé que cette demande devait être faite au liquidateur, ordonnateur des recettes et des dépenses. Le comptable n'ayant pas apporté pas la preuve de cette diligence, la Cour a écarté l'argument tenant à l'inaction des liquidateurs, alors même que le comptable les aurait dûment informés de l'existence des baux correspondants.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue dans le cadre des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation générale pour le comptable de préserver une créance dont il a connaissance, et ce dès avant l'émission du titre &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 30 octobre 2008, &lt;I style="mso-bidi-font-style: normal"&gt;région Rhône-Alpes&lt;/I&gt;, Recueil 2008, p. 61. Sur la nécessité pour le comptable, en pareil cas, de demander à l'ordonnateur d'émettre le titre correspondant, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 25 juin 1936, &lt;I style="mso-bidi-font-style: normal"&gt;David-Chaussé, receveur spécial de la commune de Bordeaux&lt;/I&gt;, &lt;I style="mso-bidi-font-style: normal"&gt;Les grands arrêts de la jurisprudence financière&lt;/I&gt; 1996, p. 202, et en appel CC, 4 avril 2013, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Tredrez-Locquemeau&lt;/I&gt;, que l'on peut consulter sur le site &lt;I style="mso-bidi-font-style: normal"&gt;ccomptes.fr&lt;/I&gt;. La Cour des comptes, appelée à se prononcer pour la première fois sur l'application de cette règle à un établissement en liquidation, considère que le liquidateur d'un établissement public dispose de plein droit des compétences d'ordonnateur des dépenses et des recettes.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135009.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135008">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135008</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67540</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. MICHELET, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>04/07/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Communauté urbaine de Nice-Côte d'Azur - Appel d'un jugement de la chambre régionale des comptes de Provence-Alpes-Côte d'Azur (PACA).</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135008.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00135003">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>6ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00135003</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67355</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. SALSMANN, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. BONIN, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>10/06/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">24/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">24/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Agence de la Biomédecine (ABM) - Exercices 2005, du 10 mai, à 2008, au 31 décembre.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Décharge</SOLUTION>
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 118.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public administratif</DESCRIPTEUR>
<DESCRIPTEUR>Personnel mis à disposition</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Somme non rémissible</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable d'un établissement public administratif avait payé à des hôpitaux deux mandats correspondant à la rémunération de médecins mis à disposition d'un autre établissement. Une part des sommes versées correspondait aux indemnités de leurs activités de coordinateurs régionaux. Le comptable public avait alors effectué des paiements irréguliers en l'absence de pièces justificatives prévues par convention. La Cour considère néanmoins qu'il n'est pas établi que les indemnités versées aient été indues, dès lors le préjudice financier pour l'établissement public n'est pas avéré.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour impose une seule somme non rémissible, considérant en l'espèce que l'irrégularité des deux mandats est de même nature et constitue un manquement unique intervenu au cours du même exercice. Elle module cette somme « &lt;I style="mso-bidi-font-style: normal"&gt;en tenant compte des circonstances de l'espèce &lt;/I&gt;».
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'existence du préjudice financier et les diligences du comptable, &lt;I style="mso-bidi-font-style: normal"&gt;cf. &lt;/I&gt;CC, 24 octobre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ENSP&lt;/I&gt;, Recueil 2013, p. 156.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur des irrégularités de même nature constituant un manquement unique, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 8 juillet 2013, &lt;I style="mso-bidi-font-style: normal"&gt;EPASA&lt;/I&gt;, Recueil 2013, p. 104et ENSP précité..
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur des paiements irréguliers constatés dans le cas de personnel mis à disposition, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 7 mars 2012, &lt;I style="mso-bidi-font-style: normal"&gt;ACAM&lt;/I&gt;, Recueil 2012, p. 47.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00135003.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134894">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>3ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134894</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67324</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GAUTIER, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme MOATI, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>24/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>06/06/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">12/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">12/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Université de La Réunion - Exercices 2007 et 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Décharge</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 114.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public scientifique, culturel et professionnel</DESCRIPTEUR>
<DESCRIPTEUR>Université</DESCRIPTEUR>
<DESCRIPTEUR>Titre de recette</DESCRIPTEUR>
<DESCRIPTEUR>Comptables successifs</DESCRIPTEUR>
<DESCRIPTEUR>Réserve sur la gestion du prédécesseur</DESCRIPTEUR>
<DESCRIPTEUR>Créance non recouvrée</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR>
<DESCRIPTEUR>Ordonnance de décharge</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Dans le cadre d'une succession de trois comptables, le second comptable avait pris en charge sans réserve une créance détenue par une université malgré l'absence de conservation du titre de recette par le premier agent. Il n'avait pas cherché à rétablir, par des initiatives appropriées et utiles ni par aucune autre diligence, le principe et la validité de la liquidation de la créance rendant son recouvrement irrémédiablement compromis, avant même que le délai de prescription ait été atteint au cours de sa propre gestion. De ce fait, la Cour constitue le second comptable en débet.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Elle écarte, en effet, la responsabilité du troisième comptable puisque, d'une part, il avait émis des réserves sur les comptes de son prédécesseur et, d'autre part, il avait néanmoins tenté de poursuivre le recouvrement de la créance, bien que cette opération n'ait pu aboutir du fait de l'absence ab initio de titre de recette.Concernant l'autre créance, la Cour constate que le fait générateur se situe pendant un exercice au cours duquel une ordonnance de décharge a déjà été prononcée, et dit n'y avoir lieu à charge.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le recouvrement des créances prises en charge et les réserves du comptable sur la gestion du prédécesseur, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CRC, 9 février 2005, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Pertuis&lt;/I&gt;, Recueil, 2005, p. 10 et CRC, 28 juillet 2005, &lt;I style="mso-bidi-font-style: normal"&gt;lycée Henri Wallon à Villerupt&lt;/I&gt;, Recueil 2005, p. 70.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134894.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134893">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>3ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134893</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67387</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GAUTIER, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. SABBE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>24/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>06/06/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">12/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">12/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Université de Corse - Exercices 2006 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Décharge</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134893.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134830">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>7ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134830</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67413</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. RESPLANDY-BERNARD, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GAUTIER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>15/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">09/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">08/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Etablissement public d'aménagement de la Défense (EPAD) - Exercices 2008 à 2010 (au 4 novembre).</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 106.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public industriel et commercial</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Somme non rémissible</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
La responsabilité d'un comptable avait été mise en jeu par un réquisitoire relevant des prestations en l'absence de pièces suffisantes. La Cour rappelle que les marchés dépassant un certain seuil (20 000¤ en l'espèce) doivent être passés sous forme écrite. Elle considère qu'un bon de commande acceptant un devis constitue un accord écrit sur le prix et la chose et crée un échange de volonté des parties. En l'espèce, l'absence d'un tel devis aurait dû contraindre le comptable à suspendre le paiement. La Cour relève néanmoins que la dépense en question étant liée à des prestations effectivement réalisées pour l'établissement public, elle ne constate pas de préjudice financier et impose une somme non rémissible au comptable, en raison du manquement.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation de formaliser sous forme écrite les marchés d'un certain seuil, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 novembre 2010, &lt;I style="mso-bidi-font-style: normal"&gt;Parc national du Mercantour&lt;/I&gt;, Recueil 2010, p. 98; CC, 7 juin 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CCAS de Polaincourt&lt;/I&gt;, Recueil 2013, p. 87 et &lt;I style="mso-bidi-font-style: normal"&gt;AJDA&lt;/I&gt; 2013, p. 1621.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la prise en compte d'un bon de commande comme pièce constitutive d'un marché, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 3 février 2011, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Monistrol-sur-Loire&lt;/I&gt;, Recueil 2011, p. 14 et CC, 27 mars 2013, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la  Loire-Atlantique,&lt;/I&gt; Recueil 2013, p. 47.Sur l'existence du préjudice financier et les diligences du comptable, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 octobre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ENSP&lt;/I&gt;, Recueil 2013, p. 156.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134830.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134828">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>7ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134828</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67411</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. RESPLANDY-BERNARD, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GAUTIER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>15/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">09/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">08/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Etablissement public d'aménagement Seine-Arche à Nanterre (EPASA) - Exercices 2007 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 104.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public industriel et commercial</DESCRIPTEUR>
<DESCRIPTEUR>Délégation de signature</DESCRIPTEUR>
<DESCRIPTEUR>Dématérialisation</DESCRIPTEUR>
<DESCRIPTEUR>Contrôle du comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Cautionnement du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Somme non rémissible</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable d'un établissement public avait payé diverses sommes sans s'assurer que les personnes ayant ordonnancé la dépense avaient reçu à ce titre une délégation. En outre, le logiciel comptable de l'établissement impliquait un enchaînement inverse de celui exigé par les règles de la comptabilité publique. En l'absence de préjudice financier, elle impose une somme non rémissible au comptable. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour fait application du texte relatif à la constitution et à la libération du cautionnement exigé des comptables publics (article 1er du décret n° 64-685 du 2 juillet 1964) qui dispose que lorsqu'un comptable gère plusieurs postes comptables, le cautionnement est fixé pour un seul montant correspondant au poste le plus important, même en qualité d'intérimaire.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour rappelle que lorsqu'un comptable gère plusieurs postes comptables, le cautionnement est fixé pour un seul montant correspondant au poste le plus important, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. article 1er du décret n° 64-685 du 2 juillet 1964 relatif à la constitution et à la libération du cautionnement exigé des comptables publics.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Depuis de nombreuses années, la Cour souligne que la dématérialisation des procédures d'ordonnancement et la création d'une chaîne informatique entre l'ordonnateur et le comptable doivent être conçues de manière à permettre la réalisation &lt;I style="mso-bidi-font-style: normal"&gt;effective&lt;/I&gt; et &lt;I style="mso-bidi-font-style: normal"&gt;tracée&lt;/I&gt; des contrôles qui incombent au comptable.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur les diligences du comptable et la dématérialisation des procédures, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 24 janvier 2012, &lt;I style="mso-bidi-font-style: normal"&gt;TPG du Territoire de Belfort&lt;/I&gt;, Recueil 2012, p. 16 ; CC, 21 décembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la Haute-Loire&lt;/I&gt;, Recueil 2012, p. 181 ; CC, 25 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ACSIA&lt;/I&gt;, Recueil 2013, p. 27 et CC, 9 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM de l'écologie&lt;/I&gt;, Recueil 2013, p. 13.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134828.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134779">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134779</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67225</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. MAISTRE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>30/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Communauté de communes de l'Ile Napoléon (CCIN) (Haut-Rhin) - Appel d'un jugement de la chambre régionale des comptes d'Alsace - Exercices 2006 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 99.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Communauté de communes</DESCRIPTEUR>
<DESCRIPTEUR>Recevabilité</DESCRIPTEUR>
<DESCRIPTEUR>Moyen d'ordre public</DESCRIPTEUR>
<DESCRIPTEUR>Procédure</DESCRIPTEUR>
<DESCRIPTEUR>Impartialité</DESCRIPTEUR>
<DESCRIPTEUR>Dépense</DESCRIPTEUR>
<DESCRIPTEUR>Transfert de compétence</DESCRIPTEUR>
<DESCRIPTEUR>Opérations de trésorerie</DESCRIPTEUR>
<DESCRIPTEUR>Mandat</DESCRIPTEUR>
<DESCRIPTEUR>Infirmation</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le comptable d'une communauté de communes dont les compétences en matière de voirie avaient été transférées par arrêté préfectoral à un syndicat intercommunal avait versé à ce dernier la part de la trésorerie correspondant au montant des travaux restant à financer en l'absence de mandat et d'état liquidatif. La chambre régionale des comptes a cependant déchargé le comptable au motif que l'opération en cause ne constituait pas une dépense budgétaire mais une opération de trésorerie, dont le principe résultait d'une délibération et dont le montant avait été fixé par un certificat de l'ordonnateur.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour a admis en appel la recevabilité de mémoires complémentaires produits au-delà du délai réglementaire, les uns parce qu'ils ne font que reprendre des moyens déjà formulés en première instance, un autre parce que le seul moyen, nouveau, qu'il présente est d'ordre public. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour a ensuite considéré que la CRC n'avait pas violé le principe d'impartialité en se prononçant sur l'opération litigieuse alors qu'elle avait, dans un rapport d'observations définitives adopté en formation plénière avant le jugement entrepris, critiqué sévèrement l'opération, dans la mesure où cette critique ne faisait notamment aucune référence au régime de responsabilité personnelle et pécuniaire des comptables publics et ne comportait aucune mention nominative. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le fond, la Cour a estimé que l'opération litigieuse constituait une dépense budgétaire au sens des articles 27 et suivants du décret du 29 décembre 1962. Elle en a conclu qu'elle devait être justifiée par un mandat et a infirmé le jugement de la CRC.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur les questions d'impartialité et de préjugement, cf. CE, 23 février 2000, &lt;I style="mso-bidi-font-style: normal"&gt;Société Labor Métal et autres&lt;/I&gt;, Recueil 2000, p. 119 et CE, 10 mai 2004, &lt;I style="mso-bidi-font-style: normal"&gt;Association pour le développement des entreprises européennes par la communication (ADEEC)&lt;/I&gt;, Recueil 2004, p. 146. Sur l'application aux chambres régionales et territoriales des comptes, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 29 novembre 2007, &lt;I style="mso-bidi-font-style: normal"&gt;COM de Polynésie française&lt;/I&gt;, Recueil 2007, p. 76.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134779.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134776">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134776</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67029</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme GADRIOT-RENARD, Conseillere maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>16/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Arrêtés conservatoires de débets - Ecole Colette de Hô Chi Minh Ville (République démocratique du Vietnam) - Exercices 2001 à 2003.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 98.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public d'enseignement à l'étranger</DESCRIPTEUR>
<DESCRIPTEUR>Comptable supérieur</DESCRIPTEUR>
<DESCRIPTEUR>Injonction</DESCRIPTEUR>
<DESCRIPTEUR>Réquisitoire</DESCRIPTEUR>
<DESCRIPTEUR>Réponse</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
La responsabilité d'un comptable d'une école française à l'étranger était engagée pour avoir manqué aux diligences qui lui incombaient. Le comptable n'ayant été capable de produire ni les justificatifs manquants ni la preuve du reversement des paiements irréguliers, la Cour l'a constitué en débet. Malgré l'absence de réponse au réquisitoire du Procureur général, la Cour tire du dossier proprio motu des éléments à décharge.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
L'agent comptable est constitué débiteur s'il n'apporte pas les pièces justificatives en réponse aux injonctions d'un comptable supérieur et au réquisitoire du Procureur général qui confirme les charges soulevées. La Cour se réserve, même en l'absence d'éléments à décharge apportés par le comptable, de trouver elle-même dans le dossier de tels éléments.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'instruction de charges suite à réquisitoire, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CRC, 15 avril 2010, &lt;I style="mso-bidi-font-style: normal"&gt;commune d'Ota&lt;/I&gt;, Recueil 2010, p. 20.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134776.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134774">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134774</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67232</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mlle BALDACCHINO, Conseillère référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>30/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Syndicat départemental des collectivités électrifiées de l'Orne (SDCEO) - Appel d'un jugement de la chambre régionale des comptes de Basse-Normandie - Exercice 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 96.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public local</DESCRIPTEUR>
<DESCRIPTEUR>Dépense d'investissement</DESCRIPTEUR>
<DESCRIPTEUR>Subvention d'investissement</DESCRIPTEUR>
<DESCRIPTEUR>Imputation comptable</DESCRIPTEUR>
<DESCRIPTEUR>Emprunt</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le comptable d'un établissement public local avait imputé sur un compte de fonctionnement des concours à ERDF servant à financer des travaux d'enfouissement de câbles d'électrification. La Cour rappelle que seule la nature de la dépense détermine l'imputation comptable et les justifications à fournir en application de la nomenclature. En l'espèce, les travaux publics financés ayant le caractère d'équipements, et l'instruction codificatrice applicable prévoyant expressément des imputations distinctes, sur un compte de fonctionnement pour les concours ayant la nature de charges courantes d'une part, sur un compte d'investissement pour les subventions d'équipement d'autre part, la Cour rejette l'argument du comptable selon lequel les dépenses auraient été financées sans recours à l'emprunt, et que l'établissement ne souhaitait pas voir lesdites subventions amorties. Elle confirme la charge au motif que la dépense aurait dû être imputée en investissement.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue dans le cadre des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
En jurisprudence d'appel, sur la nécessité pour le comptable de vérifier l'exacte imputation selon l'objet et la nature des dépenses en application de l'article 12 du décret n°62-1587 du 29 décembre 1962, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. notamment CC, &lt;I style="mso-bidi-font-style: normal"&gt;SIRTAVA&lt;/I&gt;, 9 mars 2011. L'obligation de contrôle de la correcte imputation de la dépense est désormais prévue à l'article 19 du décret n° 2012-1246 du 7 novembre 2012 relatif à la gestion budgétaire et comptable publique. Sur le fait que la nature de la dépense conditionne à la fois l'exacte imputation et les pièces prévues par la nomenclature et que le comptable doit surseoir à payer dans l'attente des pièces complémentaires lui permettant d'apprécier la nature exacte de la dépense, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 25 avril 2013, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Mont-Saint-Martin&lt;/I&gt;, Recueil 2013, p. 62.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134774.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134770">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134770</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67230</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. THEROND, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>30/05/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/07/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/07/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Lavérune (Hérault) - Appel d'une ordonnance du président de la chambre régionale des comptes de Languedoc-Roussillon.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134770.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134675">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134675</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67291</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHAMPOMIER, Conseiller referendaire</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. CHOUVET, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>04/07/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">28/06/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/06/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Trésorier-payeur général du Gard - Exercices 2006 à 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 93.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Comptable principal</DESCRIPTEUR>
<DESCRIPTEUR>Acte administratif</DESCRIPTEUR>
<DESCRIPTEUR>Délégation de signature</DESCRIPTEUR>
<DESCRIPTEUR>Ordonnateur secondaire</DESCRIPTEUR>
<DESCRIPTEUR>Mandat</DESCRIPTEUR>
<DESCRIPTEUR>Programme</DESCRIPTEUR>
<DESCRIPTEUR>Qualité de l'ordonnateur</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable avait payé plusieurs mandats signés par divers ordonnateurs. Le programme budgétaire sur lequel les mandats avaient été payés n'étant pas mentionné dans l'arrêté préfectoral de délégation de signature, il est reproché au comptable de ne pas avoir pu s'assurer de la portée de la délégation. Le comptable fait néanmoins valoir qu'au sein du même arrêté, une délégation de signature avait été donnée à la directrice des actions interministérielles de la préfecture pour signer « &lt;I style="mso-bidi-font-style: normal"&gt;toutes les décisions relevant de son service&lt;/I&gt; », et que cette formulation emportait avec elle l'ordonnancement. Le comptable se réfère également à la jurisprudence du Conseil d'Etat selon laquelle, si une délégation de signature doit être précise sur l'objet et les compétences déléguées, l'absence de référence aux programmes ne constitue pas une condition de validité de l'arrêté dans la mesure où le préfet dispose des compétences d'ordonnancement des dépenses relatives à l'activité et aux missions du service. Dès lors, la Cour considère qu'une délégation de signature est valable pour autant qu'elle entre dans le champ de ses compétences. En l'espèce, la Cour, constatant la régularité de la délégation, ne charge pas le comptable. En revanche, sur un autre mandat payé par le comptable, la Cour considère que le signataire du mandat ne possédait pas la qualité d'ordonnateur. La Cour constitue le comptable en débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation de contrôler la qualité de l'ordonnateur, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 3 mai 2007, &lt;I style="mso-bidi-font-style: normal"&gt;université Paris III - Sorbonne Nouvelle&lt;/I&gt;, Recueil 2007, p. 51 ; CC, 26 juillet 2012, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM du ministère de l'outre-mer&lt;/I&gt;, Recueil 2012, p. 132 et CC, 9 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM de l'écologie&lt;/I&gt;, Recueil 2013, p. 13.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la régularité d'une délégation de signature, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 27 mars 2013, &lt;I style="mso-bidi-font-style: normal"&gt;DDFIP des Hauts-de-Seine&lt;/I&gt;, Recueil 2013, p. 45.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134675.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134243">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>5ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134243</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66901</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CAHUZAC, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. SEPULCHRE, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>19/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">07/06/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">07/06/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Institut national du travail, de l'emploi et de la formation professionnelle (INTEFP) - Exercices 2006 à 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Décharge</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 89.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public administratif</DESCRIPTEUR>
<DESCRIPTEUR>Service fait</DESCRIPTEUR>
<DESCRIPTEUR>Ordonnateur</DESCRIPTEUR>
<DESCRIPTEUR>Réquisition du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Contrat</DESCRIPTEUR>
<DESCRIPTEUR>Décharge du comptable</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
La charge était relative à la responsabilité d'une comptable suite à une réquisition de l'ordonnateur. En l'espèce, une annulation de réservations de chambres d'hôtel a été déclarée très tardivement par l'ordonnateur, néanmoins celles-ci ont été facturées conformément au contrat. Dès lors, il n'y avait pas absence de justification du service fait. La Cour décharge donc le comptable.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour rappelle que l'absence de justification du service fait est une exception à l'exécution par le comptable d'un ordre de réquisition.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur les ordres de réquisition, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. les articles L. 1617-2 à L. 1617-4 du CGCT. Lorsque le comptable de l'établissement notifie à l'ordonnateur sa décision de suspendre une dépense, celui-ci peut lui adresser un ordre de réquisition. Le comptable est tenu de s'y soumettre, «&lt;I style="mso-bidi-font-style: normal"&gt;sauf en cas d'insuffisance de fonds disponibles, de dépense ordonnancée sur des crédits irrégulièrement ouverts ou insuffisants ou sur des crédits autres que ceux sur lesquels elle devrait être imputée, d'absence totale de justification du service fait et de défaut de caractère libératoire du règlement ainsi qu'en cas d'absence de caractère exécutoire des actes pris selon les cas par les autorités communales, les autorités départementales ou les autorités régionales.»&lt;/I&gt;
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'engagement de la responsabilité du comptable pour avoir payé suite à un ordre de réquisition, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 9 mars 2011, &lt;I style="mso-bidi-font-style: normal"&gt;SIRTAVA&lt;/I&gt;, Recueil 2011, p. 32.Sur le paiement irrégulier d'indemnités par le comptable en l'absence de fondement juridique au moment du paiement, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 février 2009, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la Seine-Saint-Denis&lt;/I&gt;, Recueil 2009, p. 10 et CC, 5 septembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ANPE&lt;/I&gt;, Recueil 2013, p. 130.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134243.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134242">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>Chambres réunies</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134242</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67189</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. DOYELLE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GAUTIER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>30/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">07/06/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">07/06/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Centre communal d'action sociale (CCAS) de Polaincourt - Trésorerie d'Amance Faverney (Haute-Saône) - Arrêt après cassation par le Conseil d'Etat.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 87.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Centre communal d'action sociale</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Seuil de passation</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Certificat administratif</DESCRIPTEUR>
<DESCRIPTEUR>Contrat</DESCRIPTEUR>
<DESCRIPTEUR>Contrôle du comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Procédure</DESCRIPTEUR>
<DESCRIPTEUR>Rejet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Confirmant un jugement de la chambre régionale des comptes de Franche-Comté, la Cour avait constitué un comptable débiteur pour avoir payé sans contrat écrit plusieurs factures de fournitures d'un montant supérieur au seuil, alors en vigueur, de 4 000¤ HT au-delà duquel le code des marchés publics exigeait la production d'un contrat écrit. Saisi d'un pourvoi par le ministre du budget, le Conseil d'État avait reconnu qu'une telle dépense était de nature à engager la responsabilité du comptable mais a annulé la décision de la Cour en considérant, à la lumière de la nomenclature des pièces justificatives des dépenses des collectivités locales, qu'il appartenait au juge des comptes de s'assurer, avant de statuer, que le comptable avait demandé à l'ordonnateur un certificat par lequel ce dernier prenait la responsabilité de l'absence de contrat écrit. Statuant sur renvoi après cassation, la Cour constate que le comptable n'a pas demandé à l'ordonnateur la production du certificat. Le comptable n'ayant pas exercé le contrôle qui lui incombait, la requête est rejetée, et le jugement confirmé (débet).
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la même affaire, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. &lt;I style="mso-bidi-font-style: normal"&gt;CCAS de Polaincourt&lt;/I&gt;, CC, 6 mai 2010, Recueil 2010, p. 37 et CE, 8 février 2012, Recueil 2012, p. 203.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La décision, ci-dessus, a été commentée à l'&lt;I style="mso-bidi-font-style: normal"&gt;AJDA 2013&lt;/I&gt;, p. 1621.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le comptable et le respect du seuil de conclusion des marchés en la forme écrite, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 novembre 2010, &lt;I style="mso-bidi-font-style: normal"&gt;Parc national du Mercantour&lt;/I&gt;, Recueil 2010, p. 98 et CC, 8 Juillet 2013, &lt;I style="mso-bidi-font-style: normal"&gt;EPAD&lt;/I&gt;, Recueil 2013, p. 106.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134242.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">Q09VUiBERVMgQ09NUFRFUwoJICAgIC0tLS0tLSAKQ0hBTUJSRVMgUkVVTklFUwkgCgpGT1JNQVRJT04gUkVTVFJFSU5URQoJICAgIC0tLS0tLSAKIAkKICAgICAgIEFycsOqdCBuwrAgNjcxODkKTS7CoFgsIENPTVBUQUJMRSBEVSBDRU5UUkUgQ09NTVVOQUwgROKAmUFDVElPTiBTT0NJQUxFIChDQ0FTKSBkZSBQb2xhaW5jb3VydAoodHLDqXNvcmVyaWUgZOKAmWFtYW5jZSBmYXZlcm5leSwgSGF1dGUtU2HDtG5lKQoKQXJyw6p0IGFwcsOocyBjYXNzYXRpb24gcGFyIGxlIENvbnNlaWwgZOKAmUV0YXQKUmFwcG9ydCBuwrAgMjAxMy0yODktMAoKQXVkaWVuY2UgcHVibGlxdWUgZXQgZMOpbGliw6lyw6kgZHUgMzAgYXZyaWwgMjAxMwoKTGVjdHVyZSBwdWJsaXF1ZSBkdSAgNyBqdWluIDIwMTMKClLDqVBVQkxJUVVFIEZSQU7Dh0FJU0UKQVUgTk9NIERVIFBFVVBMRSBGUkFOw4dBSVMKTEEgQ09VUiBERVMgQ09NUFRFUyBhIHJlbmR1IGzigJlhcnLDqnQgc3VpdmFudMKgOgpMQSBDT1VSLApWdSBsYSBkw6ljaXNpb24gbsKwwqAzNDA2OTggZHUgOCBmw6l2cmllciAyMDEyLCBwYXIgbGFxdWVsbGUgbGUgQ29uc2VpbCBk4oCZw4l0YXQgYSBhbm51bMOpIGzigJlhcnLDqnQgbsKwNTc3NjcgZGUgbGEgQ291ciBkZXMgY29tcHRlcyBlbiBkYXRlIGR1IDYgbWFpIDIwMTDCoDsKVnUgbGUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlc8KgOwpWdSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZGUgZmluYW5jZXMgbsKwwqA2My0xNTYgZHUgMjPCoGbDqXZyaWVywqAxOTYzIG1vZGlmacOpZcKgOwpWdSBsJ2FydGljbGUgMzQgZGUgbGEgbG9pIG7CsMKgMjAwOC0xMDkxIGR1IDI4IG9jdG9icmUgMjAwOCBtb2RpZmnDqWUgcmVsYXRpdmUgw6AgbGEgQ291ciBkZXMgY29tcHRlcyBldCBhdXggY2hhbWJyZXMgcsOpZ2lvbmFsZXMgZGVzIGNvbXB0ZXPCoDsKVnUgbGUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjkgZMOpY2VtYnJlIDE5NjIgbW9kaWZpw6kgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZcKgOwpWdSBs4oCZYXJyw6p0w6kgZHUgUHJlbWllciBwcsOpc2lkZW50IG7CsMKgMTItODMyIGVuIGRhdGUgZHUgMjEgZMOpY2VtYnJlIDIwMTIsIGNvbnN0aXR1YW50IHBvdXIgbOKAmWFubsOpZSBqdWRpY2lhaXJlIDIwMTMgbGVzIGZvcm1hdGlvbnMgcGzDqW5pw6hyZSBldCByZXN0cmVpbnRlIGRlIGxhIENvdXIgc2nDqWdlYW50IHRvdXRlcyBjaGFtYnJlcyByw6l1bmllc8KgOwoKVnUgbGEgcmVxdcOqdGUsIGVucmVnaXN0csOpZSBsZSA5IGp1aWxsZXQgMjAwOSBhdSBncmVmZmUgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIEZyYW5jaGUtQ29tdMOpLCBwYXIgbGFxdWVsbGUgTS7CoFgsIGNvbXB0YWJsZSBkdSBjZW50cmUgY29tbXVuYWwgZCdhY3Rpb24gc29jaWFsZSAoQ0NBUykgZGUgUG9sYWluY291cnQsIGEgw6lsZXbDqSBhcHBlbCBkdSBqdWdlbWVudCBkdSAzMCBhdnJpbCAyMDA5IHBhciBsZXF1ZWwgbGFkaXRlIGNoYW1icmUgbOKAmWEgY29uc3RpdHXDqSBkw6liaXRldXIgZGVzIGRlbmllcnMgZHUgQ0NBUyBwb3VyIGxhIHNvbW1lIGRlIDE1wqAyMzgsNTUg4oKsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgZHUgMTkganVpbiAyMDA4wqA7ClZ1IGxlIHLDqXF1aXNpdG9pcmUgZHUgUHJvY3VyZXVyIGfDqW7DqXJhbCBkdSAyNiBhb8O7dCAyMDA5IHRyYW5zbWV0dGFudCBsYSByZXF1w6p0ZSBwcsOpY2l0w6llIDsKVnUgbGVzIHBpw6hjZXMgZGUgbGEgcHJvY8OpZHVyZSBzdWl2aWUgZW4gcHJlbWnDqHJlIGluc3RhbmNlwqA7ClZ1IGxhIGTDqWNpc2lvbiBkdSBQcmVtaWVyIHByw6lzaWRlbnQgZGUgbGEgQ291ciBkZXMgY29tcHRlcywgZW4gZGF0ZSBkdSAxMSBmw6l2cmllciAyMDEzLCBkw6lzaWduYW50IE0uwqBBbGFpbiBEb3llbGxlLCBjb25zZWlsbGVyIG1hw650cmUsIHJhcHBvcnRldXIgZGUgbOKAmWFmZmFpcmUgZGV2YW50IGxlcyBjaGFtYnJlcyByw6l1bmllcyBlbiBmb3JtYXRpb24gcmVzdHJlaW50ZcKgOwpWdSBsZXMgY291cnJpZXJzIGR1IGdyZWZmZSBkdSA5IG1hcnMgMjAxMiBpbmZvcm1hbnQgbGVzIHBhcnRpZXMgZGUgbGEgZMOpc2lnbmF0aW9uIGR1IHJhcHBvcnRldXIgZXQgZGUgbOKAmW91dmVydHVyZSBkZSBs4oCZaW5zdGFuY2XCoDsKVnUgbGVzIGNvdXJyaWVycyBkdSBncmVmZmUgZHUgMTEgZsOpdnJpZXIgMjAxMyBpbmZvcm1hbnQgbGVzIHBhcnRpZXMgZGUgbGEgZMOpc2lnbmF0aW9uIGTigJl1biBub3V2ZWF1IHJhcHBvcnRldXLCoDsKVnUgbGVzIGNvdXJyaWVycyBlbiBkYXRlIGR1IDE0IGbDqXZyaWVyIDIwMTMgYWRyZXNzw6lzIHBhciBsZSByYXBwb3J0ZXVyIGF1eCBwYXJ0aWVzwqA7ClZ1IGxlcyBvYnNlcnZhdGlvbnMgZW4gcsOpcG9uc2UgZGUgTS4gWCBlbiBkYXRlIGR1IDI1IGbDqXZyaWVyIDIwMTPCoDsgClN1ciBsZSByYXBwb3J0IGRlIE0uwqBEb3llbGxlLCBjb25zZWlsbGVyIG1hw650cmUsIGVuIGRhdGUgZHUgMjcgbWFycyAyMDEzwqA7ClZ1IGxlcyBjb3VycmllcnMgZHUgZ3JlZmZlIGR1IDI4IG1hcnMgMjAxMyBpbmZvcm1hbnQgbGVzIHBhcnRpZXMgZHUgZMOpcMO0dCBkdSByYXBwb3J0LCBkZSBsYSBjbMO0dHVyZSBkZSBs4oCZaW5zdHJ1Y3Rpb27CoGV0IGRlIGxhIHRlbnVlIGRlIGzigJlhdWRpZW5jZSBkdSAzMCBhdnJpbCAyMDEzwqA7ClZ1IGxhIGTDqWNpc2lvbiBkdSBQcmVtaWVyIHByw6lzaWRlbnQgZGUgbGEgQ291ciBkZXMgY29tcHRlcywgZW4gZGF0ZSBkdSA1wqBhdnJpbCAyMDEzLCBkw6lzaWduYW50IE0uwqBKZWFuIEdhdXRpZXIsIGNvbnNlaWxsZXIgbWHDrnRyZSwgY29udHJlLXJhcHBvcnRldXIgZGUgbOKAmWFmZmFpcmXCoDsKVnUgbGVzIGNvbmNsdXNpb25zIG7CsMKgMzMwIGVuIGRhdGUgZHUgMjMgYXZyaWzCoDIwMTMgZHUgcHJvY3VyZXVyIGfDqW7DqXJhbCBwcsOocyBsYSBDb3VyIGRlcyBjb21wdGVzwqA7ClZ1IGxlcyBjb3VycmllcnMgZHUgZ3JlZmZlIGR1IDIzIGF2cmlsIDIwMTMgaW5mb3JtYW50IGxlcyBwYXJ0aWVzIGR1IGTDqXDDtHQgZGVzIGNvbmNsdXNpb25zIGR1IG1pbmlzdMOocmUgcHVibGljwqA7ClZ1IGzigJllbnNlbWJsZSBkZXMgYXV0cmVzIHBpw6hjZXMgZHUgZG9zc2llcsKgOwpFbnRlbmR1IMOgIGzigJlhdWRpZW5jZSBwdWJsaXF1ZSBkdSAzMCBhdnJpbMKgMjAxMywgTS7CoERveWVsbGUgZW4gc29uIHJhcHBvcnQgZXQgTS7CoENocmlzdGlhbiBNaWNoYXV0LCBhdm9jYXQgZ8OpbsOpcmFsLCBlbiBzZXMgY29uY2x1c2lvbnMsIE0uwqBYIGV0IGzigJlvcmRvbm5hdGV1ciBkdSBDQ0FTLCBu4oCZw6l0YW50IG5pIHByw6lzZW50cywgbmkgcmVwcsOpc2VudMOpc8KgOwpBeWFudCBkw6lsaWLDqXLDqSBsZSAzMCBhdnJpbMKgMjAxMywgaG9ycyBkZSBsYSBwcsOpc2VuY2UgZHUgcmFwcG9ydGV1ciBldCBkdSBtaW5pc3TDqHJlIHB1YmxpYyBldCBhcHLDqHMgYXZvaXIgZW50ZW5kdSBNLsKgR2F1dGllciwgZW4gc2VzIG9ic2VydmF0aW9uc8KgOwoKU3VyIGxhIHByb2PDqWR1cmUgZGV2YW50IGxhIENvdXIKQ29uc2lkw6lyYW50IHF1ZSBsYSBkw6ljaXNpb24gZHUgOCBmw6l2cmllcsKgMjAxMiBkdSBDb25zZWlsIGQnw4l0YXQgYSByZW52b3nDqSBsJ2FmZmFpcmUgZGV2YW50IGxhIENvdXLCoDsgcXUnYXV4IHRlcm1lcyBkZSBsJ2FydGljbGUgUi7CoDExMi0xOCBkdSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzLCDCq8KgbGVzIGNoYW1icmVzIHLDqXVuaWVzIHN0YXR1YW50IGVuIGZvcm1hdGlvbiByZXN0cmVpbnRlIHN0YXR1ZW50IHN1ciBsZXMgYWZmYWlyZXMgcmVudm95w6llcyBkZXZhbnQgbGEgQ291ciBhcHLDqHMgY2Fzc2F0aW9uwqDCu8KgOyBxdWUsIGTDqHMgbG9ycywgbGEgQ291ciwgc3RhdHVhbnQgZW4gZm9ybWF0aW9uIHJlc3RyZWludGUgZGVzIGNoYW1icmVzIHLDqXVuaWVzLCBlc3QgY29tcMOpdGVudGUgcG91ciBzdGF0dWVyIHN1ciBjZSBkb3NzaWVyIGVuIGzigJnDqXRhdCBkZSBsYSBwcm9jw6lkdXJlwqA7IApTdXIgbGEgcmVjZXZhYmlsaXTDqSBkZSBsYSByZXF1w6p0ZQpDb25zaWTDqXJhbnQgcXVlIHBhciByZXF1w6p0ZSBlbnJlZ2lzdHLDqWUgbGUgOSBqdWlsbGV0IDIwMDkgYXUgZ3JlZmZlIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBkZSBGcmFuY2hlLUNvbXTDqSwgZGFucyBsZSBkw6lsYWkgZGUgZGV1eCBtb2lzIMOgIGNvbXB0ZXIgZGUgbGEgbm90aWZpY2F0aW9uIGR1IGp1Z2VtZW50IGR1IDMwIGF2cmlsIDIwMDksIE0uwqBYIGEgw6lsZXbDqSBhcHBlbCBkZXMgZGlzcG9zaXRpb25zIGTDqWZpbml0aXZlcyBkZSBjZSBqdWdlbWVudCA7IHF1J2lsIGVzdCB1biBjb21wdGFibGUgY29uc3RpdHXDqSBkw6liaXRldXIgcXVpIGp1c3RpZmllLCDDoCBjZSB0aXRyZSwgZCd1biBpbnTDqXLDqnQgcG91ciBhZ2lywqA7IHF1ZSwgZGFucyBjZXMgY29uZGl0aW9ucywgbGEgcmVxdcOqdGUgZG9pdCDDqnRyZSBjb25zaWTDqXLDqWUgY29tbWUgcmVjZXZhYmxlwqA7ClN1ciBsZSBmb25kCkF0dGVuZHUgcXVlIHBhciBqdWdlbWVudCBkdSAzMCBhdnJpbCAyMDA5IHByw6ljaXTDqSwgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIEZyYW5jaGUtQ29tdMOpIGEgY29uc3RpdHXDqSBNLsKgWCBkw6liaXRldXIsIGVudmVycyBsZSBDQ0FTIGRlIFBvbGFpbmNvdXJ0LCBhdSB0aXRyZSBkZSBsJ2V4ZXJjaWNlIDIwMDYsIGRlIGxhIHNvbW1lIGRlIDE1wqAyMzgsNTUgZXVyb3MgYXVnbWVudMOpZSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCBjYWxjdWzDqXMgw6AgY29tcHRlciBkZSBsYSBkYXRlIGR1IGp1Z2VtZW50IHByb3Zpc29pcmUsIHNvaXQgbGUgMTkganVpbiAyMDA4LCBwb3VyIGxlIHBhaWVtZW50IHN1ciBmYWN0dXJlcyBkZSB0cm9pcyBtYW5kYXRzIGNvcnJlc3BvbmRhbnQgw6AgZGVzIGZvdXJuaXR1cmVzIGRlIHJlcGFzIGTDqXBhc3NhbnQgY2hhY3VuZSBsZSBzZXVpbCBkZXMgNMKgMDAwwqDigqwgaG9ycyB0YXhlcyBleGlnZWFudCB1bmUgZm9ybWUgw6ljcml0ZSBkdSBtYXJjaMOpwqA7CkNvbnNpZMOpcmFudCBxdWUgbCdhcHBlbGFudCBpbmRpcXVlIHF1ZSBsYSBub21lbmNsYXR1cmUgZGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgZGVzIGTDqXBlbnNlcyBkdSBzZWN0ZXVyIHB1YmxpYyBsb2NhbCwgYXBwbGljYWJsZSBhdSBtb21lbnQgZGUgY2VzIHBhaWVtZW50cywgZXN0IGlzc3VlIGR1IGTDqWNyZXQgZHUgMiBhdnJpbCAyMDAzwqA7IHF1J2VsbGUgcHLDqWNpc2UsIGVuIHNhIHJ1YnJpcXVlwqA0MSwgcXVlIMKrwqBsYSBkw6lwZW5zZSBlc3QgcHLDqXNlbnTDqWUgc291cyBsYSBzZXVsZSByZXNwb25zYWJpbGl0w6kgZGUgbCdvcmRvbm5hdGV1csKgwrsgOyBxdWUgbGEgZMOpcGVuc2UgYSDDqXTDqSBwcsOpc2VudMOpZSBwYXIgbCdvcmRvbm5hdGV1ciBzb3VzIGxhIGZvcm1lIGQndW4gbWFyY2jDqSDDoCBwcm9jw6lkdXJlIGFkYXB0w6llIG5lIGZhaXNhbnQgcGFzIGwnb2JqZXQgZCd1biBjb250cmF0IMOpY3JpdMKgOyBxdWUgbGVzIHNldWlscyBjaXTDqXMgZW4gYW5uZXhlIDQgZGUgbCdpbnN0cnVjdGlvbiBjb2RpZmljYXRyaWNlIGR1IDIzIGp1aWxsZXQgMjAwMyBuZSBjb3JyZXNwb25kZW50IHF14oCZYXUgc2V1aWwgZGVzIG1hcmNow6lzIGZvcm1hbGlzw6lzIGV0IG5lIHZpc2VudCBwYXMgbGUgc2V1aWwgZGVzIDTCoDAwMMKg4oKsIEhUwqA7IHF1J2F1Y3VuZSBwacOoY2UgdHJhbnNtaXNlIGF2YW50IHBhaWVtZW50IG5lIGZhaXNhaXQgcsOpZsOpcmVuY2Ugw6AgdW4gY29udHJhdMKgOyBxdWUgY2VzIGTDqXBlbnNlcyBuZSBjb25jZXJuYW50IG5pIGRlcyBhdmFuY2VzLCBuaSBkZXMgYWNvbXB0ZXMsIG5pIGRlcyBwcmVzdGF0aW9ucyBkZSBtYcOudHJpc2UgZCfFk3V2cmUsIGlsIG4nw6l0YWl0IHBhcyBmb25kw6kgw6AgZGVtYW5kZXIgdW4gY29udHJhdCDDqWNyaXTCoDsKQ29uc2lkw6lyYW50IHF1ZSBsJ2FwcGVsYW50LCBkYW5zIHNhIGxldHRyZSBkdSAyNSBmw6l2cmllciAyMDEzLCBmYWl0IHZhbG9pciBwYXIgYWlsbGV1cnMgcXUnYXUgbW9tZW50IGRlcyBmYWl0cywgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGRlIGTDqXBlbnNlcyBkdSBzZWN0ZXVyIHB1YmxpYyBsb2NhbCBuZSBwcsOpdm95YWl0IHBhcyBleHBsaWNpdGVtZW50IGxhIHByb2R1Y3Rpb24gZGUgY2VydGlmaWNhdHMgZGUgbCdvcmRvbm5hdGV1ciBwYXIgbGVzcXVlbHMgY2VsdWktY2kgZW5nYWdlIHNhIHJlc3BvbnNhYmlsaXTDqSBkdSBmYWl0IGRlIGwnYWJzZW5jZSBkZSBjb250cmF0IMOpY3JpdMKgOwpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbCdhcnRpY2xlIDYwIGRlIGxhIGxvaSBuwrDCoDYzLTE1NiBkdSAyMyBmw6l2cmllciAxOTYzLCBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZGVzIGNvbXB0YWJsZXMgcHVibGljcyDCq8Kgc2UgdHJvdXZlIGVuZ2Fnw6llIGTDqHMgbG9yc+KApiBxdSd1bmUgZMOpcGVuc2UgYSDDqXTDqSBpcnLDqWd1bGnDqHJlbWVudCBwYXnDqWXCoMK7wqA7IHF14oCZZW4gbWF0acOocmUgZGUgZMOpcGVuc2VzLCBpbCBhcHBhcnRpZW50IGF1eCBjb21wdGFibGVzIHB1YmxpY3MgZGUgY29udHLDtGxlciBsYSB2YWxpZGl0w6kgZGUgbGEgY3LDqWFuY2UgZXQgbm90YW1tZW50IGxhIHByb2R1Y3Rpb24gZGVzIGp1c3RpZmljYXRpb25zwqA7CkNvbnNpZMOpcmFudCBxdWUgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGRvbnQgbGVzIGNvbXB0YWJsZXMgZGVzIGNvbGxlY3Rpdml0w6lzIHRlcnJpdG9yaWFsZXMgZXQgZGUgbGV1cnMgw6l0YWJsaXNzZW1lbnRzIHB1YmxpY3MgZG9pdmVudCBleGlnZXIgbGEgcHJvZHVjdGlvbiBkb2l0IMOqdHJlIHJlZ2FyZMOpZSBjb21tZSBzZSByw6lmw6lyYW50LCBwb3VyIGTDqXRlcm1pbmVyIGxlcyBjYXMgZGFucyBsZXNxdWVscyBsZXMgbWFyY2jDqXMgZG9pdmVudCBmYWlyZSBsJ29iamV0IGQndW4gY29udHJhdCDDqWNyaXQsIGF1eCBkaXNwb3NpdGlvbnMgZGUgbCdhcnRpY2xlIDExIGR1IGNvZGUgZGVzIG1hcmNow6lzIHB1YmxpY3MgZW4gdmVydHUgZGVzcXVlbGxlcywgZGFucyBsZXVyIHLDqWRhY3Rpb24gYWxvcnMgYXBwbGljYWJsZSwgbGVzIG1hcmNow6lzIGQndW4gbW9udGFudCDDqWdhbCBvdSBzdXDDqXJpZXVyIMOgIDTCoDAwMMKg4oKsIGRvaXZlbnQgw6p0cmUgcGFzc8OpcyBzb3VzIGZvcm1lIMOpY3JpdGXCoDsKQ29uc2lkw6lyYW50IHF1J2lsIHN1aXQgZGUgbMOgIHF1ZSBsb3JzcXVlIGxhIGTDqXBlbnNlIGVzdCBwcsOpc2VudMOpZSBwYXIgbCdvcmRvbm5hdGV1ciwgc291cyBzYSBzZXVsZSByZXNwb25zYWJpbGl0w6ksIHNvdXMgbGEgZm9ybWUgZCd1biBtYXJjaMOpIHB1YmxpYyBzYW5zIGZvcm1hbGl0w6lzIHByw6lhbGFibGVzIGV0IHF1ZSBsYSBmYWN0dXJlIHByb2R1aXRlIGZhaXQgw6l0YXQgZCd1biBtb250YW50IMOpZ2FsIG91IHN1cMOpcmlldXIgw6AgNMKgMDAwwqBldXJvcyBob3JzIHRheGVzLCBzYW5zIHF1J3VuIGNvbnRyYXQgw6ljcml0IG5lIHNvaXQgcHJvZHVpdCBwb3VyIGp1c3RpZmllciBsYSBkw6lwZW5zZSBlbmdhZ8OpZSwgaWwgYXBwYXJ0aWVudCBhdSBjb21wdGFibGUsIGRldmFudCBjZXR0ZSBpbnN1ZmZpc2FuY2UgYXBwYXJlbnRlIGRlcyBwacOoY2VzIHByb2R1aXRlcyBwb3VyIGp1c3RpZmllciBsYSBkw6lwZW5zZSBjb3JyZXNwb25kYW50IMOgIHVuIG1hcmNow6kgcHVibGljIHNhbnMgZm9ybWFsaXTDqXMgcHLDqWFsYWJsZXMgZmFpc2FudCBuw6ljZXNzYWlyZW1lbnQgbCdvYmpldCBkJ3VuIGNvbnRyYXQgw6ljcml0IGVuIHZlcnR1IGRlIGxhIHLDqWdsZW1lbnRhdGlvbiBhcHBsaWNhYmxlLCBkZSBzdXNwZW5kcmUgbGUgcGFpZW1lbnQgZXQgZGUgZGVtYW5kZXIgw6AgbCdvcmRvbm5hdGV1ciBsYSBwcm9kdWN0aW9uIGRlcyBqdXN0aWZpY2F0aW9ucyBuw6ljZXNzYWlyZXPCoDsKQ29uc2lkw6lyYW50IHF1ZSBs4oCZaW5zdHJ1Y3Rpb24gY29kaWZpY2F0cmljZSBuwrDCoDAzLTA0MS1NMCBkdSAyMyBqdWlsbGV0IDIwMDMgcmVsYXRpdmUgYXV4IHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgZGVzIGTDqXBlbnNlcyBkYW5zIGxlIHNlY3RldXIgbG9jYWwsIGFwcGxpY2FibGUgYXUgbW9tZW50IGRlcyBmYWl0cywgaW5kaXF1ZSBxdeKAmWVuIGVmZmVjdHVhbnQgY2V0dGUgc3VzcGVuc2lvbiBkZSBwYWllbWVudCwgbGUgY29tcHRhYmxlIGRlbWFuZGUgw6AgbOKAmW9yZG9ubmF0ZXVyIGRlIGx1aSBmb3VybmlyIHNvaXQgbGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgbWFucXVhbnRlcywgc+KAmWlsIHJlbm9uY2Ugw6AgbGEgcHLDqXNlbnRhdGlvbiBwcm9wb3PDqWUsIHNvaXQsIGVuIGNhcyBkZSBtYWludGllbiBkZSBsYSBwcsOpc2VudGF0aW9uIHByb3Bvc8OpZSwgdW4gY2VydGlmaWNhdCBhZG1pbmlzdHJhdGlmIGFwcG9ydGFudCBsZXMgw6ljbGFpcmNpc3NlbWVudHMgbsOpY2Vzc2FpcmVzwqA7CkNvbnNpZMOpcmFudCBxdeKAmWF1IGNhcyBk4oCZZXNww6hjZSwgbGUgY29tcHRhYmxlIGNvbmZpcm1lLCBkYW5zIHNhIHLDqXBvbnNlIGR1IDI1IGbDqXZyaWVyIDIwMTMsIG7igJlhdm9pciBwYXMgZGVtYW5kw6kgw6AgbCdvcmRvbm5hdGV1ciBkZSBwcm9kdWlyZSB1biBjZXJ0aWZpY2F0IGFkbWluaXN0cmF0aWYsIHBhciBsZXF1ZWwgY2UgZGVybmllciBkw6ljbGFyZSBhdm9pciBwYXNzw6kgdW4gY29udHJhdCBvcmFsIGV0IHByZW5kIGxhIHJlc3BvbnNhYmlsaXTDqSBkZSBsJ2Fic2VuY2UgZGUgY29udHJhdCDDqWNyaXTCoDsKQ29uc2lkw6lyYW50IGTDqHMgbG9ycyBxdeKAmWVuIGzigJlhYnNlbmNlIGF1IGRvc3NpZXIgZGUgY2UgY2VydGlmaWNhdCBjb21tZSBk4oCZdW4gY29udHJhdCDDqWNyaXQganVzdGlmaWFudCBsYSBkw6lwZW5zZSBzdXDDqXJpZXVyZSDDoCA0wqAwMDDCoOKCrCwgbGUgY29tcHRhYmxlIHB1YmxpYyBu4oCZYSBwYXMgZXhlcmPDqSBsZSBjb250csO0bGUgZGUgbGEgcHJvZHVjdGlvbiBkZXMganVzdGlmaWNhdGlvbnMgZXQgYSBlbmdhZ8OpIHNlIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZcKgOyAKClBhciBjZXMgbW90aWZzLAoKU3RhdHVhbnQgZMOpZmluaXRpdmVtZW50LApPcmRvbm5lwqA6CgpMYSByZXF1w6p0ZSBkZSBNLsKgWCBlc3QgcmVqZXTDqWUuCkxlIGp1Z2VtZW50IGR1IDMwIGF2cmlsIDIwMDkgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIEZyYW5jaGUtQ29tdMOpIGVzdCBjb25maXJtw6kuCi0tLS0tLS0tLS0KRmFpdCBldCBqdWfDqSBlbiBsYSBDb3VyIGRlcyBjb21wdGVzLCB0b3V0ZXMgY2hhbWJyZXMgcsOpdW5pZXMgZW4gZm9ybWF0aW9uIHJlc3RyZWludGUsIGxlIHRyZW50ZSBhdnJpbCBkZXV4IG1pbCB0cmVpemUuIFByw6lzZW50cyA6IE1tZcKgRnJvbWVudC1NZXVyaWNlLCBwcsOpc2lkZW50ZSBkZSBjaGFtYnJlLCBwcsOpc2lkZW50IGRlIHPDqWFuY2UsIE1tZcKgTMOpdnktUm9zZW53YWxkLCBNTS7CoEdhdXRpZXIgKEplYW4pLCBTYWJiZSwgQmFjY291IGV0IE1vdXNzb24sIGNvbnNlaWxsZXJzIG1hw650cmVzLgpTaWduw6nCoDogRnJvbWVudC1NZXVyaWNlLCBwcsOpc2lkZW50ZSBldCBGw6lyZXosIGdyZWZmaWVyLgpDb2xsYXRpb25uw6ksIGNlcnRpZmnDqSBjb25mb3JtZSDDoCBsYSBtaW51dGUgw6l0YW50IGF1IGdyZWZmZSBkZSBsYSBDb3VyIGRlcyBjb21wdGVzLgpFbiBjb25zw6lxdWVuY2UsIGxhIFLDqXB1YmxpcXVlIGZyYW7Dp2Fpc2UgbWFuZGUgZXQgb3Jkb25uZSDDoCB0b3VzIGh1aXNzaWVycyBkZSBqdXN0aWNlLCBzdXIgY2UgcmVxdWlzLCBkZSBtZXR0cmUgbGVkaXQgYXJyw6p0IMOgIGV4w6ljdXRpb24sIGF1eCBwcm9jdXJldXJzIGfDqW7DqXJhdXggZXQgYXV4IHByb2N1cmV1cnMgZGUgbGEgUsOpcHVibGlxdWUgcHLDqHMgbGVzIHRyaWJ1bmF1eCBkZSBncmFuZGUgaW5zdGFuY2UsIGTigJl5wqB0ZW5pciBsYSBtYWluLCDDoMKgdG91cyBjb21tYW5kYW50cyBldCBvZmZpY2llcnMgZGUgbGEgZm9yY2UgcHVibGlxdWUsIGRlIHByw6p0ZXIgbWFpbi1mb3J0ZSwgbG9yc3F14oCZaWxzIGVuIHNlcm9udCBsw6lnYWxlbWVudCByZXF1aXMuCkTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuClBvdXIgbGUgU2VjcsOpdGFpcmUgZ8OpbsOpcmFsCmV0IHBhciBkw6lsw6lnYXRpb24sCmxlIENoZWYgZHUgZ3JlZmZlIGNvbnRlbnRpZXV4CgoKRGFuaWVsIEZFUkVaCg==</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134197">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134197</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67019</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme MORELL, Conseillere maitre</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme FRADIN, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/06/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">05/06/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">05/06/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Autorité des marchés financiers (AMF) - Exercices 2003-2004 (du 24 novembre 2003 au 31 décembre 2004), 2005 et 2006.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 85.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Autorité administrative indépendante</DESCRIPTEUR>
<DESCRIPTEUR>Comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Rémunération</DESCRIPTEUR>
<DESCRIPTEUR>Indemnité</DESCRIPTEUR>
<DESCRIPTEUR>Absence de base juridique</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable public d'une autorité administrative indépendante avait payé des indemnités de résidence au titre d'accessoires de rémunération aux membres et à ceux d'une instance de ladite autorité. La Cour constate que le paiement de ces indemnités n'est fondé sur aucun texte, et est, par conséquent, irrégulier. Le comptable ayant manqué à ses obligations en procédant à ce paiement irrégulier, la Cour le constitue donc en débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le versement d'indemnités en l'absence de base juridique, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 19 mars 2012, &lt;I style="mso-bidi-font-style: normal"&gt;CNIL&lt;/I&gt;, Recueil 2012, p. 56 et CC, 19 décembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;SHOM&lt;/I&gt;, Recueil 2013, p. 198.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134197.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134192">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134192</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66941</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LEVIONNOIS, Conseiller référendaire</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. BRUN-BUISSON, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>27/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">05/06/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">05/06/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction des services fiscaux (DSF) des Bouches-du-Rhône - Marseille - Recette d'Aubagne - Exercice 2004.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 82.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Trésor public</DESCRIPTEUR>
<DESCRIPTEUR>Créance non recouvrée</DESCRIPTEUR>
<DESCRIPTEUR>Prescription quadriennale</DESCRIPTEUR>
<DESCRIPTEUR>Acte interruptif de prescription</DESCRIPTEUR>
<DESCRIPTEUR>Garantie</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Dans l'attente d'un jugement du tribunal de grande instance saisi par un contribuable, la Cour avait, par deux arrêts provisoires, émis puis prolongé des réserves quant à la responsabilité d'un comptable pour le recouvrement d'une créance correspondant à des droits d'enregistrement. A la suite de la radiation de l'affaire par le tribunal de grande instance pour défaut de diligences des parties ayant entrainé la prescription de la créance, la Cour a levé la réserve et a enjoint au comptable de lui présenter toute justification à décharge au titre de sa gestion. La Cour constate l'inaction du comptable qui n'a pas pris de garantie ni d'acte conservatoire en vue du recouvrement de la créance et a ainsi laissé prescrire celle-ci. La Cour constitue donc le comptable en débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation faite au comptable de veiller à interrompre la prescription de l'action en recouvrement par des actes à caractère conservatoire, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 8 décembre 2008, &lt;I style="mso-bidi-font-style: normal"&gt;DSF d'Aix-en-Provence&lt;/I&gt;, Recueil 2008, p. 68 et CC, 14 novembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;DSF de la Seine et Marne&lt;/I&gt;, Recueil 2012, p. 155.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'insuffisance de diligences du comptable ayant entrainé la prescription d'une créance sous forme de taxe, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 3 juin 2006, &lt;I style="mso-bidi-font-style: normal"&gt;comptables des impôts de la Marne&lt;/I&gt;, Recueil 2009, p. 58.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134192.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">IENPVVIgREVTIENPTVBURVMKICAtLS0tLS0tLQpQUkVNSUVSRSBDSEFNQlJFCiAgLS0tLS0tLS0KIFBSRU1JRVJFIFNFQ1RJT04KICAtLS0tLS0tLQogICAgICAgICAgIEFycsOqdCBuwrAgNjY5NDEKRElSRUNUSU9OIERFUyBTRVJWSUNFUyBGSVNDQVVYIERFUyBCT1VDSEVTLURVLVJIw5RORSAoTUFSU0VJTExFKQoKUkVDRVRURSBk4oCZQVVCQUdORQoKCkV4ZXJjaWNlIDIwMDQKClJhcHBvcnQgbsKwwqAyMDEzLTExMi0wCgpBdWRpZW5jZSBwdWJsaXF1ZSBkdSAyNyBtYXJzIDIwMTMKCkxlY3R1cmUgcHVibGlxdWUgZHUgNSBqdWluIDIwMTMKUsOpUFVCTElRVUUgRlJBTsOHQUlTRQpBVSBOT00gRFUgUEVVUExFIEZSQU7Dh0FJUwpMQSBDT1VSIERFUyBDT01QVEVTIGEgcmVuZHUgbOKAmWFycsOqdCBzdWl2YW50wqA6CkxBIENPVVIsClZ1IGzigJlhcnLDqnQgcHJvdmlzb2lyZSBuwrAgNDcyOTkgZHUgMjkgbm92ZW1icmUgMjAwNiBwYXIgbGVxdWVsIGVsbGUgYSBmYWl0IHLDqXNlcnZlIGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBkZSBNbWUgWCwgcmVjZXZldXIgcHJpbmNpcGFsIGTigJlBdWJhZ25lLCBhdSB0aXRyZSBkZSBzYSBnZXN0aW9uIHBlbmRhbnQgbOKAmWFubsOpZSAyMDA0LCBkYW5zIGzigJlhdHRlbnRlIGR1IHLDqXN1bHRhdCBkZSBs4oCZaW5zdGFuY2UgaW50cm9kdWl0ZSBsZSAyMiBqdWluIDIwMDEgcGFyIE1tZSBZLCByZWRldmFibGUgZCd1biBtb250YW50IGRlIDQ0wqAwMjAsNTfCoOKCrCBhdSB0aXRyZSBkZSBkcm9pdHMgZCdlbnJlZ2lzdHJlbWVudCwgbWlzIGVuIHJlY291dnJlbWVudCBwYXIgYXZpcyBub3RpZmnDqSBsZSAxMyBqdWlsbGV0IDIwMDDCoDsKVnUgbOKAmWFycsOqdCBwcm92aXNvaXJlIG7CsMKgNTI3MTkgZHUgMiBqdWlsbGV0IDIwMDgsIHBhciBsZXF1ZWwgZWxsZSBhIGNvbnRpbnXDqSBsYSByw6lzZXJ2ZSBkZSByZXNwb25zYWJpbGl0w6kgcHJvbm9uY8OpZSBwYXIgbOKAmWFycsOqdCBzdXN2aXPDqSDDoCBs4oCZZW5jb250cmUgZGUgTW1lIFg7ClZ1IGzigJlhcnLDqnQgbsKwwqA2NTA4MCBkdSAxNiBtYWkgMjAxMiBwYXIgbGVxdWVsLCBzdGF0dWFudCBkw6lmaW5pdGl2ZW1lbnQsIGVsbGUgYSBsZXbDqSBsYSByw6lzZXJ2ZSBkZSByZXNwb25zYWJpbGl0w6kgZXQsIHN0YXR1YW50IHByb3Zpc29pcmVtZW50LCBwcm9ub25jw6kgdW5lIGluam9uY3Rpb24gZGUgdmVyc2VtZW50IMOgIGzigJllbmNvbnRyZSBkZSBNbWUgWCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNMKgOwpWdSBsZXMganVzdGlmaWNhdGlvbnMgcHJvZHVpdGVzIGVuIGV4w6ljdXRpb24gZHVkaXQgYXJyw6p0wqA7CgoKVnUgbGUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlc8KgOwpWdSBsZSBjb2RlIGfDqW7DqXJhbCBkZXMgaW1ww7R0cyBldCBsZSBsaXZyZSBkZXMgcHJvY8OpZHVyZXMgZmlzY2FsZXPCoDsKVnUgbGUgZMOpY3JldCBuwrDCoDc3LTEwMTcgZHUgMWVyIHNlcHRlbWJyZSAxOTc3IHJlbGF0aWYgw6AgbGEgcmVzcG9uc2FiaWxpdMOpIGRlcyBjb21wdGFibGVzIGRlcyBhZG1pbmlzdHJhdGlvbnMgZmluYW5jacOocmVzwqA7ClZ1IGzigJlhcnRpY2xlIDYwIG1vZGlmacOpIGRlIGxhIGxvaSBuwrDCoDYzLTE1NiBkdSAyMyBmw6l2cmllciAxOTYzwqA7ClZ1IGxhIGxvaSBuwrAgMjAwOC0xMDkxIGR1IDI4IG9jdG9icmUgMjAwOCwgcmVsYXRpdmUgw6AgbGEgQ291ciBkZXMgY29tcHRlcyBldCBhdXggY2hhbWJyZXMgcsOpZ2lvbmFsZXMgZGVzIGNvbXB0ZXMsIGV0IG5vdGFtbWVudCBzb24gYXJ0aWNsZSAzNMKgOwpWdSBsYSBsb2kgbsKwwqAyMDExLTE5NzggZHUgMjggZMOpY2VtYnJlIDIwMTEgZGUgZmluYW5jZXMgcmVjdGlmaWNhdGl2ZSBwb3VywqAyMDExLCBub3RhbW1lbnQgc29uIGFydGljbGUgOTAtSUnCoDsKVnUgbCdhcnLDqnTDqSBuwrDCoDExLTgyOSBkdSBQcmVtaWVyIHByw6lzaWRlbnQgZHUgMjcgZMOpY2VtYnJlIDIwMTEsIHBvcnRhbnQgcsOpcGFydGl0aW9uIGRlcyBhdHRyaWJ1dGlvbnMgZW50cmUgbGVzIGNoYW1icmVzIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXPCoDsKVnUgbOKAmWFycsOqdMOpIG1vZGlmacOpIG7CsMKgMDYtMzQ2IGR1IFByZW1pZXIgcHLDqXNpZGVudCBkdSAxMCBvY3RvYnJlIDIwMDYsIHBvcnRhbnQgY3LDqWF0aW9uIGV0IGZpeGFudCBsYSBjb21wb3NpdGlvbiBkZXMgc2VjdGlvbnMgYXUgc2VpbiBkZSBsYSBQcmVtacOocmUgY2hhbWJyZcKgOwpTdXIgbGUgcmFwcG9ydCBkZSBNLiBBbGFpbiBMZXZpb25ub2lzLCBjb25zZWlsbGVyIHLDqWbDqXJlbmRhaXJlwqA7ClZ1IGxlcyBjb25jbHVzaW9ucyBuwrDCoDEwNSBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIHByw6hzIGxhIENvdXIgZGVzIGNvbXB0ZXMgZW4gZGF0ZSBkdSAxOCBmw6l2cmllciAyMDEzwqA7ClZ1IGxhIGxldHRyZSBkdSAxNSBmw6l2cmllciAyMDEzIGluZm9ybWFudCBNbWUgWCBkZSBsYSBkYXRlIGRlIGxhIHByw6lzZW50ZSBhdWRpZW5jZSwgZG9udCBlbGxlIGEgYWNjdXPDqSByw6ljZXB0aW9uIGxlIDE5IGbDqXZyaWVyIDIwMTPCoDsKVnUgbGEgbGV0dHJlIGVuIGRhdGUgZHUgMjggZsOpdnJpZXIgMjAxMywgZW5yZWdpc3Ryw6llIGF1IGdyZWZmZSBkZSBsYSBDb3VyIGxlIDQgbWFycyAyMDEzLCBwYXIgbGFxdWVsbGUgTW1lIFggYSBwcm9kdWl0IGRlcyBvYnNlcnZhdGlvbnMgY29tcGzDqW1lbnRhaXJlc8KgOwpFbnRlbmR1cyBlbiBhdWRpZW5jZSBwdWJsaXF1ZSBkZSBjZSBqb3VyLCBNLsKgTGV2aW9ubm9pcyBlbiBzb24gcmFwcG9ydCBvcmFsIGV0IE0uwqBZdmVzIFBlcnJpbiwgYXZvY2F0IGfDqW7DqXJhbCwgZW4gc2VzIGNvbmNsdXNpb25zIG9yYWxlcywgTW1lIFggbmUgc+KAmcOpdGFudCBwYXMgcHLDqXNlbnTDqWUgw6AgbOKAmWF1ZGllbmNlwqA7CkF5YW50IGTDqWxpYsOpcsOpIGhvcnMgZGUgbGEgcHLDqXNlbmNlIGR1IHJhcHBvcnRldXIgZXQgZHUgbWluaXN0w6hyZSBwdWJsaWMgZXQgYXByw6hzIGF2b2lyIGVudGVuZHUgTS7CoEZyYW5jaXMgQnJ1bi1CdWlzc29uLCBjb25zZWlsbGVyIG1hw650cmUsIGVuIHNlcyBvYnNlcnZhdGlvbnPCoDsKClNUQVRVQU5UIERFRklOSVRJVkVNRU5ULApPUkRPTk5FwqA6CsOAIGzigJnDqWdhcmQgZGUgTW1lIFgKRXhlcmNpY2UgMjAwNApDcsOpYW5jZSBk4oCZdW4gbW9udGFudCBkZSA0NMKgMDIwLDU3wqDigqwgw6AgbOKAmWVuY29udHJlIGRlIE1tZSBZCkF0dGVuZHUgcXVlIE1tZSBZLCByZWRldmFibGUgZCd1bmUgc29tbWUgZGUgNDTCoDAyMCw1N8Kg4oKsIGRlIGRyb2l0cyBkJ2VucmVnaXN0cmVtZW50IG1pcyBlbiByZWNvdXZyZW1lbnQgbGUgMTPCoGp1aWxsZXTCoDIwMDAsIGEgY29udGVzdMOpIHNvbiBpbXBvc2l0aW9uIHBhciByw6ljbGFtYXRpb24gZXQgZGVtYW5kw6kgdW4gc3Vyc2lzIGRlIHBhaWVtZW50wqA7IHF1ZSBsZSB0csOpc29yaWVyIGTigJlBdWJhZ25lIGF5YW50IHJlamV0w6kgc2EgcsOpY2xhbWF0aW9uLCBs4oCZaW50w6lyZXNzw6llIGEgcG9ydMOpIGxlIGxpdGlnZSBkZXZhbnQgbGUgdHJpYnVuYWwgZGUgZ3JhbmRlIGluc3RhbmNlIGRlIE1hcnNlaWxsZSwgc2Fpc2kgbGUgMjIganVpbiAyMDAxwqA7CkF0dGVuZHUgcXXigJnDoCBkw6lmYXV0IGRlIGdhcmFudGllIGNvbmRpdGlvbm5hbnQgbCdvY3Ryb2kgZOKAmXVuIHN1cnNpcyBkZSBwYWllbWVudCBzdXNwZW5zaWYgZGUgbGEgcHJlc2NyaXB0aW9uIGRlIGwnYWN0aW9uIGVuIHJlY291dnJlbWVudCwgZXQgZW4gbOKAmWFic2VuY2UgZOKAmWFjdGUgw6AgY2FyYWN0w6hyZSBjb25zZXJ2YXRvaXJlLCBsYSBwcmVzY3JpcHRpb24gcXVhZHJpZW5uYWxlIHByw6l2dWUgw6AgbCdhcnRpY2xlIEwuwqAyNzUgZHUgbGl2cmUgZGVzIHByb2PDqWR1cmVzIGZpc2NhbGVzLCBwb3V2YWl0IMOqdHJlIGFjcXVpc2Ugw6AgbGEgcmVkZXZhYmxlIGRlcHVpcyBsZSAxNMKganVpbGxldMKgMjAwNCwgc29pdCBzb3VzIGxhIGdlc3Rpb24gZGUgTW1lIFgsIGNvbXB0YWJsZSBlbiBwb3N0ZSBkZXB1aXMgbGUgMTggZMOpY2VtYnJlIDIwMDPCoDsKQXR0ZW5kdSBxdWUgbGEgQ291ciBhLCBwYXIgc29uIGFycsOqdCBwcm92aXNvaXJlIG7CsMKgNDcyOTkgZHUgMjkgbm92ZW1icmUgMjAwNiwgcHJvbm9uY8OpIHVuZSByw6lzZXJ2ZSBzdXIgbGEgcmVzcG9uc2FiaWxpdMOpIHF1aSBwb3VycmFpdCBpbmNvbWJlciDDoCBNbWUgWCwgYXUgdGl0cmUgZGUgc2EgZ2VzdGlvbiBwZW5kYW50IGwnYW5uw6llIDIwMDQsIGRhbnMgbCdhdHRlbnRlIGR1IHLDqXN1bHRhdCBkZSBsJ2luc3RhbmNlIGludHJvZHVpdGUgbGUgMjIganVpbiAyMDAxIGRldmFudCBsZSB0cmlidW5hbCBkZSBncmFuZGUgaW5zdGFuY2UgZGUgTWFyc2VpbGxlwqA7IHF14oCZZW4gcsOpcG9uc2Ugw6AgY2V0IGFycsOqdCwgbGEgY29tcHRhYmxlIGF2YWl0IGluZGlxdcOpLCBk4oCZdW5lIHBhcnQsIHF1ZSBNbWUgWSBuZSBjb250ZXN0YWl0IHBhcyBsZSBmYWl0IGQnYXZvaXIgw6AgcGF5ZXIgZGVzIGRyb2l0cyBkZSBzdWNjZXNzaW9uIG1haXMgcXUnZWxsZSB2b3VsYWl0IMOqdHJlIHPDu3JlIGRlIGxhIGNvbnNpc3RhbmNlIGRlIGxhIHN1Y2Nlc3Npb24gZXQgZHUgbW9udGFudCBkZXMgZHJvaXRzIGRlIHN1Y2Nlc3Npb24gZXQgZOKAmWF1dHJlIHBhcnQsIHF1ZSBs4oCZaXNzdWUgZGUgbOKAmWluc3RhbmNlIGNvbnRlbnRpZXVzZSBpbnRyb2R1aXRlIGxlIDIyIGp1aW4gMjAwMSBuZSBsdWkgw6l0YWl0IHRvdWpvdXJzIHBhcyBjb25udWUgYXUgbW9tZW50IG/DuSBsZSBqdWdlIGZpbmFuY2llciBhdmFpdCDDoCBzdGF0dWVywqA7CkF0dGVuZHUgcXXigJllbiBjb25zw6lxdWVuY2UsIGxhIENvdXIgYSBjb250aW51w6kgbGEgcsOpc2VydmUgYW50w6lyaWV1cmVtZW50IHByb25vbmPDqWUgc3VyIGxhIHJlc3BvbnNhYmlsaXTDqSBkZSBNbWUgWCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNCBwYXIgc29uIGFycsOqdCBuwrDCoDUyNzE5IGR1IDIganVpbGxldCAyMDA4wqA7CkF0dGVuZHUgcXVlIGxhIGRpcmVjdGlvbiBkZXMgZmluYW5jZXMgcHVibGlxdWVzIGRlcyBCb3VjaGVzLWR1LVJow7RuZSBhIGluZm9ybcOpIGxhIENvdXIgbGUgOCBzZXB0ZW1icmUgMjAxMSwgcXVlIGzigJlpbnN0YW5jZSBpbnRyb2R1aXRlIHBhciBNbWUgWSBhdmFpdCDDqXTDqSByYWRpw6llIHBhciBsZSB0cmlidW5hbCBkZSBncmFuZGUgaW5zdGFuY2UgZGUgTWFyc2VpbGxlIGxlIDIwIGphbnZpZXIgMjAwMyBwb3VyIGTDqWZhdXQgZGUgZGlsaWdlbmNlcyBkZXMgcGFydGllc8KgOwpBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBkZSBs4oCZYXJ0aWNsZSAyMjQxIGR1IGNvZGUgY2l2aWwsIGxhIGRlbWFuZGUgZW4ganVzdGljZSBpbnRlcnJvbXB0IGxlIGTDqWxhaSBkZSBwcmVzY3JpcHRpb24gZGUgbGEgY3LDqWFuY2XCoDsgbWFpcyBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlcyBkaXNwb3NpdGlvbnMgZGUgbOKAmWFydGljbGUgMjI0MyBkdSBtw6ptZSBjb2RlLCBs4oCZaW50ZXJydXB0aW9uIGVzdCBub24gYXZlbnVlIHNpIGxlIGRlbWFuZGV1ciBzZSBkw6lzaXN0ZSBkZSBzYSBkZW1hbmRlIG91IGxhaXNzZSBww6lyaW1lciBs4oCZaW5zdGFuY2Ugb3Ugc2kgc2EgZGVtYW5kZSBlc3QgZMOpZmluaXRpdmVtZW50IHJlamV0w6llwqA7IHF1ZSBsYSByYWRpYXRpb24gZGUgbOKAmWFmZmFpcmUgcGFyIGxlIHRyaWJ1bmFsIGRlIGdyYW5kZSBpbnN0YW5jZSBwb3VyIGTDqWZhdXQgZGUgZGlsaWdlbmNlcyBkZXMgcGFydGllcyBhbm51bGUgbGVzIGVmZmV0cywgc3VyIGxlIGTDqWxhaSBkZSBwcmVzY3JpcHRpb24sIGRlIGzigJlpbnRlcnJ1cHRpb24gbsOpZSBkZSBsYSByw6ljbGFtYXRpb24gZGUgTW1lIFk7IHF14oCZaWwgZW4gcsOpc3VsdGUgcXVlIGxlIGTDqWxhaSBkZSBwcmVzY3JpcHRpb24gZGUgbGEgY3LDqWFuY2Ugw6AgbOKAmWVuY29udHJlIGRlIGNldHRlIGRlcm5pw6hyZSBjb3VydCDDoCBjb21wdGVyIGRlIGxhIG1pc2UgZW4gcmVjb3V2cmVtZW50LCBxdeKAmWlsIG5lIHJlcHJlbmQgcGFzIHVuIG5vdXZlYXUgY291cnMgw6AgY29tcHRlciBkdSBkw6lzaXN0ZW1lbnTCoDsgcXVlIGxhIHByZXNjcmlwdGlvbiBlc3QgZG9uYyBhY3F1aXNlIMOgIGxhIHJlZGV2YWJsZSBkZXB1aXMgbGUgMTTCoGp1aWxsZXTCoDIwMDQsIHNvaXQgcXVhdHJlIGFucyBhcHLDqHMgbGEgbWlzZSBlbiByZWNvdXZyZW1lbnQsIHNvdXMgbGEgZ2VzdGlvbiBkZSBNbWUgWCwgcmVzcG9uc2FibGUgZGUgbGEgcmVjZXR0ZSBk4oCZQXViYWduZSBkdSAxOCBkw6ljZW1icmUgMjAwMyBhdSAyIHNlcHRlbWJyZSAyMDA3wqA7CkF0dGVuZHUgcXVlIHBhciBjZSBtb3RpZiwgZGFucyBzb24gYXJyw6p0IG7CsMKgNjUwODAgZHUgMTYgbWFpIDIwMTIsIGxhIENvdXIgYSBsZXbDqSBsYSByw6lzZXJ2ZSBwcm9ub25jw6llIMOgIGzigJllbmNvbnRyZSBkZSBNbWUgWCBldCBsdWkgYSBlbmpvaW50LCBhdSB0aXRyZSBkZSBzYSBnZXN0aW9uIHBlbmRhbnQgbOKAmWFubsOpZSAyMDA0LCBk4oCZYXBwb3J0ZXIgbGEgcHJldXZlIGR1IHZlcnNlbWVudCBkZSBzZXMgZGVuaWVycyBwZXJzb25uZWxzIGRlIGxhIHNvbW1lIGRlIDQ0wqAwMjAsNTfCoOKCrCwgb3UgdG91dGUgYXV0cmUganVzdGlmaWNhdGlvbiDDoCBkw6ljaGFyZ2XCoDsKQXR0ZW5kdSBxdeKAmWVuIHLDqXBvbnNlIMOgIGNldHRlIGluam9uY3Rpb24sIE1tZSBYIGZhaXQgdmFsb2lyIGRlcyBjaXJjb25zdGFuY2VzIHF14oCZZWxsZSBjb25zaWTDqHJlIGNvbW1lIHN1c2NlcHRpYmxlcyBk4oCZYXR0w6ludWVyIHNhIHJlc3BvbnNhYmlsaXTDqSwgZW4gcHJlbWllciBsaWV1IGxlIGNvdXJ0IGTDqWxhaSBkZSBzZXB0IG1vaXMgcXVpIGEgY291cnUgZW50cmUgc29uIGluc3RhbGxhdGlvbiBldCBsYSBwcmVzY3JpcHRpb24gZGUgbGEgY3LDqWFuY2UsIGFsb3JzIG3Dqm1lIHF14oCZZWxsZSBhdmFpdCBvYnRlbnUgdW5lIHByb2xvbmdhdGlvbiBkdSBkw6lsYWkgcXVpIGx1aSDDqXRhaXQgYWNjb3Jkw6kgcG91ciDDqW1ldHRyZSBkZXMgcsOpc2VydmVzIHN1ciBsZXMgY3LDqWFuY2VzIGxhaXNzw6llcyBwYXIgc29uIHByw6lkw6ljZXNzZXVyLCBlbiBzZWNvbmQgbGlldSBs4oCZYW1wbGV1ciBkZXMgZGlmZmljdWx0w6lzIHF1ZSBjb25uYWlzc2FpdCBsYSByZWNldHRlIGTigJlBdWJhZ25lIGTDqHMgc29uIGFycml2w6llLCBub3RhbW1lbnQgZW4gcmFpc29uIGR1IHBhc3NhZ2UgZW4gcmVjZXR0ZSDDqWxhcmdpZSwgZGUgbOKAmWFic2VudMOpaXNtZSBxdWUgY2UgcGFzc2FnZSBhdmFpdCBlbnRyYcOubsOpIHBvdXIgbGVzIGFnZW50cywgcGFydGlzIGVuIGZvcm1hdGlvbiwgYWluc2kgcXVlIGRlcyB0cmF2YXV4IGTigJlhbcOpbmFnZW1lbnQgZGVzIGxvY2F1eCBxdWkgYXZhaWVudCDDqXTDqSBlZmZlY3R1w6lzIDsKQXR0ZW5kdSBjZXBlbmRhbnQgcXVlIGxlIGp1Z2UgZGVzIGNvbXB0ZXMgZG9pdCBz4oCZYWJzdGVuaXIgZGUgdG91dGUgYXBwcsOpY2lhdGlvbiBkdSBjb21wb3J0ZW1lbnQgcGVyc29ubmVsIGRlcyBjb21wdGFibGVzIGludMOpcmVzc8OpcyBldCBuZSBwZXV0IGZvbmRlciBzZXMgZMOpY2lzaW9ucyBxdWUgc3VyIGxlcyDDqWzDqW1lbnRzIG1hdMOpcmllbHMgZGVzIGNvbXB0ZXPCoDsgcXVlIGxlcyBkaWZmaWN1bHTDqXMgZHVlcyDDoCBs4oCZw6l2b2x1dGlvbiBldCBhdXggY29uZGl0aW9ucyBk4oCZZXhlcmNpY2UgZGVzIG1pc3Npb25zIGRlIE1tZSBYIG5lIHNhdXJhaWVudCBkw6hzIGxvcnMgw6p0cmUgcHJpc2VzIGVuIGNvbXB0ZSBwYXIgbGEgQ291ciBkYW5zIGzigJlleGVyY2ljZSBkZSBzYSBmb25jdGlvbiBqdXJpZGljdGlvbm5lbGxlwqA7CkF0dGVuZHUgcXVlIHNpIGxhIHByZXNjcmlwdGlvbiBkZSBsYSBjcsOpYW5jZSBsaXRpZ2lldXNlIGVzdCBpbnRlcnZlbnVlIGRhbnMgbGUgZMOpbGFpIGFjY29yZMOpIMOgIE1tZSBYIHBvdXIgcHLDqXNlbnRlciBkZXMgcsOpc2VydmVzLCBjZWxsZS1jaSAgbuKAmWEgcGFzIGZvcm11bMOpIGRlIHLDqXNlcnZlIHN1ciBsYSBjcsOpYW5jZSByZXN0YW50IMOgIHJlY291dnJlciBzdXIgTW1lIFk7CkF0dGVuZHUgcXVlIE1tZSBYIGZhaXQgw6lnYWxlbWVudCB2YWxvaXIgcXVlIGxlIHJlY291dnJlbWVudCBkZSBsYSBjcsOpYW5jZSBwYXJhaXNzYWl0IGRpZmZpY2lsZSBlbiByYWlzb24gZGUgbOKAmWFic2VuY2UgZGUgcGF0cmltb2luZSBldCBkZSBsYSBmYWlibGVzc2UgZGVzIHJldmVudXMgZGUgbGEgcmVkZXZhYmxlwqA7IHF1ZSBkZSBjZSBmYWl0LCBlbGxlIGVzdGltZSBxdWUgbGVzIGludMOpcsOqdHMgZHUgVHLDqXNvciBuZSBzZW1ibGVudCBwYXMgYXZvaXIgw6l0w6kgbMOpc8Opc8KgOwpBdHRlbmR1IHF14oCZaWwgbmUgcGFyYcOudCBwYXMgY29udGVzdGFibGUgcXVlIGxlIG1vbnRhbnQgZGVzIHJldmVudXMgZGUgTW1lIFkgcmVuZGFpZW50IHNhbnMgZG91dGUgaW1wcm9iYWJsZSBsZSByZWNvdXZyZW1lbnQgcmFwaWRlIGRlIGxhIGNyw6lhbmNlIGRlIGzigJnDiXRhdMKgOyBxdWUgY2VwZW5kYW50LCBsYSByZWRldmFibGUgZGlzcG9zYWl0IGTigJl1biBwYXRyaW1vaW5lIHN1ciBsZXF1ZWwgY2V0dGUgY3LDqWFuY2UgYXVyYWl0IGTDuyDDqnRyZSBnYXJhbnRpZSwgY29uc3RpdHXDqSBub3RhbW1lbnQgZGVzIGFjdGlmcyBzdWNjZXNzb3JhdXggc3VyIGxlc3F1ZWxzIHNlIGZvbmRhaWVudCBsZXMgZHJvaXRzIGTigJllbnJlZ2lzdHJlbWVudCBxdeKAmWlsIMOpdGFpdCBkZW1hbmTDqSDDoCBNbWUgWCBkZSByZWNvdXZyZXLCoDsKCkF0dGVuZHUgcXXigJlpbCByZXNzb3J0IGRlcyBwacOoY2VzIGRlIGxhIHByZW1pw6hyZSBpbnN0cnVjdGlvbiwgcXVlIE1tZSBYIGF2YWl0IGFkcmVzc8OpIGxlIDE4IG1hcnMgMjAwNCDDoCBsYSByZWRldmFibGUsIHVuZSBkZW1hbmRlIGRlIGNvbnN0aXR1dGlvbiBkZSBnYXJhbnRpZSwgZGFucyBsYXF1ZWxsZSBlbGxlIGluZGlxdWFpdCBxdWXCoDogwqvCoMOgIGTDqWZhdXQgZGUgcsOpcG9uc2UgZGUgdm90cmUgcGFydCBkYW5zIHVuIGTDqWxhaSBkZSBxdWluemUgam91cnMsIGplIHNlcmFpIGRhbnMgbOKAmW9ibGlnYXRpb24gZGUgcG91cnN1aXZyZSBsZSByZWNvdXZyZW1lbnQganVzcXXigJnDoCBsYSBzYWlzaWUgaW5jbHVzaXZlbWVudMKgwrvCoDsgcXVlIGNldHRlIGRlbWFuZGUgbuKAmWEgw6l0w6kgc3VpdmllIG5pIGTigJl1bmUgcHJpc2UgZGUgZ2FyYW50aWUsIG5pIGTigJlhdWN1biBhY3RlIGNvbnNlcnZhdG9pcmUgc3VzY2VwdGlibGUgZOKAmWludGVycm9tcHJlIGxhIHByZXNjcmlwdGlvbsKgOyBxdeKAmcOgIGTDqWZhdXQgZGUgdGVsbGVzIG1lc3VyZXMgcHJpc2VzIGVuIHRlbXBzIHV0aWxlLCBpbCBu4oCZZXN0IHBhcyBjb250ZXN0w6kgcXVlIGxhIGNyw6lhbmNlIGRlIGzigJlFdGF0IGVzdCBkZXZlbnVlIGlycsOpY291dnJhYmxlIGxlIDE0IGp1aWxsZXQgMjAwNMKgOwpBdHRlbmR1IHF1ZSBsYSByZXNwb25zYWJpbGl0w6kgZGVzIGNvbXB0YWJsZXMgZHUgZmFpdCBkdSByZWNvdXZyZW1lbnQgZGVzIHJlY2V0dGVzIHPigJlhcHByw6ljaWUgYXUgcmVnYXJkIGRlIGzigJnDqXRlbmR1ZSBkZSBsZXVycyBkaWxpZ2VuY2VzLCBxdWkgZG9pdmVudCDDqnRyZSByYXBpZGVzLCBjb21wbMOodGVzIGV0IGFkw6lxdWF0ZXPCoDsgcXXigJllbGxlIG5lIHBldXQsIHBhciBkw6lmaW5pdGlvbiwgc+KAmWFwcHLDqWNpZXIgZW4gZm9uY3Rpb24gZGUgZmFpdHMgcG9zdMOpcmlldXJzIMOgIGxldXIgZ2VzdGlvbiwgbWFpcyBiaWVuIGF1IG1vbWVudCBvw7kgaWxzIGRvaXZlbnQgZXhlcmNlciBsZXMgZGlsaWdlbmNlcyBuw6ljZXNzYWlyZXMgYXUgcmVjb3V2cmVtZW50IGRlcyBjcsOpYW5jZXPCoDsKQXR0ZW5kdSBxdeKAmWlsIGFwcGFydGllbnQgw6AgbGEgQ291ciBkZSBzZSBwcm9ub25jZXIgc3VyIGxlIHBvaW50IGRlIHNhdm9pciBzaSBNbWUgWCBz4oCZZXN0IGxpdnLDqWUgYXV4IGRpZmbDqXJlbnRzIGNvbnRyw7RsZXMgcXXigJlpbCBsdWkgYXBwYXJ0aWVudCBk4oCZYXNzdXJlciwgZXQgbm90YW1tZW50LCBz4oCZYWdpc3NhbnQgZHUgcmVjb3V2cmVtZW50IGTigJl1bmUgY3LDqWFuY2UgcXXigJllbGxlIGF2YWl0IHByaXNlIGVuIGNoYXJnZSBzYW5zIHLDqXNlcnZlLCBzaSBlbGxlIGEgZXhlcmPDqSBkYW5zIGxlcyBkw6lsYWlzIGFwcHJvcHJpw6lzIHRvdXRlcyBsZXMgZGlsaWdlbmNlcyByZXF1aXNlcyBwb3VyIGNlIHJlY291dnJlbWVudMKgOwpBdHRlbmR1IHF14oCZZW4gbOKAmW9jY3VycmVuY2UsIE1tZSBYIG7igJlhIHBhcyBhcHBvcnTDqSBsYSBwcmV1dmUgcXVlIHNlcyBkaWxpZ2VuY2VzIGVuIHZ1ZSBkdSByZWNvdXZyZW1lbnQgb250IMOpdMOpIGFkw6lxdWF0ZXMsIGNvbXBsw6h0ZXMgZXQgcmFwaWRlc8KgOwpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGR1IDIzwqBmw6l2cmllcsKgMTk2MyBzdXN2aXPDqWUsIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgc2UgdHJvdXZlIGVuZ2Fnw6llIGTDqHMgbG9ycyBxdSd1bmUgcmVjZXR0ZSBuJ2EgcGFzIMOpdMOpIHJlY291dnLDqWXCoDsgcXVlIE1tZSBYIGRvaXQgYWluc2kgw6p0cmUgY29uc3RpdHXDqWUgZMOpYml0cmljZSBlbnZlcnMgbOKAmcOJdGF0IGRlIGxhIHNvbW1lIGRlIDQ0wqAwMjAsNTfCoGV1cm9zIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA0wqA7CkF0dGVuZHUgcXVlIHPigJlhZ2lzc2FudCBk4oCZb3DDqXJhdGlvbnMgYXlhbnQgZG9ubsOpIGxpZXUgw6AgdW4gcHJlbWllciBhY3RlIGRlIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBkZSBjZSBjb21wdGFibGUgYXZhbnQgbGUgMWVyIGp1aWxsZXQgMjAxMiwgbGEgcmVzcG9uc2FiaWxpdMOpIGRlIE1tZSBYIGRvaXQgw6p0cmUgZXhhbWluw6llIGF1IHJlZ2FyZCBkZXMgZGlzcG9zaXRpb25zIGRlIGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkdSAyMyBmw6l2cmllciAxOTYzIHN1c3Zpc8OpZSwgZGFucyBsZXVyIHZlcnNpb24gZW4gdmlndWV1ciBhdmFudCBsZSAxZXIganVpbGxldCAyMDEywqA7IHF1ZSBsZSBwcmVtaWVyIGFjdGUgZGUgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIGRlIE1tZSBYIMOpdGFudCBpbnRlcnZlbnUgYXZhbnQgbGUgMWVyIGp1aWxsZXQgMjAwNywgaWwgeSBhIGxpZXUsIGVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlwqAxNDYgZGUgbGEgbG9pIG7CsMKgMjAwNi0xNzcxIGR1IDMwIGTDqWNlbWJyZSAyMDA2LCBkZSBmYWlyZSBhcHBsaWNhdGlvbiBkZXMgZGlzcG9zaXRpb25zIGR1IFZJSUkgZGUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGR1IDIzIGbDqXZyaWVyIDE5NjMgZGFucyBzYSByw6lkYWN0aW9uIGlzc3VlIGRlIGxhIGxvaSBuwrDCoDIwMDQtMTQ4NSBkdSAzMCBkw6ljZW1icmUgMjAwNCwgZG9udCBpbCByw6lzdWx0ZSBxdWUgbGVzIGTDqWJldHMgcG9ydGVudCBpbnTDqXLDqnQgw6AgY29tcHRlciBkZSBsYSBkYXRlIGR1IGZhaXQgZ8OpbsOpcmF0ZXVyIG91LCBzaSBjZXR0ZSBkYXRlIG5lIHBldXQgw6p0cmUgY29ubnVlIGF2ZWMgcHLDqWNpc2lvbiwgw6AgY29tcHRlciBkZSBjZWxsZSBkZSBsZXVyIGTDqWNvdXZlcnRlwqA7CkF0dGVuZHUgcXXigJllbiBs4oCZZXNww6hjZSwgbGUgZmFpdCBnw6luw6lyYXRldXIgZGUgbGEgY2hhcmdlIHByb25vbmPDqWUgw6AgbOKAmWVuY29udHJlIGRlIE1tZSBYIHLDqXN1bHRlIGRlIGxhIHByZXNjcmlwdGlvbiBkZSBsYSBjcsOpYW5jZSwgcXVpIGVzdCBpbnRlcnZlbnVlIGxlIDE0wqBqdWlsbGV0wqAyMDA0wqA7IHF1ZSBsZXMgaW50w6lyw6p0cyBkb2l2ZW50IGRvbmMgY291cmlyIMOgIGNvbXB0ZXIgZGUgY2V0dGUgZGF0ZcKgOyAKClBhciBjZXMgbW90aWZzwqA6CmzigJlpbmpvbmN0aW9uIHVuaXF1ZSBwcm9ub25jw6llIMOgIGzigJllbmNvbnRyZSBkZSBNbWUgWCwgY29tcHRhYmxlIGRlIGxhIHRyw6lzb3JlcmllIHByaW5jaXBhbGUgZGVzIGltcMO0dHMgZOKAmUF1YmFnbmUgZHUgMTggZMOpY2VtYnJlIDIwMDMgYXUgMiBzZXB0ZW1icmUgMjAwNywgcGFyIGzigJlhcnLDqnQgc3Vzdmlzw6kgZHUgMTYgbWFpIDIwMTIgZXN0IGxldsOpZcKgOwpNbWUgWCBlc3QgY29uc3RpdHXDqWUgZMOpYml0cmljZSBlbnZlcnMgbOKAmcOJdGF0IGRlIGxhIHNvbW1lIGRlIHF1YXJhbnRlLXF1YXRyZSBtaWxsZSB2aW5ndCBldXJvcyBldCBjaW5xdWFudGUtc2VwdCBjZW50aW1lcyAoNDTCoDAyMCw1N8Kg4oKsKSwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDQsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSA5IGbDqXZyaWVyIDIwMDcuCi0tLS0tLS0tLQpGYWl0IGV0IGp1Z8OpIGVuIGxhIENvdXIgZGVzIGNvbXB0ZXMsIHByZW1pw6hyZSBjaGFtYnJlLCBwcmVtacOocmUgc2VjdGlvbiwgbGXCoHZpbmd0LXNlcHQgbWFycyBkZXV4IG1pbCB0cmVpemUuIFByw6lzZW50c8KgOiBNbWUgRnJhZGluLCBwcsOpc2lkZW50IGRlIHNlY3Rpb24sIE1NLsKgZGXCoE1vdXJndWVzLCBCcnVuLUJ1aXNzb24sIExhaXIsIE9yeS1MYXZvbGzDqWUgZXQgQ2hvdXZldCwgY29uc2VpbGxlcnMgbWHDrnRyZXMuClNpZ27DqcKgOsKgRnJhZGluLCBwcsOpc2lkZW50IGRlIHNlY3Rpb24sIEF1YnJ5LCBhdXhpbGlhaXJlIGRlIGdyZWZmZS4KQ29sbGF0aW9ubsOpLCBjZXJ0aWZpw6kgY29uZm9ybWUgw6AgbGEgbWludXRlIMOpdGFudCBhdSBncmVmZmUgZGUgbGEgQ291ciBkZXMgY29tcHRlcy4KRW4gY29uc8OpcXVlbmNlLCBsYSBSw6lwdWJsaXF1ZSBmcmFuw6dhaXNlIG1hbmRlIGV0IG9yZG9ubmUgw6AgdG91cyBodWlzc2llcnMgZGUganVzdGljZSwgc3VyIGNlIHJlcXVpcywgZGUgbWV0dHJlIGxlZGl0IGFycsOqdCDDoCBleMOpY3V0aW9uLCBhdXggcHJvY3VyZXVycyBnw6luw6lyYXV4IGV0wqBhdXggcHJvY3VyZXVycyBkZSBsYSBSw6lwdWJsaXF1ZSBwcsOocyBsZXMgdHJpYnVuYXV4IGRlIGdyYW5kZSBpbnN0YW5jZSBk4oCZecKgdGVuaXIgbGEgbWFpbiwgw6AgdG91cyBjb21tYW5kYW50cyBldCBvZmZpY2llcnMgZGUgbGEgZm9yY2UgcHVibGlxdWUgZGUgcHLDqnRlciBtYWluLWZvcnRlIGxvcnNxdeKAmWlscyBlbiBzZXJvbnQgbMOpZ2FsZW1lbnQgcmVxdWlzLgpEw6lsaXZyw6kgcGFyIG1vaSwgc2VjcsOpdGFpcmUgZ8OpbsOpcmFsLgpQb3VyIGxlIFNlY3LDqXRhaXJlIGfDqW7DqXJhbApldCBwYXIgZMOpbMOpZ2F0aW9uLApsZSBDaGVmIGR1IEdyZWZmZSBjb250ZW50aWV1eAoKCgoKCgoKCkRhbmllbCBGRVJFWgo=</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134116">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134116</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">67027</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. SENHAJI, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme GADRIOT-RENARD, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>25/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">31/05/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">30/05/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Fabrezan (Aude) - Appel d'un jugement de la chambre régionale des comptes de Languedoc-Roussillon.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 79.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Comptes</DESCRIPTEUR>
<DESCRIPTEUR>Prescription extinctive</DESCRIPTEUR>
<DESCRIPTEUR>Décharge du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Chambre régionale des comptes</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le comptable d'une commune avait été constitué en débet pour défaut de diligences dans le recouvrement de créances. Il faisait valoir en appel qu'une attestation de la direction départementale des finances publiques, prise sur le fondement d'une liste établie par la CRC, l'avait déchargé de sa gestion pour les exercices au titre desquels le débet avait été prononcé. La Cour a relevé, d'une part, que le juge financier était seul compétent pour statuer sur les comptes et pour constater s'ils étaient atteints par la prescription. De plus, le jugement provisoire ayant été notifié au comptable avant l'établissement de l'attestation administrative, elle en a déduit que seul un jugement définitif pouvait clore la procédure régulièrement ouverte par le jugement provisoire.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'effet de la prescription extinctive de responsabilité, cf. CC, 23 juillet 2009, &lt;I style="mso-bidi-font-style: normal"&gt;Institut international d'administration publique&lt;/I&gt;, Recueil 2009, p. 53.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134116.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134114">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134114</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66956</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LEGER, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>25/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">31/05/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">30/05/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Centre hospitalier de l'Ouest guyanais (CHOG) - Appel d'un jugement de la chambre régionale des comptes de Guyane.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134114.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134128">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134128</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66898</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LAFAURE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>25/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">30/05/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">30/05/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Syndicat intercommunal à vocation multiple (SIVOM) de Froissy (Oise) - Appel d'un jugement de la chambre régionale des comptes de Picardie.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134128.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134126">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134126</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66997</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. SENHAJI, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme GADRIOT-RENARD, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>25/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">30/05/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">30/05/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Fabrezan (Aude) - Appel d'un jugement de la chambre régionale des comptes de Languedoc-Roussillon.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 81.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Procédure</DESCRIPTEUR>
<DESCRIPTEUR>Appel</DESCRIPTEUR>
<DESCRIPTEUR>Recevabilité</DESCRIPTEUR>
<DESCRIPTEUR>Irrecevabilité</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
La Cour a déclaré irrecevable la requête en appel formulée par un comptable qui ne s'était pas acquitté de la contribution pour l'aide juridique créée par la loi du 29 juillet 2011 de finances rectificative pour 2011. Pour cela, elle a relevé que, si l'obligation d'acquitter cette contribution n'avait pas été mentionnée dans la notification du jugement de la CRC, l'intéressé avait, en vain, été invité par le greffe de la Cour à régulariser sa situation.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
L'article 54 de la loi du 29 juillet 2011 de finances rectificative pour 2011 a créé la contribution pour l'aide juridique, la rendant applicable aux instances introduites à compter du 1er octobre 2011. Le décret n°2011-1202 du 28 septembre 2011, pris pour l'application de cette disposition, renvoie à l'article R. 411-2 du code de justice administrative. Ce dernier prévoit l'irrecevabilité des requêtes présentées en l'absence d'acquittement de la contribution prévue. Il permet au juge de rejeter d'office de telles requêtes, sans demande de régularisation préalable, lorsque l'obligation d'acquitter la contribution a été précisée dans la notification de la décision attaquée. L'arrêt &lt;I style="mso-bidi-font-style: normal"&gt;commune de Fabrezan&lt;/I&gt; constitue le premier cas d'application de ces dispositions par la Cour.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La contribution pour l'aide juridique a été supprimée par l'article 128 de la loi n° 2013-1278 du 29 décembre 2013 de finances pour 2014. Le droit de timbre créé par la loi n° 77-1468 du 30 décembre 1977, applicable devant la juridiction administrative générale jusqu'à son abrogation par l'ordonnance n° 2003-1235 du 22 décembre 2003, ne s'appliquait pas aux juridictions financières.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134126.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">Q29tbXVuZSBkZSBGYWJyZXphbiAoQVVERSkKCgpBcHBlbCBk4oCZdW4ganVnZW1lbnQgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIExhbmd1ZWRvYy1Sb3Vzc2lsbG9uCgoKUmFwcG9ydCBuwrDCoDIwMTMtMjI0LTAKCkF1ZGllbmNlIHB1YmxpcXVlIGV0IGTDqWxpYsOpcsOpIGR1IDI1IGF2cmlsIDIwMTMKCkxlY3R1cmUgcHVibGlxdWUgZHUgIDMwIG1haSAyMDEzCkxBIENPVVIgREVTIENPTVBURVMgYSByZW5kdSBs4oCZYXJyw6p0IHN1aXZhbnTCoDoKTEEgQ09VUiwKVnUgbGEgcmVxdcOqdGUgZW4gZGF0ZSBkdSA0IG5vdmVtYnJlIDIwMTEsIGVucmVnaXN0csOpZSBhdSBncmVmZmUgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIExhbmd1ZWRvYy1Sb3Vzc2lsbG9uIGxlIDkgbm92ZW1icmUgMjAxMSwgcGFyIGxhcXVlbGxlIE0uwqBYLCBjb21wdGFibGUgZGUgbGEgY29tbXVuZSBkZSBGYWJyZXphbiBkdSAzMCBqdWluIDIwMDEgYXUgMzAgIGp1aW4gMjAwMywgYSDDqWxldsOpIGFwcGVsIGRlcyBkaXNwb3NpdGlvbnMgZMOpZmluaXRpdmVzIGR1IGp1Z2VtZW50IG7CsMKgMjAxMTAwMDQgZHUgMjkganVpbiAyMDExIHBhciBsZXF1ZWwgY2V0dGUganVyaWRpY3Rpb24gbOKAmWEgY29uc3RpdHXDqSBkw6liaXRldXIgZGUgbGFkaXRlIGNvbW11bmUgZGUgbGEgc29tbWUgZGUgMcKgNDM4LDkywqDigqwsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXTCoDsKVnUgbGUgcsOpcXVpc2l0b2lyZSBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIHByw6hzIGxhIENvdXIgZGVzIGNvbXB0ZXMgbsKwwqAyMDEyLTQgZHUgMTcgamFudmllciAyMDEyIHRyYW5zbWV0dGFudCDDoCBsYSBDb3VyIGxhIHJlcXXDqnRlIHByw6ljaXTDqWXCoDsKVnUgbGVzIHBpw6hjZXMgZGUgbGEgcHJvY8OpZHVyZSBzdWl2aWUgZW4gcHJlbWnDqHJlIGluc3RhbmNlwqA7ClZ1IGxlIG3DqW1vaXJlIGNvbXBsw6ltZW50YWlyZSB0cmFuc21pcyBwYXIgbOKAmWFwcGVsYW50IGxlIDI1IG1hcnMgMjAxM8KgOwpWdSBsZSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzwqA7CgoKVnUgbGUgY29kZSBnw6luw6lyYWwgZGVzIGltcMO0dHMgZXQgbm90YW1tZW50IHNvbiBhcnRpY2xlIDE2MzXCoGJpcyBRIGRhbnMgc2EgcsOpZGFjdGlvbiBpc3N1ZSBkZSBs4oCZYXJ0aWNsZcKgNTQtSUkgZGUgbGEgbG9pIG7CsMKgMjAxMS05MDAgZHUgMjkganVpbGxldCAyMDExIGRlIGZpbmFuY2VzIHJlY3RpZmljYXRpdmUgcG91ciAyMDExwqA7ClZ1IGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkZSBmaW5hbmNlcyBuwrAgNjMtMTU2IGR1IDIzIGbDqXZyaWVyIDE5NjMgbW9kaWZpw6llwqA7ClZ1IGxlIGTDqWNyZXQgbsKwIDIwMTEtMTIwMiBkdSAyOCBzZXB0ZW1icmUgMjAxMSByZWxhdGlmIGF1IGRyb2l0IGFmZmVjdMOpIGF1IGZvbmRzIGTigJlpbmRlbW5pc2F0aW9uIGRlIGxhIHByb2Zlc3Npb24gZOKAmWF2b3XDqSBwcsOocyBsZXMgY291cnMgZOKAmWFwcGVsIGV0IMOgIGxhIGNvbnRyaWJ1dGlvbiBwb3VyIGzigJlhaWRlIGp1cmlkaXF1ZSwgbm90YW1tZW50IHNvbiBhcnRpY2xlIDE4wqA7ClZ1IGxlIHJhcHBvcnQgZGUgTS7CoE9tYXIgU2VuaGFqaSwgY29uc2VpbGxlciBtYcOudHJlwqA7ClZ1IGxlcyBjb25jbHVzaW9ucyBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIG7CsCAyMzAgZHUgMjIgbWFycyAyMDEzIDsKRW50ZW5kdSwgbG9ycyBkZSBs4oCZYXVkaWVuY2UgcHVibGlxdWUgZGUgY2Ugam91ciwgTS7CoE9tYXIgU2VuaGFqaSwgcmFwcG9ydGV1ciwgZW4gc29uIHJhcHBvcnQsIE0uwqBZdmVzIFBlcnJpbiwgYXZvY2F0IGfDqW7DqXJhbCwgZW4gbGVzIGNvbmNsdXNpb25zIGR1IG1pbmlzdMOocmUgcHVibGljLCBs4oCZYXBwZWxhbnQsIGluZm9ybcOpIGRlIGzigJlhdWRpZW5jZSwgbuKAmcOpdGFudCBuaSBwcsOpc2VudCBuaSByZXByw6lzZW50w6nCoDsKRW50ZW5kdWUgZW4gZMOpbGliw6lyw6ksIE1tZSBIw6lsw6huZSBHYWRyaW90LVJlbmFyZCwgY29uc2VpbGzDqHJlIG1hw650cmUsIGVuIHNlcyBvYnNlcnZhdGlvbnPCoDsKQXR0ZW5kdSBxdWUsIHBhciBqdWdlbWVudCBkw6lmaW5pdGlmIG7CsCAyMDExLTAwMDQgZHUgMjkganVpbiAyMDExLCBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgTGFuZ3VlZG9jLVJvdXNzaWxsb24gYSBjb25zdGl0dcOpIE0uwqBYLCBjb21wdGFibGUgZGUgbGEgY29tbXVuZSBkZSBGYWJyZXphbiwgZMOpYml0ZXVyIGRlIGxhZGl0ZSBjb21tdW5lIGRlIGxhIHNvbW1lIGRlIDHCoDQzOCw5MsKg4oKsLCDDoCByYWlzb24gZOKAmXVuIGTDqWZhdXQgZGUgZGlsaWdlbmNlcyBheWFudCBjb25kdWl0IMOgIGzigJlpcnLDqWNvdXZyYWJpbGl0w6kgZGUgY3LDqWFuY2VzIGTDqXRlbnVlcyBwYXIgbGEgY29tbXVuZcKgOyBxdWUgbGUgY29tcHRhYmxlIGNvbnRlc3RlIGxlIGp1Z2VtZW50IGTDqWZpbml0aWYsIMOgIGx1aSBub3RpZmnDqSBsZSAxOcKgc2VwdGVtYnJlwqAyMDExLCBldCBlbiBkZW1hbmRlIGzigJlpbmZpcm1hdGlvbsKgOyAKQ29uc2lkw6lyYW50IGVuIHByZW1pZXIgbGlldSBxdeKAmWlsIHLDqXN1bHRlIGRlcyBkaXNwb3NpdGlvbnMgZGUgbOKAmWFydGljbGUgMTYzNcKgYmlzwqBRIGR1IGNvZGUgZ8OpbsOpcmFsIGRlcyBpbXDDtHRzIHF1ZSDCq8KgSS7CoC3CoFBhciBkw6lyb2dhdGlvbiBhdXggYXJ0aWNsZXMgMTA4OSBBIGV0IDEwODkgQiwgdW5lIGNvbnRyaWJ1dGlvbiBwb3VyIGwnYWlkZSBqdXJpZGlxdWUgZGUgMzXCoOKCrCBlc3QgcGVyw6d1ZSBwYXIgaW5zdGFuY2UgaW50cm9kdWl0ZSBlbiBtYXRpw6hyZSBjaXZpbGUsIGNvbW1lcmNpYWxlLCBwcnVkJ2hvbWFsZSwgc29jaWFsZSBvdSBydXJhbGUgZGV2YW50IHVuZSBqdXJpZGljdGlvbiBqdWRpY2lhaXJlIG91IHBhciBpbnN0YW5jZSBpbnRyb2R1aXRlIGRldmFudCB1bmUganVyaWRpY3Rpb24gYWRtaW5pc3RyYXRpdmUuwqBJSS7CoC3CoExhIGNvbnRyaWJ1dGlvbiBwb3VyIGwnYWlkZSBqdXJpZGlxdWUgZXN0IGV4aWdpYmxlIGxvcnMgZGUgbCdpbnRyb2R1Y3Rpb24gZGUgbCdpbnN0YW5jZS4gRWxsZSBlc3QgZHVlIHBhciBsYSBwYXJ0aWUgcXVpIGludHJvZHVpdCB1bmUgaW5zdGFuY2XCoMK7wqA7IHF14oCZZW4gdmVydHUgZHUgbcOqbWUgYXJ0aWNsZSBjZXMgZGlzcG9zaXRpb25zIHNvbnQgYXBwbGljYWJsZXMgwqvCoGF1eCBpbnN0YW5jZXMgaW50cm9kdWl0ZXMgw6AgY29tcHRlciBkdSAxZXIgb2N0b2JyZSAyMDExLsKgwrvCoDsgcXXigJllbiBjb25zw6lxdWVuY2UgbGEgcmVxdcOqdGUgaW50cm9kdWl0ZSBwYXIgTS7CoFgsIGRhdMOpZSBkdSA0IG5vdmVtYnJlIDIwMTEgZXQgZW5yZWdpc3Ryw6llIGF1IGdyZWZmZSBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgTGFuZ3VlZG9jLVJvdXNzaWxsb24gbGUgOSBub3ZlbWJyZSAyMDExLCBlc3TCoHNvdW1pc2Ugw6AgbOKAmW9ibGlnYXRpb24gZGUgdmVyc2VtZW50IGRlIGxhIGNvbnRyaWJ1dGlvbiBwcsOpY2l0w6llwqA7CgpDb25zaWTDqXJhbnQgZW4gc2Vjb25kIGxpZXUgcXVlIGzigJlhcnRpY2xlIDE4IGR1IGTDqWNyZXQgbsKwwqAyMDExLTEyMDIgc3Vzdmlzw6kgcHLDqWNpc2UgcXVlIMKrwqBQb3VyIGwnYXBwbGljYXRpb24gZGUgbCdhcnRpY2xlIDE2MzUgYmlzIFEgZHUgY29kZSBnw6luw6lyYWwgZGVzIGltcMO0dHMsIGxlcyBkaXNwb3NpdGlvbnMgZGVzIGFydGljbGVzIFIuwqA0MTEtMiwgUi7CoDQxMS0yLTEsIFIuwqA3NTEtNSAoZGV1eGnDqG1lIGFsaW7DqWEpIGV0IFIuwqA3NjEtMSBkdSBjb2RlIGRlIGp1c3RpY2UgYWRtaW5pc3RyYXRpdmUgc29udCBhcHBsaWNhYmxlcyBkZXZhbnQgbGVzIGp1cmlkaWN0aW9ucyByZWxldmFudCBkdSBDb25zZWlsIGQnRXRhdCBxdWkgbmUgc29udCBwYXMgcsOpZ2llcyBwYXIgbGUgY29kZSBkZSBqdXN0aWNlIGFkbWluaXN0cmF0aXZlwqDCu8KgOyBxdeKAmWlsIHLDqXN1bHRlIGRlIGzigJlhcnRpY2xlIFIuwqA0MTEtMiBkdSBjb2RlIGRlIGp1c3RpY2UgYWRtaW5pc3RyYXRpdmUgcXVlIMKrwqBMb3JzcXVlIGxhIGNvbnRyaWJ1dGlvbiBwb3VyIGwnYWlkZSBqdXJpZGlxdWUgcHLDqXZ1ZSDDoCBsJ2FydGljbGUgMTYzNSBiaXMgUSBkdSBjb2RlIGfDqW7DqXJhbCBkZXMgaW1ww7R0cyBlc3QgZHVlIGV0IG4nYSBwYXMgw6l0w6kgYWNxdWl0dMOpZSwgbGEgcmVxdcOqdGUgZXN0IGlycmVjZXZhYmxlLiAo4oCmKSBQYXIgZXhjZXB0aW9uIGF1IHByZW1pZXIgYWxpbsOpYSBkZSBsJ2FydGljbGUgUi7CoDYxMi0xLCBsYSBqdXJpZGljdGlvbiBwZXV0IHJlamV0ZXIgZCdvZmZpY2UgdW5lIHJlcXXDqnRlIGVudGFjaMOpZSBkJ3VuZSB0ZWxsZSBpcnJlY2V2YWJpbGl0w6kgc2FucyBkZW1hbmRlIGRlIHLDqWd1bGFyaXNhdGlvbiBwcsOpYWxhYmxlLCBsb3JzcXVlIGwnb2JsaWdhdGlvbiBkJ2FjcXVpdHRlciBsYSBjb250cmlidXRpb24gb3UsIMOgIGTDqWZhdXQsIGRlIGp1c3RpZmllciBkdSBkw6lww7R0IGQndW5lIGRlbWFuZGUgZCdhaWRlIGp1cmlkaWN0aW9ubmVsbGUsIGVzdCBtZW50aW9ubsOpZSBkYW5zIGxhIG5vdGlmaWNhdGlvbiBkZSBsYSBkw6ljaXNpb24gYXR0YXF1w6llIG91IGxvcnNxdWUgbGEgcmVxdcOqdGUgZXN0IGludHJvZHVpdGUgcGFyIHVuIGF2b2NhdMKgwrvCoDsKQ29uc2lkw6lyYW50IHF1ZSwgc2kgbGEgbm90aWZpY2F0aW9uIGRlIGxhIGTDqWNpc2lvbiBhdHRhcXXDqWUgbmUgbWVudGlvbm5haXQgcGFzIGzigJlvYmxpZ2F0aW9uIGTigJlhY3F1aXR0ZXIgbGEgY29udHJpYnV0aW9uIGR1ZSwgbGUgZ3JlZmZlIGRlIGxhIENvdXIgYSBkZW1hbmTDqSBhdSByZXF1w6lyYW50IGRlIHByb2PDqWRlciDDoCBsYSByw6lndWxhcmlzYXRpb24gZGUgc2Egc2l0dWF0aW9uIGF2YW50IHF1ZSBzZSB0aWVubmUgbOKAmWF1ZGllbmNlIHB1YmxpcXVlIGRlc3RpbsOpZSDDoCBleGFtaW5lciBzYSByZXF1w6p0ZcKgOyBxdeKAmcOgIGxhIGRhdGUgZGUgbOKAmWF1ZGllbmNlIHB1YmxpcXVlLCBs4oCZaW50w6lyZXNzw6kgbuKAmWF2YWl0IHBhcyBwcm9jw6lkw6kgw6AgbGEgcsOpZ3VsYXJpc2F0aW9uIGVuIHF1ZXN0aW9uIGVuIHPigJlhY3F1aXR0YW50IGRlIGxhIGNvbnRyaWJ1dGlvbiBkdWXCoDsgcXXigJlhaW5zaSBsYSByZXF1w6p0ZSBkZSBNLsKgWCBlc3QgaXJyZWNldmFibGXCoDsKUGFyIGNlcyBtb3RpZnMsCkTDqUNJREXCoDoKQXJ0aWNsZSB1bmlxdWXCoDogbGEgcmVxdcOqdGUgZGUgTS7CoFggZXN0IGlycmVjZXZhYmxlLgotLS0tLS0tLS0tLS0KRmFpdCBldCBqdWfDqSBlbiBsYSBDb3VyIGRlcyBjb21wdGVzLCBxdWF0cmnDqG1lIGNoYW1icmUsIHByZW1pw6hyZSBzZWN0aW9uLiBQcsOpc2VudHPCoDrCoE1NLsKgQmF5bGUsIHByw6lzaWRlbnQsIE1haXN0cmUsIHByw6lzaWRlbnQgZGUgc2VjdGlvbiwgR2Fuc2VyLCBMYWZhdXJlLCBWYWNoaWEsIE1tZXPCoERvcyBSZWlzIGV0IEdhZHJpb3QtUmVuYXJkLCBldCBNLsKgR2VvZmZyb3ksIGNvbnNlaWxsZXJzIG1hw650cmVzLgoKU2lnbsOpwqA6IEJheWxlLCBwcsOpc2lkZW50LCBldCBMZSBCYXJvbiwgZ3JlZmZpZXIuCkNvbGxhdGlvbm7DqSwgY2VydGlmacOpIGNvbmZvcm1lIMOgIGxhIG1pbnV0ZSDDqXRhbnQgYXUgZ3JlZmZlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMgZXQgZMOpbGl2csOpIHBhciBtb2ksIHNlY3LDqXRhaXJlIGfDqW7DqXJhbC4KUG91ciBsZSBTZWNyw6l0YWlyZSBnw6luw6lyYWwKZXQgcGFyIGTDqWzDqWdhdGlvbiwKbGUgQ2hlZiBkdSBHcmVmZmUgY29udGVudGlldXgKRGFuaWVsIEZFUkVaCg==</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00134124">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00134124</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66954</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. SENHAJI, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>25/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">30/05/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">30/05/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Syndicat intercommunal de collecte et de traitement des ordures ménagères (SICTOM) de la zone de Dole (Jura) - Appel d'un jugement de la chambre régionale des comptes de Franche-Comté.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00134124.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133924">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133924</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66922</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LAIR, Conseiller maitre</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. DE MOURGUES, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>27/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">21/05/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">21/05/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction départementale des finances publiques (DDFIP) des Côtes d'Armor - Service des impôts des entreprises (SIE) de Saint-Brieuc-Est - Exercice 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133924.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133923">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133923</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66921</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LAIR, Conseiller maitre</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. DE MOURGUES, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>27/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">21/05/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">21/05/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction départementale des finances publiques (DDFIP) des Côtes d'Armor - Service des impôts des entreprises (SIE) de Saint-Brieuc-Est - Exercices 2005 et 2007.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 74.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Impôts</DESCRIPTEUR>
<DESCRIPTEUR>TVA</DESCRIPTEUR>
<DESCRIPTEUR>Redressement judiciaire</DESCRIPTEUR>
<DESCRIPTEUR>Liquidation</DESCRIPTEUR>
<DESCRIPTEUR>Créance</DESCRIPTEUR>
<DESCRIPTEUR>Recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Déclaration définitive</DESCRIPTEUR>
<DESCRIPTEUR>Prescription</DESCRIPTEUR>
<DESCRIPTEUR>Admission en non-valeur</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Une société à responsabilité limitée, déclarée en redressement judiciaire puis mise en liquidation judiciaire, était débitrice envers l'Etat de plusieurs créances fiscales. La Cour relève que l'une des créances, régulièrement déclarée à titre définitif et admise au passif par le comptable de l'Etat, avait été payée par le liquidateur judiciaire mandaté. Par ailleurs, une créance du Trésor d'une valeur de 50 000 euros déclarée à titre provisionnel et admise au passif, avait été mise en recouvrement le 29 août 2005. Or, la Cour constate qu'une créance de taxe sur la valeur ajoutée (TVA) de 113 323 euros avait été notifiée avant cette date au comptable, et que celui-ci ne l'a pas déclarée à titre définitif dans les délais prévus. En outre, le juge des comptes relève que le comptable n'a effectué aucune demande en relevé de forclusion pour le surplus de 63 323 euros, la créance de 113 323 euros se trouvant éteinte à l'expiration du délai légal. La Cour affirme que l'absence de conversion à titre définitif des créances déclarées à titre provisionnel et le défaut de demande de relevé de forclusion constituent un manquement du comptable. Bien que le Trésor n'ait pas été désintéressé d'autres créances régulièrement déclarées ou qu'il ne l'ait été que partiellement, la Cour a considéré en l'espèce que le manquement du comptable a causé, au cours de l'exercice donné, un préjudice financier équivalent au montant de la somme devenue irrécouvrable, soit 113 323 euros. La Cour constitue donc le comptable en débet. La Cour ayant ensuite modifié sa jurisprudence sur l'appréciation du préjudice, cet arrêt constitue une exception. Il a fait l'objet d'un pourvoi en cassation.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le réquisitoire étant du 18 octobre 2012, cette affaire est la première dont la première chambre a eu à connaître sous l'empire du nouveau régime de responsabilité personnelle et pécuniaire des comptables publics issu de l'article 60 de la loi du 23 février 1963 modifiée, dont les dispositions sont entrées en vigueur au 1er juillet 2012. Suivant les conclusions du Procureur général, la Cour avait apprécié le préjudice au temps de l'(in)action du comptable, et non &lt;I style="mso-bidi-font-style: normal"&gt;in fine&lt;/I&gt;.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Cet arrêt fait l'objet d'un pourvoi en cassation.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour a opéré un revirement de jurisprudence dans une décision du 18 septembre 2013. Dorénavant, si le manquement reste apprécié au moment des faits, en revanche le préjudice financier est apprécié par la Cour, non au temps de l'(in)action du comptable mais &lt;I style="mso-bidi-font-style: normal"&gt;in fine&lt;/I&gt;, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 18 septembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;DDFIP de l'Indre - SIE de Châteauroux &lt;/I&gt;, Recueil 2013, p. 146. La Cour n'avait pas suivi les conclusions du Procureur général qui estimait que « &lt;I style="mso-bidi-font-style: normal"&gt;l'absence de recouvrement de recettes, sauf dans le cas d'une insolvabilité avérée du débiteur antérieure à la prise en charge, par le comptable, des créances qu'il doit recouvrer, constitue dans tous les cas un préjudice financier pour l'organisme public &lt;/I&gt;».
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'estimation du préjudice dû à une erreur manifeste du comptable pour un cautionnement, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 18 septembre 2013, &lt;I style="mso-bidi-font-style: normal"&gt;DDFIP de l'Indre - SIE - Service des impôts des particuliers du Blanc&lt;/I&gt;, Recueil 2013, p. 150.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133923.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133904">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133904</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66154</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. HERBIN, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. LAIR, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>16/10/2012</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>23/10/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">21/05/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">21/05/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Trésorier-payeur général (TPG) de la Martinique - Exercices 2005 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133904.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133606">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133606</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66142</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme DOS REIS, Conseillere maitre</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme MOATI, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>15/05/2012</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>16/05/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">29/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">29/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Direction régionale des douanes de Paris - Exercices 2002 à 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Décharge</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 67.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Ministère public</DESCRIPTEUR>
<DESCRIPTEUR>Société anonyme</DESCRIPTEUR>
<DESCRIPTEUR>Comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Droits de douane et taxes assimilées</DESCRIPTEUR>
<DESCRIPTEUR>Trésor public</DESCRIPTEUR>
<DESCRIPTEUR>Mise en recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Irrécouvrabilité</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Huissier</DESCRIPTEUR>
<DESCRIPTEUR>Créance non recouvrée</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Juge des comptes</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable avait vu sa responsabilité engagée pour ne pas avoir effectué les diligences qui lui incombaient en vue du recouvrement d'une créance correspondant à une amende en matière de contributions indirectes. La Cour considère que les confiscations, amendes et restitutions douanières sont constitutives de droits et engagent la responsabilité du comptable devant le juge des comptes. La Cour étend donc la responsabilité du receveur des douanes au recouvrement des amendes prises en charge et constitue donc le comptable en débet.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la troisième charge, le comptable affirme que la situation des redevables empêchait &lt;I style="mso-bidi-font-style: normal"&gt;ab initio&lt;/I&gt; le recouvrement de la créance. La Cour rejette ce moyen, l'irrécouvrabilité de la créance ne peut être présumée et aurait dû être déterminée par le comptable lui-même en conduisant une enquête de solvabilité. La Cour constitue le comptable en débet.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la sixième charge du réquisitoire, le comptable considère que l'impossibilité de connaître les montants recouvrés et la date de prescription du dossier sont imputables aux manquements de l'huissier. La Cour rejette ce moyen, considérant que le comptable doit assurer le suivi de l'action de l'huissier dans le recouvrement des créances. La Cour le constitue donc débiteur.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'extension de la définition des droits de douane et créances assimilées qui engage la responsabilité du comptable en vue du recouvrement d'une créance, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 14 novembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;direction régionale des douanes de Rouen&lt;/I&gt;, Recueil 2012, p. 151.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation pour un comptable de justifier de l'entière réalisation du recouvrement des créances fiscales, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 12 décembre 2011, &lt;I style="mso-bidi-font-style: normal"&gt;DSF de Paris-Centre - SIE de Paris 3e&lt;/I&gt;, Recueil 2011, p. 136.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133606.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133601">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133601</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66740</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. BRUN-BUISSON, Conseiller maitre</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. CHOUVET, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>27/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">29/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">29/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Trésorier-payeur général (TPG) de la Nièvre - Exercice 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133601.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133598">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133598</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66672</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. BRANA, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>04/04/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Régie autonome Triartois Services à Tilloy-les-Mofflaines (Nord-Pas-de-Calais) - Appel d'un jugement de la chambre régionale des comptes du Nord-Pas-de-Calais.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133598.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">ICBDT1VSIERFUyBDT01QVEVTCiAgICAgICAgICAgICAgLS0tLS0tLQpRVUFUUklFTUUgQ0hBTUJSRQogICAgICAgICAgICAgICAtLS0tLS0tCiAgUFJFTUlFUkUgU0VDVElPTgogICAgICAgICAgICAgICAtLS0tLS0tCiAgICAgICAgICAgIEFycsOqdCBuwrAgNjY2NzIKUkVHSUUgQVVUT05PTUUgVFJJQVJUT0lTIFNFUlZJQ0VTIEEgVElMTE9ZLUxFUy1NT0ZGTEFJTkVTCihQQVMtREUtQ0FMQUlTKQoKCkFwcGVsIGTigJl1biBqdWdlbWVudCBkZSBsYSBjaGFtYnJlCnLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZHUgTm9yZC1QYXMtZGUtQ2FsYWlzCgoKUmFwcG9ydCBuwrDCoDIwMTMtMTcwLTAKCkF1ZGllbmNlIHB1YmxpcXVlIGV0IGTDqWxpYsOpcsOpIGR1IDQgYXZyaWwgMjAxMwoKTGVjdHVyZSBwdWJsaXF1ZSBkdSAyNSBhdnJpbCAyMDEzCkxBIENPVVIgREVTIENPTVBURVMgYSByZW5kdSBs4oCZYXJyw6p0IHN1aXZhbnTCoDoKTEEgQ09VUiwKVnUgbGEgcmVxdcOqdGUsIGVucmVnaXN0csOpZSBsZSAyMiBvY3RvYnJlIDIwMTAgYXUgZ3JlZmZlIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBkdSBOb3JkLVBhcy1kZS1DYWxhaXMsIHBhciBsYXF1ZWxsZSBNLsKgWCwgY29tcHRhYmxlIGRlIGxhIHLDqWdpZSBhdXRvbm9tZSBUcmlhcnRvaXMgU2VydmljZXMgw6AgbGFxdWVsbGUgYSBzdWNjw6lkw6kgbGUgc3luZGljYXQgbWl4dGUgQXJ0b2lzIFZhbG9yaXNhdGlvbiwgZHUgMWVyIGphbnZpZXIgMjAwNCBhdSAyIGp1aWxsZXQgMjAwNiwgYSDDqWxldsOpIGFwcGVsIGR1IGp1Z2VtZW50IG7CsMKgMjAxMC0wMDE0IGR1IDExIGFvw7t0IDIwMTAgcGFyIGxlcXVlbCBsYWRpdGUgY2hhbWJyZSBs4oCZYSBjb25zdGl0dcOpIGTDqWJpdGV1ciBkdSBzeW5kaWNhdCBtaXh0ZSBBcnRvaXMgVmFsb3Jpc2F0aW9uIHBvdXIgbGEgc29tbWUgZGUgMjDCoDg3NSw5NMKg4oKsLCBhdWdtZW50w6llIGRlcyBpbnTDqXLDqnRzIGRlIGRyb2l0IGNhbGN1bMOpcyDDoCBjb21wdGVyIGR1IDI5IG1hcnMgMjAxMCA7ClZ1IGxlIHLDqXF1aXNpdG9pcmUgZHUgUHJvY3VyZXVyIGfDqW7DqXJhbCBwcsOocyBsYSBDb3VyIGRlcyBjb21wdGVzIG7CsMKgMjAxMS02LCBlbiBkYXRlIGR1IDEzIGphbnZpZXLCoDIwMTEsIHRyYW5zbWV0dGFudCDDoCBsYSBDb3VyIGxhIHJlcXXDqnRlIHByw6ljaXTDqWUgOwpWdSBsZXMgcGnDqGNlcyBkZSBsYSBwcm9jw6lkdXJlIHN1aXZpZSBlbiBwcmVtacOocmUgaW5zdGFuY2UgZXQgY2VsbGVzIHJlY3VlaWxsaWVzIHBhciBsZSByYXBwb3J0ZXVyIGVuIGNvdXJzIGTigJlpbnN0cnVjdGlvbsKgOwpWdSBsZSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzwqA7ClZ1IGxlIGNvZGUgZ8OpbsOpcmFsIGRlcyBjb2xsZWN0aXZpdMOpcyB0ZXJyaXRvcmlhbGVzwqA7CgpWdSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZGUgZmluYW5jZXMgbsKwwqA2My0xNTYgZHUgMjMgZsOpdnJpZXIgMTk2MyBtb2RpZmnDqWXCoDsKVnUgbGUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBtb2RpZmnDqSBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBlbiB2aWd1ZXVyIGF1IG1vbWVudCBkZXMgZmFpdHPCoDsKVnUgbGVzIGxvaXMgZXQgcsOoZ2xlbWVudHMgcmVsYXRpZnMgw6AgbGEgY29tcHRhYmlsaXTDqSBkZXMgw6l0YWJsaXNzZW1lbnRzIHB1YmxpY3MgbG9jYXV4wqA7ClZ1IGxlIHJhcHBvcnQgZOKAmWluc3RydWN0aW9uIGRlIE0uwqBKYWNxdWVzIEJyYW5hLCBjb25zZWlsbGVyIHLDqWbDqXJlbmRhaXJlwqA7ClZ1IGxlcyBjb25jbHVzaW9ucyBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIG7CsMKgMjMzLCBlbiBkYXRlIGR1IDI1IG1hcnMgMjAxM8KgOwpFbnRlbmR1LCBsb3JzIGRlIGzigJlhdWRpZW5jZSBwdWJsaXF1ZSBkZSBjZSBqb3VyLCBNLsKgSmFjcXVlcyBCcmFuYSBlbiBzb24gcmFwcG9ydCwgTS7CoFhhdmllciBMZWZvcnQsIGF2b2NhdCBnw6luw6lyYWwsIGVuIGxlcyBjb25jbHVzaW9ucyBkdSBtaW5pc3TDqHJlIHB1YmxpYywgbOKAmWFwcGVsYW50LCBpbmZvcm3DqSBkZSBs4oCZYXVkaWVuY2UsIG7igJnDqXRhbnQgbmkgcHLDqXNlbnQgbmkgcmVwcsOpc2VudMOpwqA7CkFwcsOocyBhdm9pciBlbnRlbmR1LCBlbiBkw6lsaWLDqXLDqSwgTS7CoFJvY2gtT2xpdmllciBNYWlzdHJlLCBjb25zZWlsbGVyIG1hw650cmUsIGVuIHNlcyBvYnNlcnZhdGlvbnPCoDsKQ29uc2lkw6lyYW50IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgUi7CoDI0My01IGR1IGNvZGUgZGVzIGp1cmlkaWN0aW9ucyBmaW5hbmNpw6hyZXMgwqvCoGwnYXBwZWwgZG9pdCDDqnRyZSBmb3Jtw6kgZGFucyBsZSBkw6lsYWkgZGUgZGV1eCBtb2lzIMOgIGNvbXB0ZXIgZGUgbGEgbm90aWZpY2F0aW9uIGR1IGp1Z2VtZW50ICjigKYpwqDCu8KgOyBxdeKAmWVuIHZlcnR1IGRlIGzigJlhcnRpY2xlIFIuwqAyNDMtNiBkdSBtw6ptZSBjb2RlIMKrwqBsYSBkYXRlIMOgIHByZW5kcmUgZW4gY29tcHRlIHBvdXIgYXBwcsOpY2llciBzaSBsZSBkw6lsYWkgZMOpZmluaSBhdSBwcmVtaWVyIGFsaW7DqWEgZGUgbCdhcnRpY2xlIFIuwqAyNDMtNSBhIMOpdMOpIHJlc3BlY3TDqWUgZXN0IGNlbGxlIGRlIGwnZW5yZWdpc3RyZW1lbnQgZGUgbGEgcmVxdcOqdGUgYXUgZ3JlZmZlIGRlIGxhIGNoYW1icmXCoMK7wqA7IHF1ZSBsZXMgZMOpbGFpcyBlbiBxdWVzdGlvbiBzZSBjYWxjdWxlbnQgc2Vsb24gbGEgcsOoZ2xlIGR1IGpvdXIgZnJhbmPCoDsKQ29uc2lkw6lyYW50IGFpbnNpIHF14oCZaWwgcmV2aWVudCBhdSByZXF1w6lyYW50IGTigJlhZHJlc3NlciBzYSByZXF1w6p0ZSDDoCB1bmUgZGF0ZSB0ZWxsZSBxdWUgZGVzIGTDqWxhaXMgbm9ybWF1eCBk4oCZYWNoZW1pbmVtZW50IGR1IGNvdXJyaWVyIGVuIGFzc3VyZW50IGzigJllbnJlZ2lzdHJlbWVudCBwYXIgbGUgZ3JlZmZlIGRlIGxhIGNoYW1icmUgZW4gdGVtcHMgdXRpbGXCoDsgcXVlIGxlIGp1Z2UgZOKAmWFwcGVsIHBldXQsIHBhciBleGNlcHRpb24sIGFkbWV0dHJlIGxhIHJlY2V2YWJpbGl0w6kgZOKAmXVuZSByZXF1w6p0ZSBsb3JzcXXigJl1biBhY2hlbWluZW1lbnQgYW5vcm1hbGVtZW50IGxvbmcgZHUgY291cnJpZXIgZXN0IGxhIGNhdXNlIGRlIHNvbiBlbnJlZ2lzdHJlbWVudCB0YXJkaWbCoDsKQ29uc2lkw6lyYW50IHF1ZSBsZSBqdWdlbWVudCBjb250ZXN0w6kgYSDDqXTDqSBub3RpZmnDqSDDoCBNLsKgWCBsZSAxOMKgYW/Du3TCoDIwMTDCoDsgcXXigJlhaW5zaSwgY29uZm9ybcOpbWVudCBhdXggZGlzcG9zaXRpb25zIHByw6ljaXTDqWVzLCBsZSBkw6lsYWkgZnJhbmMgZGUgZGV1eCBtb2lzIGEgY29tbWVuY8OpIMOgIGNvdXJpciBsZSBsZW5kZW1haW4gZGUgbGEgbm90aWZpY2F0aW9uIGR1IGp1Z2VtZW50IGF1IGNvbXB0YWJsZSwgc29pdCBsZSAxOcKgYW/Du3TCoDIwMTAsIGV0IGVzdCBhcnJpdsOpIMOgIGV4cGlyYXRpb24gbGUgMTnCoG9jdG9icmXCoDIwMTAsIGpvdXIgb3V2cmFibGXCoDsgcXVlLCBjb21tZSBs4oCZYXR0ZXN0ZSBsZSBjYWNoZXQgZGUgbGEgcG9zdGUsIGxhIHJlcXXDqnRlIGEgw6l0w6kgcG9zdMOpZSBsZSAxOMKgb2N0b2JyZcKgMjAxMCBldCBlbnJlZ2lzdHLDqWUgYXUgZ3JlZmZlIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBkdSBOb3JkLVBhcy1kZS1DYWxhaXMgbGUgMjLCoG9jdG9icmXCoDIwMTAsIHNvaXQgYXByw6hzIGzigJlleHBpcmF0aW9uIGR1IGTDqWxhaSByw6lnbGVtZW50YWlyZcKgOwoKQ29uc2lkw6lyYW50IHF14oCZZW4gbOKAmWVzcMOoY2UsIGxlIGTDqXBhc3NlbWVudCBkdSBkw6lsYWkgcsOpZ2xlbWVudGFpcmUgcsOpc3VsdGUgZHUgc2V1bCBmYWl0IHF1ZSBsYSByZXF1w6p0ZSBu4oCZYSDDqXTDqSBwb3N0w6llIHF1ZSBsZSAxOMKgb2N0b2JyZcKgMjAxMMKgOyBxdeKAmWVuIGVmZmV0IHVuZSB0ZWxsZSBkYXRlLCBldSDDqWdhcmQgYXV4IGTDqWxhaXMgbm9ybWF1eCBk4oCZYWNoZW1pbmVtZW50IGR1IGNvdXJyaWVyLCBuZSBwZXJtZXR0YWl0IGTigJlhc3N1cmVyIHF1ZSBsYWRpdGUgcmVxdcOqdGUgc2VyYWl0IHJlw6d1ZSBldCBlbnJlZ2lzdHLDqWUgbGUgMTnCoG9jdG9icmXCoDIwMTAgYXUgcGx1cyB0YXJkwqA7IHF14oCZYWluc2ksIHNhbnMgcXXigJlpbCBzb2l0IGJlc29pbiBkZSBzdGF0dWVyIHN1ciBsZSBjYXJhY3TDqHJlIGFub3JtYWxlbWVudCBsb25nIG91IG5vbiBkZSBs4oCZYWNoZW1pbmVtZW50IGR1IGNvdXJyaWVyIGVuIGzigJllc3DDqGNlLCBsYSByZXF1w6p0ZSBlbiBhcHBlbCBkb2l0IMOqdHJlIGTDqWNsYXLDqWUgaXJyZWNldmFibGXCoDsKUGFyIGNlcyBtb3RpZnMsCkTDqUNJREUgOgpBcnRpY2xlIHVuaXF1ZcKgOiBMYSByZXF1w6p0ZSBlbiBhcHBlbCBkZSBNLsKgWCBlc3QgaXJyZWNldmFibGUuCi0tLS0tLS0tLS0KRmFpdCBldCBqdWfDqSBlbiBsYSBDb3VyIGRlcyBjb21wdGVzLCBxdWF0cmnDqG1lIGNoYW1icmUsIHByZW1pw6hyZSBzZWN0aW9uLiBQcsOpc2VudHPCoDogTS7CoEJheWxlLCBwcsOpc2lkZW50LCBNLsKgTWFpc3RyZSwgcHLDqXNpZGVudCBkZSBzZWN0aW9uLCBNTS7CoFZlcm1ldWxlbiwgUm91c3NlbG90LCBjb25zZWlsbGVycyBtYcOudHJlcy4KU2lnbsOpwqA6IEJheWxlLCBwcsOpc2lkZW50LCBldCBMZSBCYXJvbiwgZ3JlZmZpZXIuCkNvbGxhdGlvbm7DqSwgY2VydGlmacOpIGNvbmZvcm1lIMOgIGxhIG1pbnV0ZSDDqXRhbnQgYXUgZ3JlZmZlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMgZXQgZMOpbGl2csOpIHBhciBtb2ksIHNlY3LDqXRhaXJlIGfDqW7DqXJhbC4KUG91ciBsZSBTZWNyw6l0YWlyZSBnw6luw6lyYWwKZXQgcGFyIGTDqWzDqWdhdGlvbiwKbGUgQ2hlZiBkdSBncmVmZmUgY29udGVudGlldXgKCgoKCgoKCgoKRGFuaWVsIEZFUkVaCg==</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133559">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133559</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66591</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mlle BALDACCHINO, Conseillère référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>07/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>21/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Mont-Saint-Martin (Meurthe-et-Moselle) - Appel d'un jugement de la chambre régionale des comptes de Lorraine - Exercice 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 62.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Imputation comptable</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Frais de représentation</DESCRIPTEUR>
<DESCRIPTEUR>Rejet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le comptable d'une commune avait été constitué en débet pour avoir payé des mandats imputés au compte 6332 « fêtes et cérémonies » et appuyés de factures de restaurants établies au nom de la commune, sans avoir contrôlé l'exacte imputation des dépenses ni, en conséquence, la production des justifications. En appel, la Cour a souligné la distinction entre frais liés aux fêtes et cérémonies et frais de représentation, en rappelant que ces deux types de dépenses peuvent faire l'objet de paiements directs sur facture. Ce dernier élément ne permettant pas d'imputer les dépenses avec certitude, la Cour a estimé que le comptable aurait dû suspendre le paiement des mandats. Ecartant un autre argument du comptable, la Cour a jugé qu'il n'était pas demandé aux comptables publics de vérifier les motifs d'une dépense mais sa nature, dans la mesure où elle conditionne à la fois l'exactitude de l'imputation comptable et la production des justifications prévues par la réglementation.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision, qui a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011, a fait l'objet d'un pourvoi en cassation.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la responsabilité du comptable public en matière d'imputation des dépenses, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 21 juillet 2011, &lt;I style="mso-bidi-font-style: normal"&gt;département de la Dordogne&lt;/I&gt;, Recueil 2011, p. 89. Sur l'engagement de la responsabilité d'un comptable pour avoir effectué le paiement d'une dépense à caractère politique alors que la facture jointe au mandat ne permettait pas de vérifier l'exacte imputation de la dépense ni sa liquidation, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 6 décembre 2006, &lt;I style="mso-bidi-font-style: normal"&gt;département des Bouches-du-Rhône&lt;/I&gt;, Recueil 2006, p. 57. Sur l'obligation pour le comptable public de vérifier la précision et la cohérence des pièces justificatives au regard de la nature et de l'objet de la dépense, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CE, 8 février 2012, &lt;I style="mso-bidi-font-style: normal"&gt;centre communal d'action sociale de Polaincourt&lt;/I&gt;, Recueil 2012, p. 203. Sur l'absence d'obligation des comptables d'exiger, à l'appui des mandats, la production de pièces justificatives attestant du rattachement des dépenses au service, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CE, 21 octobre 2009, &lt;I style="mso-bidi-font-style: normal"&gt;ARH de Picardie&lt;/I&gt;, Recueil 2009, p. 91.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Comme le relevait le Parquet, la solution retenue au final par la Cour revient sur une décision antérieure cf. CC, 31 mai 2001, &lt;I style="mso-bidi-font-style: normal"&gt;région Languedoc-Roussillon&lt;/I&gt;, Recueil 2001, p. 38.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133559.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133558">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133558</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66537</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme OLTRA-ORO, Conseillère référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>21/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Institut Louis Malardé (ILM) (Polynésie française) - Appel d'un jugement de la chambre territoriale des comptes de Polynésie française.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133558.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133544">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133544</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66525</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GEOFFROY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>28/02/2013</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>21/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Gestion de fait des deniers de la commune de Hénin-Beaumont (Pas-de-Calais) - Appel d'un jugement de la chambre régionale des comptes de Nord-Pas-de-Calais.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Amende</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 57.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Gestion de fait</DESCRIPTEUR>
<DESCRIPTEUR>Circonstances atténuantes</DESCRIPTEUR>
<DESCRIPTEUR>Circonstances aggravantes</DESCRIPTEUR>
<DESCRIPTEUR>Amende</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Trois comptables de fait d'une commune avaient été condamnés à des amendes de montants différents par un jugement dont seul l'un des intéressés avait interjeté appel. Après avoir admis, sur le principe, que la bonne foi surprise, la coopération du comptable de fait avec la juridiction financière et l'absence de bénéfice personnel pouvaient être invoquées en tant que circonstances atténuantes, la Cour a, en l'espèce, rejeté les arguments avancés par l'appelant sur ces trois terrains.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Elle a d'abord estimé, au vu du caractère fallacieux de certaines mentions des factures sur lesquelles l'appelant, maire de la commune, avait sciemment apposé des certifications de service fait et des bons à payer, que sa bonne foi n'avait probablement pas été surprise par les agissements allégués d'un adjoint, lui-même déclaré comptable de fait. La Cour a ensuite relevé que l'appelant avait nié sa responsabilité à plusieurs stades de la procédure et n'avait pas produit de compte de la gestion de fait, ce qui, loin de caractériser une coopération avec la juridiction, pouvait constituer une circonstance aggravante. Enfin, la Cour a regardé comme circonstance aggravante le fait que l'appelant, en sa qualité d'ordonnateur, aurait pu mettre fin aux pratiques litigieuses. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Au regard des circonstances atténuantes et aggravantes communes aux trois comptables ou propres à l'un ou plusieurs d'entre eux, la Cour a finalement estimé que l'amende infligée à l'appelant était, d'une part, justifiée, d'autre part, cohérente avec les amendes retenues pour les autres comptables et dans des espèces récentes ; elle a donc rejeté l'appel.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Pour une affaire dans laquelle les comptables de fait plaidaient la bonne foi, l'absence d'intérêt personnel et la collaboration avec la juridiction financière, cf. CC, 24 février 2000, &lt;I style="mso-bidi-font-style: normal"&gt;commune d'Istres et association Istres-Promo&lt;/I&gt;, Recueil 2000, p. 27. Sur la modulation de l'amende en cas d'absence d'intérêt personnel des comptables de fait, cf. également CC, 30 avril 2009, &lt;I style="mso-bidi-font-style: normal"&gt;département de l'Isère&lt;/I&gt;, Recueil 2009, p. 32.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133544.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133187">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133187</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66320</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme GADRIOT-RENARD, Conseillere maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>07/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Syndicat inter-hospitalier (SIH) "Centre hospitalier de Montceau-les-Mines" (Saône-et-Loire) - Appel d'un jugement de la chambre régionale des comptes de Bourgogne.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Gestion de fait</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133187.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133186">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133186</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66510</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme GADRIOT-RENARD, Conseillere maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>07/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Syndicat intercommunal d'électrification du Centre Corse (SIECC) (Haute-Corse) - Appel d'un jugement de la chambre régionale des comptes de Corse.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133186.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133185">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133185</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66284</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LENA, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>28/02/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Lycée polyvalent Galilée à Gennevilliers (Hauts-de-Seine) - Appel d'un jugement de la chambre régionale des comptes d'Ile-de-France.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133185.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133184">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133184</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66282</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. MICHELET, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>28/02/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Trédrez-Locquemeau (Côtes d'Armor) - Appel d'un jugement de la chambre régionale des comptes de Bretagne.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133184.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">ICBDT1VSIERFUyBDT01QVEVTCiAgICAgICAgICAgICAgIC0tLS0tLS0KUVVBVFJJRU1FIENIQU1CUkUKICAgICAgICAgICAgICAgLS0tLS0tLQogIFBSRU1JRVJFIFNFQ1RJT04KICAgICAgICAgICAgICAgLS0tLS0tLQogICAgICAgICAgICAgQXJyw6p0IG7CsCA2NjI4MgpDb21tdW5lIGRlIFRSRURFWi1MT0NRVUVNRUFVCihDw5RURVMgROKAmUFSTU9SKQoKQXBwZWwgZOKAmXVuIGp1Z2VtZW50IGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZQpkZXMgY29tcHRlcyBkZSBCcmV0YWduZQoKClJhcHBvcnQgbsKwIDIwMTItNzk1LTAKCkF1ZGllbmNlIHB1YmxpcXVlIGV0IGTDqWxpYsOpcsOpIGR1IDI4IGbDqXZyaWVyIDIwMTMKCkxlY3R1cmUgcHVibGlxdWUgZHUgNCBhdnJpbCAyMDEzCgpMQSBDT1VSIERFUyBDT01QVEVTIGEgcmVuZHUgbOKAmWFycsOqdCBzdWl2YW50wqA6CkxBIENPVVIsClZ1IGxhIHJlcXXDqnRlLCBlbnJlZ2lzdHLDqWUgbGUgOCBmw6l2cmllciAyMDExIGF1IGdyZWZmZSBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgKENSQykgZGUgQnJldGFnbmUsIHBhciBsYXF1ZWxsZSBNLsKgWCwgY29tcHRhYmxlIGRlIGxhIGNvbW11bmUgZGUgVHJlZGV6LUxvY3F1ZW1lYXUganVzcXXigJlhdSAyIHNlcHRlbWJyZSAyMDA3LCBhIMOpbGV2w6kgYXBwZWwgZHUganVnZW1lbnQgbsKwwqAyMDEwLTExOSBkdSAxNiBub3ZlbWJyZSAyMDEwLCBwYXIgbGVxdWVsIGxhZGl0ZSBjaGFtYnJlIGzigJlhIGNvbnN0aXR1w6kgZMOpYml0ZXVyIGRlIGNldHRlIGNvbW11bmUgcG91ciBsYSBzb21tZSBkZSA5wqA5OTQsODDCoOKCrCwgYXVnbWVudMOpZSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1IDE1IGbDqXZyaWVyIDIwMTDCoDsKVnUgbGUgcsOpcXVpc2l0b2lyZSBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIHByw6hzIGxhIENvdXIgZGVzIGNvbXB0ZXMgbsKwwqAyMDExLTMwLCBlbiBkYXRlIGR1IDIzIG1hcnMgMjAxMSwgdHJhbnNtZXR0YW50IMOgIGxhIENvdXIgbGEgcmVxdcOqdGUgcHLDqWNpdMOpZcKgOyAKVnUgbGUgcsOpcXVpc2l0b2lyZSBkdSBwcm9jdXJldXIgZmluYW5jaWVyIHByw6hzIGxhIENSQyBkZSBCcmV0YWduZSBuwrDCoDIwMTAtOTEgZHUgOSBmw6l2cmllciAyMDEwIHBhciBsZXF1ZWwgbGFkaXRlIGNoYW1icmUgYSDDqXTDqSBzYWlzaWUgZOKAmW9ww6lyYXRpb25zIGVmZmVjdHXDqWVzIHBhciBsZSBjb21wdGFibGUgcHLDqWNpdMOpLCBkYW5zIGxlIGNhZHJlIGRlIHNhIGdlc3Rpb24gZGUgbGEgY29tbXVuZSBkZSBUcsOpZGV6LUxvY3F1ZW1lYXUgYXUgY291cnMgZGVzIGV4ZXJjaWNlcyAyMDAzIMOgIDIwMDcsIGF1eCBmaW5zIGRlIHN0YXR1ZXIgc3VyIHNhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSA7ClZ1IGxlcyBwacOoY2VzIGRlIGxhIHByb2PDqWR1cmUgc3VpdmllIGVuIHByZW1pw6hyZSBpbnN0YW5jZcKgOwoKClZ1IGxlIGNvZGUgZGVzIGp1cmlkaWN0aW9ucyBmaW5hbmNpw6hyZXPCoDsKVnUgbGUgY29kZSBnw6luw6lyYWwgZGVzIGNvbGxlY3Rpdml0w6lzIHRlcnJpdG9yaWFsZXPCoDsgClZ1IGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkZSBmaW5hbmNlcyBuwrDCoDYzLTE1NiBkdSAyMyBmw6l2cmllciAxOTYzIG1vZGlmacOpZSA7IApWdSBsZSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOSBkw6ljZW1icmUgMTk2MiBtb2RpZmnDqSBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBlbiB2aWd1ZXVyIGF1IG1vbWVudCBkZXMgZmFpdHPCoDsKVnUgbOKAmWluc3RydWN0aW9uIG7CsMKgNzUtMTM2IE1PIGR1IDEwIG9jdG9icmUgMTk3NSByZWxhdGl2ZSBhdXggbW9kYWxpdMOpcyBwcmF0aXF1ZXMgZGUgZMOpY2xhcmF0aW9uIGV0IGRlIHLDqGdsZW1lbnQgZGUgbGEgVFZBwqA7IApWdSBsZSByYXBwb3J0IGTigJlpbnN0cnVjdGlvbiBkZSBNLsKgTGF1cmVudCBNaWNoZWxldCwgY29uc2VpbGxlciByw6lmw6lyZW5kYWlyZcKgOwpWdSBsZXMgY29uY2x1c2lvbnMgbsKwwqA4NDIgZHUgUHJvY3VyZXVyIGfDqW7DqXJhbCBlbiBkYXRlIGR1IDbCoGTDqWNlbWJyZcKgMjAxMsKgOwpFbnRlbmR1LCBsb3JzIGRlIGzigJlhdWRpZW5jZSBwdWJsaXF1ZSBkZSBjZSBqb3VyLCBNLsKgTGF1cmVudCBNaWNoZWxldCwgcmFwcG9ydGV1ciwgZW4gc29uIHJhcHBvcnQsIE0uwqBZdmVzIFBlcnJpbiwgYXZvY2F0IGfDqW7DqXJhbCwgZW4gbGVzIGNvbmNsdXNpb25zIGR1wqBtaW5pc3TDqHJlIHB1YmxpYywgbOKAmWFwcGVsYW50LCBpbmZvcm3DqSBkZSBs4oCZYXVkaWVuY2UsIG7igJnDqXRhbnQgbmkgcHLDqXNlbnQgbmkgcmVwcsOpc2VudMOpIDsKRW50ZW5kdSwgZW4gZMOpbGliw6lyw6ksIE0uwqBSb2NoLU9saXZpZXIgTWFpc3RyZSwgY29uc2VpbGxlciBtYcOudHJlLCBlbiBzZXMgb2JzZXJ2YXRpb25zwqA7CkF0dGVuZHUgcXVlIGxhIENSQyBkZSBCcmV0YWduZSBhIGNvbnN0aXR1w6kgTS7CoFgsIGTDqWJpdGV1ciBkZSBsYSBjb21tdW5lIGRlIFRyw6lkZXotTG9jcXVlbWVhdSDDoCBoYXV0ZXVyIGRlIDnCoDk5NCw4MMKg4oKsLCBhdSBtb3RpZiBxdWUgY2VsdWktY2kgbuKAmWEgcGFzIGVmZmVjdHXDqSBsZXMgZGlsaWdlbmNlcyByZXF1aXNlcyBhdXByw6hzIGRlIGzigJlvcmRvbm5hdGV1ciBwb3VyIHF1ZSBjZWx1aS1jaSDDqXRhYmxpc3NlIGRlcyBkw6ljbGFyYXRpb25zIGVuIHZ1ZSBkZSByZWNvdXZyZXIgZGVzIHJlbWJvdXJzZW1lbnRzIGRlIFRWQcKgOwpBdHRlbmR1IHF14oCZw6AgbOKAmWFwcHVpIGRlIHNhIHJlcXXDqnRlIGzigJlhcHBlbGFudCBmYWl0IHZhbG9pciwgZOKAmXVuZSBwYXJ0LCBxdWUgbGVzIHJlbWJvdXJzZW1lbnRzIGRlIGNyw6lkaXRzIGRlIFRWQSBkZW1hbmTDqXMgcGFyIGxhIGNvbW11bmUgb250IMOpdMOpIGludMOpZ3JhbGVtZW50IHBlcsOndXMsIGTigJlhdXRyZSBwYXJ0IHF1ZSBsZSBjb21wdGFibGUgbuKAmWEgcGFzIGxhIHBvc3NpYmlsaXTDqSBkZSByZWN0aWZpZXIgbGVzIGTDqWNsYXJhdGlvbnMgZGUgVFZBIGZhaXRlcyBwYXIgbOKAmW9yZG9ubmF0ZXVywqA7CkNvbnNpZMOpcmFudCBxdeKAmWF1eCB0ZXJtZXMgZGUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGR1IDIzwqBmw6l2cmllcsKgMTk2MyBzdXN2aXPDqWUgwqvCoGxlcyBjb21wdGFibGVzIHB1YmxpY3Mgc29udCBwZXJzb25uZWxsZW1lbnQgZXQgcMOpY3VuaWFpcmVtZW50IHJlc3BvbnNhYmxlcyBkdSByZWNvdXZyZW1lbnQgZGVzIHJlY2V0dGVzICjigKYpwqDCuyBldCBxdWUgbGEgcmVzcG9uc2FiaWxpdMOpIGR1IGNvbXB0YWJsZSBzZSB0cm91dmUgZW5nYWfDqWUgwqvCoGTDqHMgbG9ycyAo4oCmKSBxdeKAmXVuZSByZWNldHRlIG7igJlhIHBhcyDDqXTDqSByZWNvdXZyw6llwqDCu8KgOyBxdeKAmWVuIHZlcnR1IGRlIGzigJlhcnRpY2xlIDExIGR1IGTDqWNyZXQgZHUgMjkgZMOpY2VtYnJlIDE5NjIgc3Vzdmlzw6ksIGVuIHZpZ3VldXIgYXUgbW9tZW50IGRlcyBmYWl0cywgwqvCoExlcyBjb21wdGFibGVzIHB1YmxpY3Mgc29udCBzZXVscyBjaGFyZ8Opc8KgOiBEZSBsYSBwcmlzZSBlbiBjaGFyZ2UgZXQgZHUgcmVjb3V2cmVtZW50IGRlcyBvcmRyZXMgZGUgcmVjZXR0ZXMgcXVpIGxldXIgc29udCByZW1pcyBwYXIgbGVzIG9yZG9ubmF0ZXVycywgZGVzIGNyw6lhbmNlcyBjb25zdGF0w6llcyBwYXIgdW4gY29udHJhdCwgdW4gdGl0cmUgZGUgcHJvcHJpw6l0w6kgb3UgYXV0cmUgdGl0cmUgZG9udCBpbHMgYXNzdXJlbnQgbGEgY29uc2VydmF0aW9uIGFpbnNpIHF1ZSBkZSBsJ2VuY2Fpc3NlbWVudCBkZXMgZHJvaXRzIGF1IGNvbXB0YW50IGV0IGRlcyByZWNldHRlcyBkZSB0b3V0ZSBuYXR1cmUgcXVlIGxlcyBvcmdhbmlzbWVzIHB1YmxpY3Mgc29udCBoYWJpbGl0w6lzIMOgIHJlY2V2b2lyIDvCoMK7wqA7IHF1ZSBs4oCZYXJ0aWNsZSAxMiBkdSBtw6ptZSBkw6ljcmV0IHByw6ljaXNlIHF1ZSDCq8KgTGVzIGNvbXB0YWJsZXMgc29udCB0ZW51cyBkJ2V4ZXJjZXIgOiBBLiAtIEVuIG1hdGnDqHJlIGRlIHJlY2V0dGVzLCBsZSBjb250csO0bGXCoDogRGFucyBsZXMgY29uZGl0aW9ucyBwcsOpdnVlcyBwb3VyIGNoYXF1ZSBjYXTDqWdvcmllIGQnb3JnYW5pc21lIHB1YmxpYyBwYXIgbGVzIGxvaXMgZXQgcsOoZ2xlbWVudHMsIGRlIGwnYXV0b3Jpc2F0aW9uIGRlIHBlcmNldm9pciBsYSByZWNldHRlIDsgRGFucyBsYSBsaW1pdGUgZGVzIMOpbMOpbWVudHMgZG9udCBpbHMgZGlzcG9zZW50LCBkZSBsYSBtaXNlIGVuIHJlY291dnJlbWVudCBkZXMgY3LDqWFuY2VzIGRlIGwnb3JnYW5pc21lIHB1YmxpYyBldCBkZSBsYSByw6lndWxhcml0w6kgZGVzIHLDqWR1Y3Rpb25zIGV0IGRlcyBhbm51bGF0aW9ucyBkZXMgb3JkcmVzIGRlIHJlY2V0dGVzLsKgwrvCoDsKQ29uc2lkw6lyYW50IHF14oCZaWwgcsOpc3VsdGUgZGVzIGRpc3Bvc2l0aW9ucyBwcsOpY2l0w6llcyBxdWUgc2kgbGUgY29tcHRhYmxlIGTigJl1bmUgY29sbGVjdGl2aXTDqSBu4oCZYSBwYXMgY29tcMOpdGVuY2UgcG91ciByZWN0aWZpZXIgdW5lIGTDqWNsYXJhdGlvbiBkZSBUVkEgZmFpdGUgcGFyIGzigJlvcmRvbm5hdGV1ciwgaWwgbHVpIHJldmllbnQsIGxvcnNxdeKAmWlsIGEgY29ubmFpc3NhbmNlIGTigJl1bmUgY3LDqWFuY2Ugbm9uIHRvdGFsZW1lbnQgY291dmVydGUgcGFyIGRlcyB0aXRyZXMgZGUgcmVjZXR0ZSwgc2F1ZiDDoCBlbmdhZ2VyIHNhIHJlc3BvbnNhYmlsaXTDqSwgZGUgc29sbGljaXRlciBlbiB0ZW1wcyB1dGlsZSBs4oCZw6ltaXNzaW9uIGRlIHRpdHJlcyBkZSByZWNldHRlcyBjb21wbMOpbWVudGFpcmVzIHBhciBs4oCZb3Jkb25uYXRldXLCoDsgcXVlIGNldHRlIGRpbGlnZW5jZSBu4oCZZXN0IG5pIMOpdGFibGllLCBuaSBtw6ptZSBhbGzDqWd1w6llwqA7IHF14oCZYWluc2kgbGUgbW95ZW4gdGVuYW50IMOgIGzigJlpbmNvbXDDqXRlbmNlIGR1IGNvbXB0YWJsZSB2aXMtw6AtdmlzIGRlcyBkw6ljbGFyYXRpb25zIGRlIGzigJlvcmRvbm5hdGV1ciBlc3QgaW5vcMOpcmFudMKgOwpQYXIgY2VzIG1vdGlmcywKREVDSURFwqA6CkFydGljbGUgdW5pcXVlIOKAkyBMYSByZXF1w6p0ZSBkZSBNLsKgWCBlc3QgcmVqZXTDqWUuCi0tLS0tLS0tLS0tCkZhaXQgZXQganVnw6kgZW4gbGEgQ291ciBkZXMgY29tcHRlcywgcXVhdHJpw6htZSBjaGFtYnJlLCBwcmVtacOocmUgc2VjdGlvbiwgbGXCoHZpbmd0LWh1aXQgZsOpdnJpZXIgZGV1eCBtaWwgdHJlaXplLiBQcsOpc2VudHPCoDrCoE0uwqBCYXlsZSwgcHLDqXNpZGVudCwgTS7CoE1haXN0cmUsIHByw6lzaWRlbnQgZGUgc2VjdGlvbiwgTU0uwqBMYWZhdXJlLCBWZXJtZXVsZW4sIE1tZSBEw6ltaWVyIGV0IE0uwqBHZW9mZnJveSwgY29uc2VpbGxlcnMgbWHDrnRyZXMuClNpZ27DqcKgOiBCYXlsZSwgcHLDqXNpZGVudCwgZXQgTGUgQmFyb24sIGdyZWZmaWVyLgpDb2xsYXRpb25uw6ksIGNlcnRpZmnDqSBjb25mb3JtZSDDoCBsYSBtaW51dGUgw6l0YW50IGF1IGdyZWZmZSBkZSBsYSBDb3VyIGRlcyBjb21wdGVzIGV0IGTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuClBvdXIgbGUgU2VjcsOpdGFpcmUgZ8OpbsOpcmFsCmV0IHBhciBkw6lsw6lnYXRpb24sCmxlIENoZWYgZHUgZ3JlZmZlIGNvbnRlbnRpZXV4CgoKCgoKCgoKRGFuaWVsIEZFUkVaCg==</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133179">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133179</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66255</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. MAISTRE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>28/02/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune d'Aulnay-Sous-Bois (Seine-Saint-Denis) - Appel d'un jugement de la chambre régionale des comptes d'Ile-de-France.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 50.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Créance</DESCRIPTEUR>
<DESCRIPTEUR>Recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Preuve</DESCRIPTEUR>
<DESCRIPTEUR>Exactitude des calculs de liquidation</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Révision de prix</DESCRIPTEUR>
<DESCRIPTEUR>Rejet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Constitué en débet pour avoir laissé se prescrire, sous sa gestion, une créance à l'encontre d'une personne publique, le comptable soutenait en appel, d'une part, qu'il avait valablement interrompu la prescription dans les conditions prévues par la loi du 31 décembre 1968, qui n'exige pas l'envoi par lettre recommandée avec avis de réception, d'autre part, que le débiteur avait fait part de son intention de payer. La Cour a jugé qu'il appartenait au comptable d'apporter la preuve de la réception par le débiteur des actes de poursuites, sa responsabilité ne pouvant pas être dégagée sur le fondement d'intentions prêtées au débiteur de la créance.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Saisie d'une autre charge relative au règlement d'un marché, la Cour a considéré qu'un comptable ne pouvait payer un mandat au vu d'une facture faisant apparaître un indice de révision de prix différent de celui figurant au marché correspondant, les pièces justificatives apparaissant contradictoires. Estimant que la circonstance que ce dernier indice avait été supprimé n'exonérait pas le comptable de sa responsabilité, la Cour a rejeté l'appel.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation de suspendre le paiement en présence de justificatifs contradictoires rendant impossible la vérification de l'exactitude de la liquidation, cf. CC, 28 septembre 2010, &lt;I style="mso-bidi-font-style: normal"&gt;payeur général du Trésor&lt;/I&gt;, Recueil 2010, p. 81. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'engagement de la responsabilité d'un comptable public pour le paiement d'une somme calculée à partir d'une formule de révision et d'un indice non conformes à ceux prévus au cahier des clauses administratives particulières, cf. CC, 3 mars 1988, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Bazoches-sur-Hoëne&lt;/I&gt;, Recueil 1988, p. 26.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133179.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133177">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133177</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66512</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme GADRIOT-RENARD, Conseillere maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>07/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">04/04/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">04/04/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Verneuil-sur-Avre (Eure) - Appel d'un jugement de la chambre régionale des comptes de Basse-Normandie, Haute-Normandie.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133177.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133024">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133024</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66119</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHOUVET, Conseiller maître</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. ORY-LAVOLEE, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>16/01/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">27/03/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">27/03/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Trésorier-payeur général (TPG) de la Loire-Atlantique - Exercices 2006 à 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 47.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Département</DESCRIPTEUR>
<DESCRIPTEUR>Comptable supérieur</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Contrôle du comptable public</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Nomenclature des actes</DESCRIPTEUR>
<DESCRIPTEUR>Hiérarchie des normes juridiques</DESCRIPTEUR>
<DESCRIPTEUR>Circulaire</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Lecomptable supérieur d'un département avait effectué le paiement d'un mandat sur la base de la seule production d'une facture. Postérieurement à ce paiement, le comptable a fourni, lors de l'instruction, une copie du bon de commande et du devis, pièces qui, ensemble auraient pu être assimilées à un marché public ; toutefois ils ne figuraient pas à l'appui des comptes transmis à la Cour. Le juge des comptes rappelle que la responsabilité des comptables s'apprécie au moment du paiement. En l'espèce, le comptable n'ayant pas apporté la preuve qu'il en disposait à ce moment, la dépense était dès lors irrégulière. Par ailleurs, le comptable faisait valoir qu'une interprétation constante de la direction générale des finances publiques n'imposait pas la production d'un contrat à l'appui d'une facture pour le paiement de marchés passés selon la procédure adaptée (MAPA), même si le montant était supérieur à 4 000 euros. La Cour rejette l'allégation du comptable en rappelant qu'une « &lt;I style="mso-bidi-font-style: normal"&gt;interprétation de la DGFIP ne saurait constituer une norme relative à la nomenclature des pièces justificatives&lt;/I&gt; ». Le comptable est donc constitué en débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la production d'un bon de commande et d'un devis manifestant l'échange de volonté des parties et la présence d'un contrat, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 8 juillet 2013, &lt;I style="mso-bidi-font-style: normal"&gt;EPAD&lt;/I&gt;, Recueil 2013, p. 106. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation de formaliser sous forme écrite les marchés d'un certain seuil, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 novembre 2010, &lt;I style="mso-bidi-font-style: normal"&gt;Parc national du Mercantour&lt;/I&gt;, Recueil 2010, p. 98 ; CC, 7 juin 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CCAS de Polaincourt&lt;/I&gt;, Recueil 2013, p. 87 et &lt;I style="mso-bidi-font-style: normal"&gt;AJDA&lt;/I&gt; 2013, p. 1621.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la production de pièces justificatives nécessaires pour un premier paiement dans le cadre de marchés publics passés sans formalités préalables faisant l'objet d'un contrat écrit, &lt;I style="mso-bidi-font-style: normal"&gt;c&lt;/I&gt;f. CC, 14 décembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de l'Indre&lt;/I&gt;, que l'on peut consulter sur le site ccomptes.fr.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la hiérarchie des normes, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 27 mars 2013, &lt;I style="mso-bidi-font-style: normal"&gt;DDFIP des Hauts-de-Seine&lt;/I&gt;, Recueil 2013, p. 45.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la responsabilité du comptable au moment du paiement, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 2 février 2012, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Lingolsheim, &lt;/I&gt;Recueil 2012, p. 38.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133024.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">Q09VUiBERVMgQ09NUFRFUwoJICAgLS0tLS0tIApwcmVtaWVyZSBDSEFNQlJFCgkgICAtLS0tLS0gCnByZW1pZXJlIHNlY3Rpb24KCSAgIC0tLS0tLSAKwqDCoMKgwqDCoMKgwqDCoMKgQXJyw6p0IG7CsCA2NjExOQoKVFJFU09SSUVSLVBBWUVVUiBHRU5FUkFMIApERSBMQSBMT0lSRS1BVExBTlRJUVVFCkV4ZXJjaWNlcyAyMDA2IMOgIDIwMDgKUmFwcG9ydCBuwrAgMjAxMi03NDctMApBdWRpZW5jZSBwdWJsaXF1ZSBkdSAxNiBqYW52aWVyIDIwMTMKTGVjdHVyZSBwdWJsaXF1ZSBkdSAyNyBtYXJzIDIwMTMKUkVQVUJMSVFVRSBGUkFOw4dBSVNFCkFVIE5PTSBEVSBQRVVQTEUgRlJBTsOHQUlTCkxBIENPVVIgREVTIENPTVBURVMgYSByZW5kdSBs4oCZYXJyw6p0IHN1aXZhbnTCoDoKTEEgQ09VUiwKVnUgbGUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlc8KgOwpWdSBsZSBjb2RlIGRlcyBtYXJjaMOpcyBwdWJsaWNzwqA7IApWdSBs4oCZYXJ0aWNsZSA2MCBtb2RpZmnDqSBkZSBsYSBsb2kgZGUgZmluYW5jZXMgbsKwwqA2My0xNTYgZHUgMjPCoGbDqXZyaWVywqAxOTYzwqBwb3J0YW50IGxvaSBkZSBmaW5hbmNlcyBwb3VyIDE5NjMgOwpWdSBsZXMgbG9pcyBldCByw6hnbGVtZW50cyBhcHBsaWNhYmxlcyDDoCBsYSBjb21wdGFiaWxpdMOpIGRlcyBjb21wdGFibGVzIGR1wqBUcsOpc29yLCBub3RhbW1lbnQgbGEgbG9pIG9yZ2FuaXF1ZSBuwrDCoDIwMDEtNjkyIGR1IDFlcsKgYW/Du3TCoDIwMDEgcmVsYXRpdmUgYXV4IGxvaXMgZGUgZmluYW5jZXMsIGxlIGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5IGTDqWNlbWJyZSAxOTYyIHBvcnRhbnQgcsOoZ2xlbWVudCBnw6luw6lyYWwgc3VyIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUgOwpWdSBsYSBsb2kgbsKwwqAyMDA4LTEwOTEgZHUgMjjCoG9jdG9icmXCoDIwMDggcmVsYXRpdmUgw6AgbGEgQ291ciBkZXMgY29tcHRlcyBldCBhdXggY2hhbWJyZXMgcsOpZ2lvbmFsZXMgZGVzIGNvbXB0ZXPCoDsKVnUgbGVzIGxvaXMgZGUgZmluYW5jZXMgZGVzIGV4ZXJjaWNlcyAyMDA2IMOgIDIwMDjCoDsKCgpWdSBsZSBkw6ljcmV0IG7CsMKgMjAwNC0zNzQgZHUgMjnCoGF2cmlsIDIwMDQgcmVsYXRpZiBhdXggcG91dm9pcnMgZGVzIHByw6lmZXRzIGV0IMOgIGwnb3JnYW5pc2F0aW9uIGV0IMOgIGwnYWN0aW9uIGRlcyBzZXJ2aWNlcyBkZSBsJ0V0YXQgZGFucyBsZXMgcsOpZ2lvbnMgZXQgZMOpcGFydGVtZW50c8KgOwpWdSBsYSBjaXJjdWxhaXJlIGR1IG1pbmlzdHJlIGR1IGJ1ZGdldCBkdSAzMCBzZXB0ZW1icmUgMjAwMywgcmVsYXRpdmUgw6AgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGRlcyBkw6lwZW5zZXMgZGUgbOKAmUV0YXQgZXQgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy0wNjAtQiBkdSAxNyBub3ZlbWJyZSAyMDAzwqA7ClZ1IGxlcyBjb21wdGVzIGRlIGdlc3Rpb24gcmVuZHVzLCBwb3VyIGxlcyBleGVyY2ljZXMgMjAwNiDDoCAyMDA4LCBwYXIgTU0uwqBYIGV0wqBZLCB0csOpc29yaWVycy1wYXlldXJzIGfDqW7DqXJhdXggZGUgbGEgTG9pcmUtQXRsYW50aXF1ZSByZXNwZWN0aXZlbWVudCBlbiBmb25jdGlvbnMgZHUgMyBub3ZlbWJyZSAxOTk4IGF1IDLCoGphbnZpZXLCoDIwMDYgcG91ciBsZSBwcmVtaWVyLCBkdSAzIGphbnZpZXIgMjAwNiBhdSAzMCBqdWlsbGV0IDIwMTAgcG91ciBsZSBkZXV4acOobWUsIGVuIHF1YWxpdMOpIGRlIGNvbXB0YWJsZXMgZHXCoFRyw6lzb3LCoDsKVnUgbGVzIHBpw6hjZXMgcHJvZHVpdGVzIMOgIGzigJlhcHB1aSBkZSBjZXMgY29tcHRlcyBvdSByZWN1ZWlsbGllcyBhdSBjb3VycyBkZSBs4oCZaW5zdHJ1Y3Rpb27CoDsKVnUgbOKAmWFycsOqdMOpIGR1IFByZW1pZXIgcHLDqXNpZGVudCBkdSAyIGphbnZpZXIgMjAwNyBtb2RpZmnDqSBwb3J0YW50IHLDqXBhcnRpdGlvbiBkZXMgYXR0cmlidXRpb25zIGVudHJlIGxlcyBjaGFtYnJlcyBkZSBsYSBDb3VywqBkZXMgY29tcHRlc8KgOwpWdSBsJ2FycsOqdMOpIG7CsMKgMTEtMDk1IGR1IFByZW1pZXIgcHLDqXNpZGVudCBkdSAzwqBmw6l2cmllcsKgMjAxMSBwb3J0YW50IHLDqXBhcnRpdGlvbiBkZXMgYXR0cmlidXRpb25zIGVudHJlIGxlcyBjaGFtYnJlcyBkZSBsYSBDb3VyIGRlcyBjb21wdGVzwqA7ClZ1IGzigJlhcnLDqnTDqSBtb2RpZmnDqSBuwrDCoDA2LTM0NiBkdSAxMMKgb2N0b2JyZcKgMjAwNiBkdSBQcmVtaWVyIHByw6lzaWRlbnQgcG9ydGFudCBjcsOpYXRpb24gZXQgZml4YW50IGxhIGNvbXBvc2l0aW9uIGRlcyBzZWN0aW9ucyBhdSBzZWluIGRlIGxhIFByZW1pw6hyZSBjaGFtYnJlIDsKVnUgbGUgcsOpcXVpc2l0b2lyZSDDoCBmaW4gZOKAmWluc3RydWN0aW9uIGRlIGNoYXJnZXMgbsKwwqAyMDEyLTQwIFJRLURCIGR1IDI3wqBqdWluwqAyMDEyLCBub3RpZmnDqSBsZSAyOCBqdWluIDIwMTIgw6AgTS7CoFkgZXQgYXUgZGlyZWN0ZXVyIGfDqW7DqXJhbCBkZXMgZmluYW5jZXMgcHVibGlxdWVzIHF1aSBlbiBvbnQgYWNjdXPDqSByw6ljZXB0aW9uLCByZXNwZWN0aXZlbWVudCBsZSAyOSBqdWluIDIwMTIgZXQgbGUgMjjCoGp1aW7CoDIwMTLCoDsKVnUgbGEgZMOpY2lzaW9uIGR1IDI3IGp1aWxsZXQgMjAxMiBkdSBwcsOpc2lkZW50IGRlIGxhIFByZW1pw6hyZSBjaGFtYnJlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMgZMOpc2lnbmFudCBNLsKgSmVhbi1DaHJpc3RvcGhlIENob3V2ZXQsIGNvbnNlaWxsZXIgbWHDrnRyZSwgYXNzaXN0w6kgZGUgTW1lwqBBbm5lTWFyaWUgSXRodXJyYWxkZSBwb3VyIGluc3RydWlyZSBsZXMgc3VpdGVzIMOgIGRvbm5lciBhdSByw6lxdWlzaXRvaXJlIHN1c3Zpc8OpwqA7ClZ1IGxhIHLDqXBvbnNlIGRlIE0uwqBZLCB0csOpc29yaWVyIHBheWV1ciBnw6luw6lyYWwgZGUgcsOpZ2lvbiBob25vcmFpcmUsIGF1IHLDqXF1aXNpdG9pcmUgc3Vzdmlzw6ksIHRyYW5zbWlzZSBwYXIgY291cnJpZWwgZHUgMjQgb2N0b2JyZSAyMDEyIDsKVnUgbGVzIHLDqXNlcnZlcyBmb3JtdWzDqWVzIHBhciBNLsKgWSDDoCBsYSBzdWl0ZSBkdSB0cmFuc2ZlcnQgZGVzIGNvbXDDqXRlbmNlcyBkb21hbmlhbGVzIGRlIGxhIGRpcmVjdGlvbiBnw6luw6lyYWxlIGRlcyBpbXDDtHRzIMOgIGxhIGRpcmVjdGlvbiBnw6luw6lyYWxlIGRlIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUsIHRhbnQgZGFucyBsYSByZW1pc2UgZGUgc2VydmljZSBlZmZlY3R1w6llIMOgIGxhIHN1aXRlIGRlIGNlIHRyYW5zZmVydCBxdWUgZGFucyB1bmUgbm90ZSBkdSAyOSBqdWluIDIwMDcsIGVucmVnaXN0csOpZSBzb3VzIGxlIG7CsMKgMTIyMSBsZSAzIGp1aWxsZXQgMjAwNywgcGFyIGxlIHBhcnF1ZXQgZ8OpbsOpcmFsIHByw6hzIGxhIENvdXIgZGVzIGNvbXB0ZXPCoDsKVnUgbGUgcmFwcG9ydCBuwrDCoDIwMTItNzQ3LTAgZGUgTS7CoEplYW4tQ2hyaXN0b3BoZSBDaG91dmV0LCBjb25zZWlsbGVyIG1hw650cmUsIHJldsOqdHUgZHUgc29pdCBjb21tdW5pcXXDqSBhdSBQcm9jdXJldXIgZ8OpbsOpcmFsIGRlIGxhIFLDqXB1YmxpcXVlIGR1IHByw6lzaWRlbnQgZGUgbGEgUHJlbWnDqHJlIGNoYW1icmUgZW4gZGF0ZSBkdSAyMSBub3ZlbWJyZSAyMDEywqA7ClZ1IGxlcyBjb25jbHVzaW9ucyBuwrDCoDE4wqBkdSA5IGphbnZpZXIgMjAxMyBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIGRlwqBsYcKgUsOpcHVibGlxdWXCoDsKVnUgbGEgZMOpY2lzaW9uIGR1IDMwIG5vdmVtYnJlIDIwMTIgZHUgcHLDqXNpZGVudCBkZSBsYSBQcmVtacOocmUgY2hhbWJyZSBkZSBsYSBDb3VyIGRlcyBjb21wdGVzIGTDqXNpZ25hbnQgTS7CoEJydW5vIE9yeS1MYXZvbGzDqWUsIGNvbnNlaWxsZXIgbWHDrnRyZSwgY29tbWUgcsOpdmlzZXVyIDsKVnUgbGEgbGV0dHJlIGR1IDE0IGTDqWNlbWJyZSAyMDEyIGluZm9ybWFudCBsZSBjb21wdGFibGUgZGUgbGEgcG9zc2liaWxpdMOpIGTigJlhc3Npc3RlciDDoCBs4oCZYXVkaWVuY2UgcHVibGlxdWUgZHUgMTYgamFudmllciAyMDEzIGV0IGTigJl5IMOqdHJlIGVudGVuZHUsIGFpbnNpIHF1ZSBs4oCZYWNjdXPDqSBkZSByw6ljZXB0aW9uIGRlIGNldHRlIGxldHRyZSBlbiBkYXRlIGR1IDE3IGTDqWNlbWJyZSAyMDEywqA7IApFbnRlbmR1cyBlbiBhdWRpZW5jZSBwdWJsaXF1ZSwgTS7CoEplYW4tQ2hyaXN0b3BoZSBDaG91dmV0LCBlbiBzb24gcmFwcG9ydCwgTS7CoFl2ZXPCoFBlcnJpbiwgYXZvY2F0IGfDqW7DqXJhbCwgZW4gc2VzIGNvbmNsdXNpb25zIG9yYWxlc8KgOyBNLsKgWSBu4oCZw6l0YW50IG5pIHByw6lzZW50IG5pIHJlcHLDqXNlbnTDqcKgOwpBeWFudCBkw6lsaWLDqXLDqSBob3JzIGxhIHByw6lzZW5jZSBkdSByYXBwb3J0ZXVyIGV0IGR1IG1pbmlzdMOocmUgcHVibGljIGV0IGFwcsOocyBhdm9pciBlbnRlbmR1IE0uwqBCcnVubyBPcnktTGF2b2xsw6llLCBjb25zZWlsbGVyIG1hw650cmUsIGVuIHNlcyBvYnNlcnZhdGlvbnPCoDsKT1JET05ORcKgOgpDaGFyZ2UgbsKwwqAxIGR1IHLDqXF1aXNpdG9pcmUgMjAxMi00MCBSUS1EQgpBdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNgpBwqAtwqBMZXMgZmFpdHMKQ29uc2lkw6lyYW50IHF1ZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBkYW5zIHNvbiByw6lxdWlzaXRvaXJlIHF1ZSwgc3VyIG1hbmRhdCBuwrDCoDExMTIgw6ltaXMgbGUgMWVywqBkw6ljZW1icmXCoDIwMDYsIGxlIGNvbXB0YWJsZSBhdmFpdCBwYXnDqSwgZW4gZmF2ZXVyIGRlIGxhIHNvY2nDqXTDqSDCq8KgV8OkcnRzaWzDpCBMaXBzIERlZmVuY2XCoMK7LCBsYSBzb21tZSBkZSAzNMKgMTA5LDkywqDigqwsIHJlbGF0aXZlIMOgIGxhIGZvdXJuaXR1cmUgZGUgbWF0w6lyaWVsIHBvdXIgbOKAmWF0ZWxpZXIgbmF2YWwgZGUgbGEgZGlyZWN0aW9uIHLDqWdpb25hbGUgZGVzIGRvdWFuZXMgOwpDb25zaWTDqXJhbnQgcXXigJnDoCBs4oCZYXBwdWkgZGUgY2UgbWFuZGF0LCBuZSBmaWd1cmFpdCBxdWUgbGEgc2ltcGxlIGZhY3R1cmUgwqvCoGTigJlhY29tcHRlwqDCuyBuwrDCoDQ3OTQgZHUgMjMgbm92ZW1icmUgMjAxMSwgbWVudGlvbm5hbnQgbGEgcsOpZsOpcmVuY2Ugw6AgbGEgY29tbWFuZGUgbsKwwqAwNi8zMS8xMSBldCBsZXMgY29uZGl0aW9ucyBkZSBwYWllbWVudCDCq8KgMTAwwqAlIFRUQyDDoCBsYSBjb21tYW5kZcKgwrvCoDsgcXVlLCBsb3JzIGRlIGzigJlpbnN0cnVjdGlvbiwgbGUgY29tcHRhYmxlIGEgZm91cm5pIGEgcG9zdGVyaW9yaSBsYSBjb3BpZSBkdSBib24gZGUgY29tbWFuZGUgbsKwwqAwNi8zMS8xMSwgdHJhbnNtaXMgw6AgbGEgc29jacOpdMOpIGxlIDIywqBub3ZlbWJyZcKgMjAwNiwgZXQgY2VsbGUgZHUgZGV2aXMgbsKwwqAwMTMzMDEtMDMgZHUgOSBub3ZlbWJyZSAyMDA2wqA7CkNvbnNpZMOpcmFudCBxdWUgbGUgdmVyc2VtZW50IGRlIGzigJlhY29tcHRlIG7igJlhIHBhcyDDqXTDqSBlZmZlY3R1w6kgZGFucyBsZXMgY29uZGl0aW9ucyDDqWRpY3TDqWVzIHBhciBsZSBjb2RlIGRlcyBtYXJjaMOpcyBwdWJsaWNzwqA7CkNvbnNpZMOpcmFudCBlbiBlZmZldCBxdWUgbGUgY29tcHRhYmxlIG7igJlhIHByb2R1aXQgbmkgbGUgYm9uIGRlIGNvbW1hbmRlIG7CsMKgMDYvMzEvMTEgZHUgMjLCoG5vdmVtYnJlwqAyMDA2LCBuaSBsZSBkZXZpcyBuwrDCoDAxMzMwMS0wMyBkdSA5IG5vdmVtYnJlIDIwMDYgw6AgbOKAmWFwcHVpIGRlcyBjb21wdGVzIHByb2R1aXRzIMOgIGxhIENvdXLCoDsgcXVlIG3Dqm1lIGRhbnMgbOKAmWh5cG90aMOoc2Ugb8O5IGzigJlvbiBhc3NpbWlsZXJhaXQgY2VzIHBpw6hjZXMgw6AgdW4gbWFyY2jDqSBwdWJsaWMsIGVsbGVzIG5lIGZpZ3VyYWllbnQgcGFzIMOgIGzigJlhcHB1aSBkZXMgY29tcHRlcyB0cmFuc21pcyDDoCBsYSBDb3VywqA7IHF14oCZZWxsZXMgbmUgc29udCBkb25jIHBhcyByw6lwdXTDqWVzIGF2b2lyIMOpdMOpIHByb2R1aXRlcyBwYXIgbOKAmW9yZG9ubmF0ZXVyIGF1IG1vbWVudCBkdSBwYWllbWVudMKgOyBxdWUgZOKAmWFpbGxldXJzIGxlIGNvbXB0YWJsZSBu4oCZYSBwYXMgYXBwb3J0w6kgbGEgcHJldXZlIHF14oCZaWwgZW4gZGlzcG9zYWl0IMOgIGNlIG1vbWVudMKgOwpDb25zaWTDqXJhbnQgcXVlIGRhbnMgc2EgcsOpcG9uc2UgZHUgMjQgb2N0b2JyZSAyMDEyLCBNLsKgWSBpbmRpcXVlIHF1ZcKgwqvCoGxvcnMgZGUgbCdpbnN0cnVjdGlvbiwgbm9tYnJlIGRlIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgY29tcGzDqW1lbnRhaXJlcyBkZW1hbmTDqWVzIOKAk8KgZGV2aXMgb3UgYm9ucyBkZSBjb21tYW5kZXPCoOKAkyBvbnQgYmllbiDDqXTDqSBjb21tdW5pcXXDqWVzIGFwcsOocyByZWNoZXJjaGUgcGFyIG1lcyBzZXJ2aWNlc8KgwrvCoDsgwqvCoGVuIHRvdXQgw6l0YXQgZGUgY2F1c2UsIGlsIG4nYXBwYXJhw650IHBhcyBxdWUgY2VzIHBhaWVtZW50cyBhaWVudCBwdSBjb25zdGl0dWVyIHVuIHByw6lqdWRpY2UgZmluYW5jaWVyIHBvdXIgbCdFdGF0wqDCu8KgOwpBdHRlbmR1IHF1ZSBsYSByZXNwb25zYWJpbGl0w6kgZGVzIGNvbXB0YWJsZXMgcHVibGljcyBz4oCZYXBwcsOpY2llIGF1IG1vbWVudCBkdSBwYWllbWVudMKgOyBxdWUgZmF1dGUgZGUgcGnDqGNlcyBwcm9kdWl0ZXMsIGxlIGNvbXB0YWJsZSBu4oCZw6l0YWl0IHBhcyBlbiBtZXN1cmUgZOKAmWV4ZXJjZXIgbGVzIGNvbnRyw7RsZXMgcHLDqXZ1cyBhdXggYXJ0aWNsZXMgMTIgZXQgMTMgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiwgcHLDqWNpdMOpwqA7IHF14oCZZW4gbOKAmWFic2VuY2UgZGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMsIGxhIGTDqXBlbnNlIGVzdCBpcnLDqWd1bGnDqHJlwqA7IHF1ZSBsZSBjb21wdGFibGUgYXVyYWl0IGRvbmMgZMO7IHN1c3BlbmRyZSBsZSBwYWllbWVudCBldCBlbiBpbmZvcm1lciBs4oCZb3Jkb25uYXRldXIgZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGXCoDM3IGRlIGNlIGTDqWNyZXTCoDsKQ29uc2lkw6lyYW50IHF1ZSBsZSBjb21wdGFibGUgc291bGlnbmUgcXVlIMKrwqBwbHVzaWV1cnMgZGUgY2VzIGNoYXJnZXMgY29uY2VybmVudCBkZXMgcGFpZW1lbnRzIHN1ciBmYWN0dXJlcyBzdXIgbGVzcXVlbGxlcyBhdWN1bmUgcsOpZsOpcmVuY2Ugw6AgdW4gY29udHJhdCBuZSBmaWd1cmFpdMKgwrvCoDsgZXQgcXVlIDogwqvCoGp1c3F1J8OgIGxhIGRpZmZ1c2lvbiBkZSBsJ2luc3RydWN0aW9uIG7CsMKgMTItMDExLU1PIGR1IDMwIG1haSAyMDEyLCBsJ2ludGVycHLDqXRhdGlvbiBxdWkgw6l0YWl0IGZhaXRlIHBhciBsYSBkaXJlY3Rpb24gZ8OpbsOpcmFsZSBkZSBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBwdWlzIHBhciBsYSBkaXJlY3Rpb24gZ8OpbsOpcmFsZSBkZXMgZmluYW5jZXMgcHVibGlxdWVzLCBkZSBsYSBub21lbmNsYXR1cmUgZGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgZGUgbGEgZMOpcGVuc2Ugw6l0YWl0IHF1ZSBsZXMgcGFpZW1lbnRzIGRlIG1hcmNow6lzIHBhc3PDqXMgc2Vsb24gbGEgcHJvY8OpZHVyZSBhZGFwdMOpZSAoTUFQQSksIGQndW4gbW9udGFudCBzdXDDqXJpZXVyIMOgIDQwMDAgZXVyb3MsIHBvdXZhaWVudCDDqnRyZSBlZmZlY3R1w6lzIHN1ciBwcm9kdWN0aW9uIGQndW5lIGZhY3R1cmUgbmUgZmFpc2FudCBwYXMgcsOpZsOpcmVuY2Ugw6AgdW4gY29udHJhdC4uLsKgwrvCoDsKQ29uc2lkw6lyYW50IHF1ZSBjZXR0ZSDCq8KgaW50ZXJwcsOpdGF0aW9uIGRlIGxhIERHRklQwqDCu8KgIG5lIHNhdXJhaXQgY29uc3RpdHVlciB1bmUgbm9ybWUgcmVsYXRpdmUgw6AgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIDsKQsKgLcKgTGVzIHRleHRlcyBldCBsZXVyIGFwcGxpY2F0aW9uCkF0dGVuZHUgcXXigJlpbCByw6lzdWx0ZSBkZXMgYXJ0aWNsZXMgMSBldCAxMSBkdSBjb2RlIGRlcyBtYXJjaMOpcywgZGFucyBzYSB2ZXJzaW9uIGFwcGxpY2FibGUgZHUgMiBhb8O7dCAyMDA2IGF1IDIwIGTDqWNlbWJyZSAyMDA4LCBxdWUgwqsgbGVzIG1hcmNow6lzIHB1YmxpY3Mgc29udCBsZXMgY29udHJhdHMgY29uY2x1cyDDoCB0aXRyZSBvbsOpcmV1eCBlbnRyZSBsZXMgcG91dm9pcnMgYWRqdWRpY2F0ZXVycyBkw6lmaW5pcyBb4oCmXSBldCBkZXMgb3DDqXJhdGV1cnMgw6ljb25vbWlxdWVzIHB1YmxpY3Mgb3UgcHJpdsOpcywgcG91ciByw6lwb25kcmUgw6AgbGV1cnMgYmVzb2lucyBlbiBtYXRpw6hyZSBkZSB0cmF2YXV4LCBkZSBmb3Vybml0dXJlcyBvdSBkZSBzZXJ2aWNlcyDCuyBldCBxdWUgwqsgbGVzIG1hcmNow6lzIGV0IGFjY29yZHPiiJJjYWRyZXMgZCd1biBtb250YW50IMOpZ2FsIG91IHN1cMOpcmlldXIgw6AgNMKgMDAwwqBFdXJvcyBIVCBzb250IHBhc3PDqXMgc291cyBmb3JtZSDDqWNyaXRlwqDCu8KgOwpBdHRlbmR1IHF14oCZaWwgcsOpc3VsdGUgZGVzIGFydGljbGVzIDg3LCA5MSBldCA5NyBkdSBjb2RlIGRlcyBtYXJjaMOpcyBwdWJsaWNzLCBkYW5zIHNhIHZlcnNpb24gYXBwbGljYWJsZSBkdSAyIGFvw7t0IDIwMDYgYXUgMjAgZMOpY2VtYnJlIDIwMDgsIHF1ZSDCq8KgbGVzIHByZXN0YXRpb25zIHF1aSBvbnQgZG9ubsOpIGxpZXUgw6AgdW4gY29tbWVuY2VtZW50IGQnZXjDqWN1dGlvbiBkdSBtYXJjaMOpIG91dnJlbnQgZHJvaXQgw6AgZGVzIGFjb21wdGVzwqA7IHF1ZSBsZSBtb250YW50IGQndW4gYWNvbXB0ZSBuZSBwZXV0IGV4Y8OpZGVyIGxhIHZhbGV1ciBkZXMgcHJlc3RhdGlvbnMgYXV4cXVlbGxlcyBpbCBzZSByYXBwb3J0ZcKgwrvCoDsgcXVlIMKrwqBsZSBtYXJjaMOpIHBldXQgcHLDqXZvaXIgcXVlIGwnYXZhbmNlIHZlcnPDqWUgYXUgdGl0dWxhaXJlIGR1IG1hcmNow6kgZMOpcGFzc2UgbGVzIDXCoCUgbWVudGlvbm7DqXMgYXUgSUnCoDsgcXVlIGwnYXZhbmNlIG5lIHBldXQgZXhjw6lkZXIgMzDCoCUgZGVzIG1vbnRhbnRzIG1lbnRpb25uw6lzIGF1IElJIG1haXMgcGV1dCB0b3V0ZWZvaXMgw6p0cmUgcG9ydMOpZSDDoCB1biBtYXhpbXVtIGRlIDYwwqAlIGRlcyBtb250YW50cyBtZW50aW9ubsOpcyBjaS1kZXNzdXMsIHNvdXMgcsOpc2VydmUgcXVlIGxlIHRpdHVsYWlyZSBjb25zdGl0dWUgdW5lIGdhcmFudGllIMOgIHByZW1pw6hyZSBkZW1hbmRlIGNvbmZvcm3DqW1lbnQgYXV4IGRpc3Bvc2l0aW9ucyBkZSBsJ2FydGljbGXCoDkwwqA7IHF1ZSBsZSB0YXV4IGV0IGxlcyBjb25kaXRpb25zIGRlIHZlcnNlbWVudCBkZSBsJ2F2YW5jZSBzb250IGZpeMOpcyBwYXIgbGUgbWFyY2jDqSwgZXQgbmUgcGV1dmVudCDDqnRyZSBtb2RpZmnDqXMgcGFyIGF2ZW5hbnTCoMK7wqA7IHF14oCZZW4gb3V0cmUgwqvCoGxlcyBvcMOpcmF0aW9ucyBlZmZlY3R1w6llcyBwYXIgbGUgdGl0dWxhaXJlIGQndW4gbWFyY2jDqSBxdWkgZG9ubmVudCBsaWV1IMOgIHZlcnNlbWVudCBkJ2F2YW5jZXMgb3UgZCdhY29tcHRlcywgw6AgcsOoZ2xlbWVudCBwYXJ0aWVsIGTDqWZpbml0aWYsIG91IMOgIHBhaWVtZW50IHBvdXIgc29sZGUsIHNvbnQgY29uc3RhdMOpZXMgcGFyIHVuIMOpY3JpdCDDqXRhYmxpIHBhciBsZSBwb3V2b2lyIGFkanVkaWNhdGV1ciBvdSB2w6lyaWZpw6kgZXQgYWNjZXB0w6kgcGFyIGx1aSDCu8KgOwpBdHRlbmR1IHF1ZSBs4oCZaW5zdHJ1Y3Rpb24gY29kaWZpY2F0cmljZSBuwrDCoDAzLTA2MC1CIGR1IDE3wqBub3ZlbWJyZcKgMjAwMyBzdXN2aXPDqWUgcHLDqXZvaXQsIGVuIHNvbiBwYXJhZ3JhcGhlIDQuMi4xLsKgwqvCoE1hcmNow6lzIHB1YmxpY3MgcGFzc8OpcyBzYW5zIGZvcm1hbGl0w6lzIHByw6lhbGFibGVzIGZhaXNhbnQgbCdvYmpldCBkJ3VuIGNvbnRyYXQgw6ljcml0wqDCuyBxdWUgZG9pdmVudCDDqnRyZSBmb3VybmlzIGF1IGNvbXB0YWJsZSwgw6AgbOKAmW9jY2FzaW9uIGR1IHByZW1pZXIgcGFpZW1lbnQsIGxlIGNvbnRyYXQgZXQsIGxlIGNhcyDDqWNow6lhbnQsIGxlcyBhbm5leGVzIGF5YW50IGRlcyBpbmNpZGVuY2VzIGZpbmFuY2nDqHJlcyBhaW5zaSBxdeKAmXVuIG3DqW1vaXJlIG91IHVuZSBmYWN0dXJlLCBldCBwb3VyIGxlcyBhdXRyZXMgcGFpZW1lbnRzwqA6IHVuIG3DqW1vaXJlIG91IHVuZSBmYWN0dXJlwqA7IApBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBkZXMgZGlzcG9zaXRpb25zIGRlIGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkdSAyMyBmw6l2cmllciAxOTYzIG1vZGlmacOpIHBhciBs4oCZYXJ0aWNsZcKgMTQ2IGRlIGxhIGxvaSBuwrDCoDIwMDYtMTc3MSBkdSAzMCBkw6ljZW1icmUgMjAwNiwgwqvCoGxlcyBjb21wdGFibGVzIHB1YmxpY3Mgc29udCBwZXJzb25uZWxsZW1lbnQgZXQgcMOpY3VuaWFpcmVtZW50IHJlc3BvbnNhYmxlcyAo4oCmKSBkZXMgY29udHLDtGxlcyBxdeKAmWlscyBzb250IHRlbnVzIGTigJlleGVyY2VyIGVuIG1hdGnDqHJlIGRlICjigKYpIGTDqXBlbnNlcyAo4oCmKcKgZGFucyBsZXMgY29uZGl0aW9ucyBwcsOpdnVlcyBwYXIgbGUgcsOoZ2xlbWVudCBnw6luw6lyYWwgc3VyIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUsIGV0IHF1ZSwgwqvCoGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBk4oCZdW4gY29tcHRhYmxlIHByw6l2dWUgY2ktZGVzc3VzIHNlIHRyb3V2ZSBlbmdhZ8OpZSBkw6hzIGxvcnMgKOKApikgcXXigJl1bmUgZMOpcGVuc2UgYSDDqXTDqSBpcnLDqWd1bGnDqHJlbWVudCBwYXnDqWXCoMK7wqA7CkF0dGVuZHUgcXVlIGxhIHJlc3BvbnNhYmlsaXTDqSBww6ljdW5pYWlyZSBk4oCZdW4gY29tcHRhYmxlIHB1YmxpYyBwZXV0IMOqdHJlIG1pc2UgZW4gamV1IHBhciBsZSBqdWdlIGRlcyBjb21wdGVzwqA7IHF1ZSBsZSBjb21wdGFibGUgcHVibGljIGRvbnQgbGEgcmVzcG9uc2FiaWxpdMOpIHDDqWN1bmlhaXJlIGVzdCBtaXNlIGVuIGpldSBhIGzigJlvYmxpZ2F0aW9uIGRlIHZlcnNlciBpbW3DqWRpYXRlbWVudCBkZSBzZXMgZGVuaWVycyBwZXJzb25uZWxzIHVuZSBzb21tZSDDqWdhbGUgYXUgbW9udGFudCBkZSBsYSBkw6lwZW5zZSBpcnLDqWd1bGnDqHJlbWVudCBwYXnDqWXCoDsKQXR0ZW5kdSBxdWUgbGUgY29tcHRhYmxlIGF1cmFpdCwgZmF1dGUgZGVzIHBpw6hjZXMgcmVxdWlzZXMsIGTDuyBzdXNwZW5kcmUgbGUgcGFpZW1lbnQgZHVkaXQgbWFuZGF0IGV0IGVuIGluZm9ybWVyIGzigJlvcmRvbm5hdGV1ciBlbiBhcHBsaWNhdGlvbiBkZSBsJ2FydGljbGUgMzcgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBwcsOpY2l0w6nCoDsgCkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGR1IHBhcmFncmFwaGUgVklJSSBkZSBs4oCZYXJ0aWNsZSA2MCBtb2RpZmnDqSBzdXN2aXPDqSwgbGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWwgY291cmVudCDCq8Kgw6AgY29tcHRlciBkdSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBjb21wdGFibGVzIHB1YmxpY3PCoMK7wqA7CkF0dGVuZHUgcXXigJllbiBs4oCZZXNww6hjZSwgbGUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZSBNLsKgWSBlc3QgbGEgbm90aWZpY2F0aW9uIMOgIGNlIGRlbmllciBkdSByw6lxdWlzaXRvaXJlIGR1wqBtaW5pc3TDqHJlIHB1YmxpYyA7IHF1ZSBjZXR0ZSBub3RpZmljYXRpb24gYSDDqXTDqSBlZmZlY3R1w6llIGxlIDI4IGp1aW4gMjAxMsKgOyBxdWUgbGUgY29tcHRhYmxlIGVuIGEgYWNjdXPDqSByw6ljZXB0aW9uIGxlIDI5IGp1aW4gwqAyMDEywqA7IHF1ZSBsZXMgaW50w6lyw6p0cyBkb2l2ZW50IGRvbmMgY291cmlyIMOgIGNvbXB0ZXIgZGUgY2V0dGUgZGVybmnDqHJlIGRhdGXCoDsKUGFyIGNlcyBtb3RpZnMsIApNLsKgWSBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIHRyZW50ZSBxdWF0cmUgbWlsbGUgY2VudCBuZXVmIGV1cm9zIGV0IHF1YXRyZSB2aW5ndCBkb3V6ZSBjZW50aW1lcyAoMzTCoDEwOSw5MsKg4oKsKSBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2XCoDIwMDYsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOSBqdWluwqAyMDEyLgoKQ2hhcmdlcyBuwrDCoDIsIDMsIDQsIDYsIDcsIDgsIDksIGR1IHLDqXF1aXNpdG9pcmUgMjAxMi00MCBSUS1EQgpBwqAtwqBMZXMgZmFpdHMKQ2hhcmdlIG7CsMKgMiwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcKQ29uc2lkw6lyYW50IHF1ZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBkYW5zIHNvbiByw6lxdWlzaXRvaXJlIHF1ZSwgc3VyIG1hbmRhdCBuwrDCoDc2MyDDqW1pcyBsZSAyMMKgbm92ZW1icmXCoDIwMDcsIGxlIGNvbXB0YWJsZSBhdmFpdCBwYXnDqSBlbiBmYXZldXIgZGUgbGEgc29jacOpdMOpIMKrwqBFU1JJIEZyYW5jZcKgwrssIGxhIHNvbW1lIGRlIDI0wqA1OTIsMTXCoOKCrCBUVEMsIGNvbmNlcm5hbnQgbOKAmWFjaGF0IGRlIGxvZ2ljaWVscyA7IApDb25zaWTDqXJhbnQgcXXigJnDoCBs4oCZYXBwdWkgZGUgY2UgbWFuZGF0LCBuZSBmaWd1cmFpdCBxdWUgbGEgc2ltcGxlIGZhY3R1cmUgbsKwwqA5MDExNDAyIGR1IDkgbm92ZW1icmUgMjAwNywgbWVudGlvbm5hbnQgbGEgcsOpZsOpcmVuY2UgYXUgYm9uIGRlIGNvbW1hbmRlIG7CsMKgMjAwNzEzOcKgOyAKQ29uc2lkw6lyYW50IHF1ZSBsZSBjb21wdGFibGUgYSBwcm9kdWl0IGEgcG9zdGVyaW9yaSBsYSBjb3BpZSBkdSBib24gZGUgY29tbWFuZGUsIMOpdGFibGkgc291cyBsZSB0aW1icmUgZGUgbGEgRElSRU4sIMOgIGhhdXRldXIgZGUgMjTCoDU5MiwxNcKg4oKswqA7IApDaGFyZ2UgbsKwwqAzLCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNwpDb25zaWTDqXJhbnQgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUgcXVlLCBzdXIgbWFuZGF0IG7CsMKgODUyIMOpbWlzIGxlIDUgZMOpY2VtYnJlIDIwMDcsIGxlIGNvbXB0YWJsZSBhdmFpdCBwYXnDqSBsYSBzb21tZSBkZSAyNMKgOTg2LDcwwqDigqwsIGNvbmNlcm5hbnQgbOKAmWFjaGF0IGTigJl1biBmb3VyZ29uIHV0aWxpdGFpcmUgOyAKQ29uc2lkw6lyYW50IHF14oCZw6AgbOKAmWFwcHVpIGRlIGNlIG1hbmRhdCwgbmUgZmlndXJhaWVudCBxdWUgbGEgc2ltcGxlIGZhY3R1cmUgbsKwwqAwMTM5MzAyIGR1IDI3IG5vdmVtYnJlIDIwMDcsIMOpbWlzZSDDoCBoYXV0ZXVyIGRlIDI0wqA5MzIsMTbCoOKCrCBzdWl2YW50IGxhIGNvbW1hbmRlIG7CsMKgMjE4OTUgZXQgbGEgY29waWUgZGUgbGEgZmFjdHVyZSBuwrDCoDAxMzkzNDUgZHUgMzAgbm92ZW1icmUgMjAwNywgZOKAmXVuIG1vbnRhbnQgZGUgNTQsNTTCoOKCrMKgOyAKQ29uc2lkw6lyYW50IHF1ZSwgbG9ycyBkZSBs4oCZaW5zdHJ1Y3Rpb24sIGxlIGNvbXB0YWJsZSBhIHByb2R1aXQgYSBwb3N0ZXJpb3JpIGxhIGNvcGllIGR1IGJvbiBkZSBjb21tYW5kZSBuwrDCoDIwMDctMTM4IGR1IDMgb2N0b2JyZSAyMDA3LCDDqXRhYmxpIHNvdXMgbGUgdGltYnJlIGRlIGxhIERJUkVOIMOgIGhhdXRldXIgZGUgMjTCoDk4Niw3McKg4oKsIGV0IGxhIGNvcGllIGRlIGxhIHByb3Bvc2l0aW9uIGNvbW1lcmNpYWxlIGR1IDI3wqBzZXB0ZW1icmXCoDIwMDfCoDsgcXXigJlpbCBu4oCZYSBwYXMgYXBwb3J0w6kgbGEgcHJldXZlIHF14oCZaWwgZGlzcG9zYWl0IGRlIGNlcyBwacOoY2VzIGF1IG1vbWVudCBkdSBwYWllbWVudMKgOwpDaGFyZ2UgbsKwwqA0LCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOApDb25zaWTDqXJhbnQgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUgcXVlLCBzdXIgbWFuZGF0IG7CsMKgMTE0IMOpbWlzIGxlIDMgbm92ZW1icmUgMjAwOCwgbGUgY29tcHRhYmxlIGEgcGF5w6ksIGF1IHByb2ZpdCBkZSBsYSBzb2Npw6l0w6kgwqvCoE1hamVzdGljwqDCuywgbGEgc29tbWUgZGUgNMKgODAzLDI1wqDigqwgKDTCoDMyMSw3MCDigqzCoEhUKSBjb25jZXJuYW50IGxlIHPDqW1pbmFpcmUgcsOpc2lkZW50aWVsIGR1wqAyMsKgYXUgMjQgb2N0b2JyZSAyMDA4LCBvcmdhbmlzw6kgcG91ciBwcsOpcGFyZXIgbGUgcGxhbiBkZSBjb21tdW5pY2F0aW9uIHLDqWdpb25hbCAyMDA5LCBkYW5zIGxlIGNhZHJlIGTigJl1biBjb21pdMOpIHLDqWdpb25hbCBwb3VyIGzigJlpbmZvcm1hdGlvbiBldCBsYSBjb21tdW5pY2F0aW9uIChDUklDT00pIMOpbGFyZ2nCoDsKQ29uc2lkw6lyYW50IHF14oCZw6AgbOKAmWFwcHVpIGR1IG1hbmRhdCBuwrDCoDExNCwgbmUgZmlndXJhaXQgcXVlIGxhIHNpbXBsZSBmYWN0dXJlIG7CsMKgNTY5MiBkdSAzMCBvY3RvYnJlIDIwMDgsIMOpbWlzZSBwYXIgbOKAmWjDtHRlbCDCq8KgTWVyY3VyZSBsYSBCYXVsZSBNYWplc3RpY8KgwrssIHJlbGF0aXZlIMOgIGxhIG1hbmlmZXN0YXRpb24gZHUgMjIgYXUgMjQgb2N0b2JyZSAyMDA4IDsgcXVlLCBsb3JzIGRlIGzigJlpbnN0cnVjdGlvbiwgbGUgY29tcHRhYmxlIGEgdHJhbnNtaXMgYcKgcG9zdGVyaW9yaSB1bmUgbm90ZSBkdSBtaW5pc3TDqHJlIGRlIGzigJnDqWNvbm9taWUsIGRlcyBmaW5hbmNlcyBldCBkZSBs4oCZZW1wbG9pLCBub24gc2lnbsOpZSwgYWRyZXNzw6llIGF1IHByw6lzaWRlbnQgZHUgQ1JJQ09NIFBheXMgZGUgbGEgTG9pcmUsIHZhbGlkYW50IGxlcyBhY3Rpb25zIHByw6lzZW50w6llcyBwYXIgbOKAmcOpcXVpcGUgQ1JJQ09NwqA7IHVuZSBub3RlIGR1IENSSUNPTSBkdSAxNSBmw6l2cmllciAyMDA4IGTDqXRhaWxsYW50IGxlIHByb2pldCBkZSBs4oCZYW5pbWF0aW9uIGR1IHLDqXNlYXUgZGUgY29tbXVuaWNhdGlvbiA7CkNvbnNpZMOpcmFudCBxdWUsIHN1ciBtYW5kYXQgbsKwwqAxMzkgZHUgMjUgbm92ZW1icmUgMjAwOCwgbGUgY29tcHRhYmxlIGEgcGF5w6ksIGF1IHByb2ZpdCBkZSDCq8KgU0lEIETDqXZlbG9wcGVtZW50wqDCuywgbGEgc29tbWUgZGUgMTHCoDkzMywwOcKg4oKsLCByZWxhdGl2ZSDDoCBsYSBwYXJ0aWNpcGF0aW9uIGR1IENSSUNPTSBhdSBTYWxvbiBkZXMgZW50cmVwcmVuZXVycyBkdSBncmFuZCBPdWVzdCAyMDA4IDsKQ29uc2lkw6lyYW50IHF14oCZw6AgbOKAmWFwcHVpIGR1IG1hbmRhdCBuwrDCoDEzOSwgbmUgZmlndXJhaXQgcXVlIGxhIHNpbXBsZSBmYWN0dXJlIG7CsMKgRkEzODAxNDEgZHUgMTkgbm92ZW1icmUgMjAwOMKgOyBxdWUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uLCBsZSBjb21wdGFibGUgYSB0cmFuc21pcyBhIHBvc3RlcmlvcmkgbGEgY29waWUgZHUgZG9zc2llciBk4oCZaW5zY3JpcHRpb24gZHUgQ1JJQ09NIGF1IFNhbG9uIGRlcyBlbnRyZXByZW5ldXJzLCBhdmVjIGFjY3Vzw6kgcsOpY2VwdGlvbiBkdSAzMSBtYXJzIDIwMDgsIGxhIHByb3Bvc2l0aW9uIGNvbW1lcmNpYWxlIGR1IDI5IGphbnZpZXIgMjAwOCwgZGVzIMOpY2hhbmdlcyBkZSBjb3VycmllbHMgY29uY2VybmFudCBsZXMgYmFzZXMgdGFyaWZhaXJlcywgbGUgYmlsYW4gZHUgMTYgZMOpY2VtYnJlIDIwMDggZGUgbGEgcGFydGljaXBhdGlvbiBkZXMgbWluaXN0w6hyZXMgYXUgc2Fsb27CoDsgcXXigJllbiBzdXMsIGxlIGNvbXB0YWJsZSBhIGZhaXQgbWVudGlvbiBkdSBtYXJjaMOpIHBhc3PDqSBlbnRyZSBsZSBDUklDT00gZXQgwqvCoFNJRCBEw6l2ZWxvcHBlbWVudMKgwrvCoDsKQ29uc2lkw6lyYW50IHF1ZSBsZXMgbWFuZGF0cyBwcsOpY2l0w6lzIHPigJlhbmFseXNlbnQgY29tbWUgbGVzIHByZW1pZXJzIGV0IHVuaXF1ZXMgcGFpZW1lbnRzIHJlbGF0aWZzIGTigJl1bmUgcGFydCwgYXV4IGZyYWlzIGRlIGxhIG1hbmlmZXN0YXRpb24gb3JnYW5pc8OpZSBwYXIgbGUgQ1JJQ09NIHF1aSBz4oCZZXN0IHRlbnVlIGR1IDIyIGF1IDI0IG9jdG9icmUgMjAwOCDDoCBs4oCZaMO0dGVsIE1hamVzdGljIGRlIGxhIEJhdWxlLCBkYW5zIGxlIGNhcyBkdSBtYW5kYXQgbsKwwqAxMTQgZXQsIGTigJlhdXRyZSBwYXJ0LCDDoCBsYSByw6lzZXJ2YXRpb24gZHUgc3RhbmQgcGFyIGxlIENSSUNPTSBhdSBTYWxvbiBkZXMgZW50cmVwcmVuZXVycyBxdWkgc+KAmWVzdCB0ZW51IGR1IDEzIGF1IDE0IG5vdmVtYnJlIDIwMDggw6AgbGEgY2l0w6kgZGVzIGNvbmdyw6hzIGRlIE5hbnRlcyBkYW5zIGxlIGNhcyBkdSBtYW5kYXQgbsKwwqAxMznCoDsKQ2hhcmdlIG7CsMKgNiwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcKQ29uc2lkw6lyYW50IHF1ZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBkYW5zIHNvbiByw6lxdWlzaXRvaXJlIHF1ZSwgc3VyIG1hbmRhdCBuwrDCoDYzIGR1IDEwIGTDqWNlbWJyZSAyMDA3LCBsZSBjb21wdGFibGUgYXZhaXQgcGF5w6kgc3VyIGxlIHByb2dyYW1tZSBuwrDCoDIwNyDCq8KgU8OpY3VyaXTDqSByb3V0acOocmUgwrsgZHUgbWluaXN0w6hyZSBkZSBs4oCZw6lxdWlwZW1lbnQsIMOgIGhhdXRldXIgZGUgN8KgMjExLDg4wqDigqwgZXQgOMKgMTUwwqDigqwsIHNvaXQgYXUgdG90YWwgMTXCoDM2MSw4OMKg4oKsLCBkZXV4IGTDqXBlbnNlcyBjb3JyZXNwb25kYW50IMOgIHVuZSBjYW1wYWduZSBkZSBjb21tdW5pY2F0aW9uIHN1ciBsYSBzw6ljdXJpdMOpIHJvdXRpw6hyZSBlZmZlY3R1w6llIGR1IDIgYXUgMTLCoGTDqWNlbWJyZcKgMjAwNyBldCDDoCBs4oCZYWNoYXQgZOKAmXVuIGJhbmMgZOKAmWVzc2FpIDsKQ29uc2lkw6lyYW50IHF14oCZw6AgbOKAmWFwcHVpIGRlIGNlIG1hbmRhdCwgZmlndXJhaWVudCBzZXVsZW1lbnQgbGUgZmF4IGRlIGxhIGZhY3R1cmUgbsKwwqAzODEzMzcxNywgw6ltaXNlIHBhciBsYSBzb2Npw6l0w6kgwqvCoFLDqWdpZSBOZXR3b3Jrc8Kgwrsgc3VpdmFudCBsYSBjb21tYW5kZSBuwrDCoDU4ODQxNiBkdSAywqBkw6ljZW1icmXCoDIwMDcsIHBvcnRhbnQgbGEgbWVudGlvbiDCq8KgZGVzdGluw6kgYXUgcGFpZW1lbnTCoMK7IGV0IMKrwqBjZXJ0aWZpw6kgbGUgc2VydmljZSBmYWl0IGV0IGzigJlleGFjdGl0dWRlIGRlIGxhIGRldHRlIGxpcXVpZMOpZSDDoCA3wqAyMTEsODjCoOKCrMKgwrsgYWluc2kgcXVlIGxhIHNpbXBsZSBmYWN0dXJlIG7CsMKgMjAwNzE5L0RTLCDDqW1pc2UgcGFyIGxhIHNvY2nDqXTDqSDCq8KgUGljaGFyZCBSYWNpbmfCoMK7LCBtZW50aW9ubmFudCDCq8KgY2VydGlmacOpIGxlIHNlcnZpY2UgZmFpdCBldCBs4oCZZXhhY3RpdHVkZSBkZSBsYSBkZXR0ZSBsaXF1aWTDqWUgw6AgOMKgMTUwwqDigqzCoMK7wqA7CkNvbnNpZMOpcmFudCBxdWUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uLCBsZSBjb21wdGFibGUgYSBwcm9kdWl0IGEgcG9zdGVyaW9yaSwgc+KAmWFnaXNzYW50IGRlIMKrwqBSw6lnaWUgTmV0d29ya3PCoMK7LCB1biBjZXJ0aWZpY2F0LCDDqXRhYmxpIGxlIDI4wqBqdWluwqAyMDEwIHBhciBsZSBwcsOpZmV0IGRlIHLDqWdpb24sIGF0dGVzdGFudCBxdWUgbGUgYm9uIGRlIGNvbW1hbmRlIHJlbGF0aWYgw6AgbGEgY2FtcGFnbmUgZGUgY29tbXVuaWNhdGlvbiBu4oCZYXZhaXQgcHUgw6p0cmUgdHJvdXbDqSBkYW5zIGxlcyBhcmNoaXZlcyAyMDA3IGV0IGxlIMKrwqByZXBvcnRpbmcgZGUgbOKAmW9ww6lyYXRpb24gZGUgc2Vuc2liaWxpc2F0aW9uIDIgcm91ZXMgYXZlY8KgTlJKIMK7IGR1IDfCoGphbnZpZXLCoDIwMDjCoDsgc+KAmWFnaXNzYW50IGRlIMKrwqBQaWNoYXJkIFJhY2luZ8KgwrssIGxhIGNvcGllIG5vbiBkYXTDqWUsIHNpZ27DqWUgcGFyIGTDqWzDqWdhdGlvbiBkdSBQcsOpZmV0LCBkdSBkZXZpcyBhY2NlcHTDqSBk4oCZdW4gYmFuYyBkZSBtZXN1cmUgZGUgdml0ZXNzZSA7CkNoYXJnZSBuwrDCoDcsIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA3CkNvbnNpZMOpcmFudCBxdWUgbGUgUHJvY3VyZXVyIGfDqW7DqXJhbCBhIHJlbGV2w6kgZGFucyBzb24gcsOpcXVpc2l0b2lyZSBxdWUsIHN1ciBtYW5kYXQgbsKwwqAxNjY3IGR1IDggbm92ZW1icmUgMjAwNywgbGUgY29tcHRhYmxlIGF2YWl0IHBhecOpLCBhdSBwcm9maXQgZGUgbGEgc29jacOpdMOpIGFsbGVtYW5kZSDCq8KgTWVrdSBFcmljaCBQb2xsYWhuZSBHbWJowqDCuywgc3VyIGxlIHByb2dyYW1tZSAyMDYgwqvCoFPDqWN1cml0w6kgZXQgcXVhbGl0w6kgc2FuaXRhaXJlcyBkZSBs4oCZYWxpbWVudGF0aW9uwqDCuyBkdSBtaW5pc3TDqHJlIGRlIGzigJlhZ3JpY3VsdHVyZSBldCBkZSBsYSBww6pjaGUsIGxhIHNvbW1lIGRlIDE1wqA0MjIsNDDCoOKCrCwgcmVsYXRpdmUgw6AgbOKAmWFjaGF0IGTigJnDqXF1aXBlbWVudHPCoDsgCkNvbnNpZMOpcmFudCBxdeKAmcOgIGzigJlhcHB1aSBkZSBjZSBtYW5kYXQsIGZpZ3VyYWllbnQgbGEgc2ltcGxlIGZhY3R1cmUgbsKwwqAxMDA3LzI3NiBkdSAzMCBvY3RvYnJlIDIwMDcsIGxhIGNvcGllIGRlIGzigJlvcmRyZSBkZSBwYWllbWVudCBkdSA4wqBub3ZlbWJyZcKgMjAwNyBldCBsYSBmaWNoZSBkZSByZW5zZWlnbmVtZW50IHJlbGF0aXZlIMOgIHVuIHRpdHJlIGRlIHBhaWVtZW50IMOpbWlzIGF1IGLDqW7DqWZpY2UgZOKAmXVuIGNyw6lhbmNpZXIgw6l0YWJsaSDDoCBs4oCZw6l0cmFuZ2VyIDsgCkNvbnNpZMOpcmFudCBxdWUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uLCBsZSBjb21wdGFibGUgYSBwcm9kdWl0IGEgcG9zdGVyaW9yaSBsYSBjb3BpZSBkdSBib24gZGUgY29tbWFuZGUgbsKwwqAwN0UwMTYwLCB0cmFuc21pcyBsZSAyOSBvY3RvYnJlIDIwMDcgw6AgbGEgc29jacOpdMOpIHBhciBsYSBkaXJlY3Rpb24gcsOpZ2lvbmFsZSBldCBkw6lwYXJ0ZW1lbnRhbGUgZGUgbOKAmWFncmljdWx0dXJlIGV0IGxhIGZvcsOqdCwgYWNjb21wYWduw6llIGTigJl1bmUgcHJvcG9zaXRpb24gZOKAmWFjaGF0IGVuIHZ1ZSBkdSByZW1wbGFjZW1lbnQgZGVzIGV4dHJhY3RldXJzIHV0aWxpc8OpcyBwYXIgbGVzIGxhYm9yYXRvaXJlcyBlbiBGcmFuY2UgOwoKQ2hhcmdlIG7CsMKgOCwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcKQ29uc2lkw6lyYW50IHF1ZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBkYW5zIHNvbiByw6lxdWlzaXRvaXJlIHF1ZSBzdXIgbWFuZGF0IG7CsMKgMTgyMiDDqW1pcyBsZSAxNiBub3ZlbWJyZSAyMDA3LCBsZSBjb21wdGFibGUgYXZhaXQgcGF5w6ksIGF1IHByb2ZpdCBkZSBsYSBzb2Npw6l0w6kgwqvCoEFPSVDCoMK7LCBsYSBzb21tZSBkZSA0OMKgMDU1LDI4wqDigqwgc3VyIGxlIHByb2dyYW1tZSAyMDYgwqvCoFPDqWN1cml0w6kgZXQgcXVhbGl0w6kgc2FuaXRhaXJlcyBkZSBs4oCZYWxpbWVudGF0aW9uwqDCuywgYWN0aW9uIG7CsMKgMTEgwqvCoGTDqXRlY3Rpb24gZXQgc3VydmVpbGxhbmNlIGRlcyByaXNxdWVzIHBoeXRvc2FuaXRhaXJlcyBhdSBuaXZlYXUgZMOpY29uY2VudHLDqcKgwrssIGNvZGUgYWxwaGFudW3DqXJpcXVlIE1OIChhY2hhdHMgbm9uIHN0b2Nrw6lzKSwgZHUgbWluaXN0w6hyZSBkZSBs4oCZYWdyaWN1bHR1cmUgZXQgZGUgbGEgcMOqY2hlIDsgCkNvbnNpZMOpcmFudCBxdeKAmcOgIGzigJlhcHB1aSBkZSBjZSBtYW5kYXQsIGZpZ3VyYWllbnQgc2V1bGVtZW50IGxhIGZhY3R1cmUgbsKwwqBiY2MwMzQ3MSBkdSAyMyBvY3RvYnJlIDIwMDcgZGUgbGEgc29jacOpdMOpIMKrwqBBT0lQwqDCuywgbWVudGlvbm5hbnQgbGEgcsOpZsOpcmVuY2Ugw6AgbGEgY29tbWFuZGUgbsKwwqAwN0UwMTQyIGV0IHJlbGF0aXZlIMOgIGxhIGxpdnJhaXNvbiBk4oCZdW5lIMKrwqBjZW50cmFsZSBpbmZvcm1hdGlzw6llwqDCuywgbGEgZmljaGUgZOKAmWlkZW50aXTDqSBIeXBlcmJpbCBkZSBsYSBzb2Npw6l0w6kgwqvCoEFPSVDCoMK7LCBmYWJyaWNhbnQgZOKAmWluc3RydW1lbnRzIHNjaWVudGlmaXF1ZXMgZXQgdGVjaG5pcXVlcywgbGUgY2VydGlmaWNhdCwgw6l0YWJsaSBsZSAxNiBub3ZlbWJyZSAyMDA3IHBhciBsYSBkaXJlY3Rpb24gcsOpZ2lvbmFsZSBldCBkw6lwYXJ0ZW1lbnRhbGUgZGUgbOKAmWFncmljdWx0dXJlIGV0IGxhIGZvcsOqdCwgYXR0ZXN0YW50IHF1ZSDCq8KgbGEgZmFjdHVyZSBbLi4uXSBmYWlzYW50IGzigJlvYmpldCBkdSBtYW5kYXQgbsKwwqAxODIyIFsuLi5dIGNvbmNlcm5lIGJpZW4gZGVzIGZvdXJuaXR1cmVzIGRlIGxhYm9yYXRvaXJlwqDCu8KgOyBsYSBub3RlIGR1IDE5wqBub3ZlbWJyZcKgMjAwNyBkdSB0csOpc29yaWVyLXBheWV1ciBnw6luw6lyYWwgYXUgZGlyZWN0ZXVyIHLDqWdpb25hbCBkZSBs4oCZYWdyaWN1bHR1cmUgZXQgbGEgZm9yw6p0IHNpZ25hbGFudCBxdWUgwqvCoGxhIGZhY3R1cmUgbWFuZGF0w6llIG7igJllc3QgcGFzIGTDqXRhaWxsw6llIGV0IGxhIGNvbW1hbmRlIHLDqWbDqXJlbmPDqWUgbuKAmWVzdCBwYXMgam9pbnRlLCBjZSBxdWkgbm91cyBuZSBwZXJtZXQgcGFzIGTigJllZmZlY3R1ZXIgbm90cmUgY29udHLDtGxlIGNvbmNlcm5hbnQgbOKAmWltcHV0YXRpb24gYnVkZ8OpdGFpcmUgZGUgbGEgZMOpcGVuc2XCoMK7wqA7CkNvbnNpZMOpcmFudCBxdWUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uLCBsZSBjb21wdGFibGUgYSBwcm9kdWl0IGEgcG9zdGVyaW9yaSBsYSBjb3BpZSBkdSBib24gZGUgY29tbWFuZGUgbsKwwqAwN0UwMTQyLCB0cmFuc21pcyBsZSAyNiBvY3RvYnJlIDIwMDcgw6AgbGEgc29jacOpdMOpIMKrwqBBT0lQwqDCuywgcGFyIGxhIGRpcmVjdGlvbiByw6lnaW9uYWxlIGV0IGTDqXBhcnRlbWVudGFsZSBkZSBs4oCZYWdyaWN1bHR1cmUgZXQgbGEgZm9yw6p0LCBhY2NvbXBhZ27DqWUgZOKAmXVuIHRhYmxlYXUgZHUgMjPCoG9jdG9icmXCoDIwMDcgZMOpdGFpbGxhbnQgbGEgY29tbWFuZGUgZOKAmcKrwqB1bmUgY2VudHJhbGUgaW5mb3JtYXRpc8OpZSBkZSBzdWl2aSBkZXMgdGVtcMOpcmF0dXJlcyAob3B0aW9uIMOpdGFsb25uYWdlLCBjYXJ0b2dyYXBoaWUsIHRyYW5zZmVydCBk4oCZYWxhcm1lKSwgw6lxdWlwZW1lbnQgY29tcGxldCBkZXMgc3RhdGlvbnMgZOKAmSBBbmdlcnMsIFJlbm5lcywgTmFuY3kgQ2xlcm1vbnQtRmVycmFuZMKgwrvCoDsKQ29uc2lkw6lyYW50IHF1ZSBs4oCZaW1wdXRhdGlvbiBkdSBtYW5kYXQgbsKwwqAxODIyIMOgIGxhIGxpZ25lIG7CsMKgMjA2LTExLTMxLCBjb21wdGUgNjA2MjgxIChNTikgwqvCoGFjaGF0cyBub24gc3RvY2vDqXPCoDogZm91cm5pdHVyZXMgaW5mb3JtYXRpcXVlc8KgwrssIGF1IGxpZXUgZGUgbGEgbGlnbmUgbsKwwqAyMDYtMTEtNTEsIGNvbXB0ZSAyMTYxNDEgKEFYKcKgOiDCq8KgbWF0w6lyaWVsIGTigJlhbmFseXNlcyBldCBkZSBtZXN1cmVzIGFwcGFydGVuYW50IMOgwqBs4oCZRXRhdMKgwrssIGNvbnN0aXR1ZSB1bmUgaXJyw6lndWxhcml0w6kgYWZmZWN0YW50IGxlcyBkw6lwZW5zZXMgZGUgbOKAmUV0YXQgYWluc2kgcXVlIGzigJlleGFjdGl0dWRlIGRlcyBjb21wdGVzIHRyYW5zbWlzIMOgIGxhIENvdXLCoDsgcXXigJllbGxlIGVzdCBkZSBzdXJjcm/DrnQgbGEgcHJldXZlICBk4oCZdW5lIGluc3VmZmlzYW5jZSBkdSBjb250csO0bGUgZGUgbGEgZMOpcGVuc2XCoDsKCgpDaGFyZ2UgbsKwwqA5LCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOApDb25zaWTDqXJhbnQgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUgcXVlLCBzdXIgbWFuZGF0IG7CsMKgMTY2NiDDqW1pcyBsZSAyNSBub3ZlbWJyZSAyMDA4LCBsZSBjb21wdGFibGUgYXZhaXQgcGF5w6ksIGF1IHByb2ZpdCBkZSBsYSBzb2Npw6l0w6kgYW5nbGFpc2UgwqvCoFdvbHRlcnMgS2x1d2VyIEhlYWx0aMKgwrssIHN1ciBsZSBwcm9ncmFtbWUgMjA2IMKrwqBTw6ljdXJpdMOpIGV0IHF1YWxpdMOpIHNhbml0YWlyZXMgZGUgbOKAmWFsaW1lbnRhdGlvbsKgwrsgZHUgbWluaXN0w6hyZSBkZSBs4oCZYWdyaWN1bHR1cmUgZXQgZGUgbGEgcMOqY2hlLCBsYSBzb21tZSBkZSAzMMKgNDMzLDY4wqDigqwsIGNvbmNlcm5hbnQgbOKAmWFjY8OocyDDoCB1bmUgYmFzZSBkZSBkb25uw6llcyBiaWJsaW9ncmFwaGlxdWVzIDsgCkNvbnNpZMOpcmFudCBxdeKAmcOgIGzigJlhcHB1aSBkZSBjZSBtYW5kYXQsIGZpZ3VyYWllbnQgc2V1bGVtZW50IGxhIGZhY3R1cmUgbsKwwqBPTMKgMjI2NDYgZHUgMzEgb2N0b2JyZSAyMDA4IGV0IGxhIGxldHRyZSBkdSBMYWJvcmF0b2lyZSBuYXRpb25hbCBkZSBsYSBwcm90ZWN0aW9uIGRlcyB2w6lnw6l0YXV4IChMTlBWKSBzb3VsaWduYW50IGxhIHNww6ljaWZpY2l0w6kgZGUgY2V0dGUgYmFzZSBkZSBkb25uw6llcywgw6AgZMOpZmF1dCBk4oCZYXV0cmVzIGZvdXJuaXNzZXVycyBhY2Nlc3NpYmxlcyBlbiBGcmFuY2UgOyAKQ29uc2lkw6lyYW50IHF1ZSwgbG9ycyBkZSBs4oCZaW5zdHJ1Y3Rpb24sIGxlIGNvbXB0YWJsZSBhIHByb2R1aXQgYSBwb3N0ZXJpb3JpIGxhIGNvcGllIGR1IGJvbiBkZSBjb21tYW5kZSBuwrDCoDA4RTAyMTAgZHUgMzHCoG9jdG9icmXCoDIwMDgsIHRyYW5zbWlzIGxlIDMgbm92ZW1icmUgMjAwOCDDoCBsYSBzb2Npw6l0w6ksIGFjY29tcGFnbsOpIGRlIGxhIHByb3Bvc2l0aW9uIGR1IDI5wqBvY3RvYnJlwqAyMDA4LCBwb3VyIGxlcyBjb250ZW51cyBldCBvdXRpbHMgwqvCoENBQsKgYWJzdHJhY3RzwqDCuyBwb3VyIGxlIExOUFYgOyBsYSBjb3BpZSBkZSBs4oCZb3JkcmUgZGUgcGFpZW1lbnQgZHUgMjXCoG5vdmVtYnJlwqAyMDA4IGV0IGxhIGZpY2hlIGRlIHJlbnNlaWduZW1lbnQgcmVsYXRpdmUgw6AgdW4gdGl0cmUgZGUgcGFpZW1lbnQgw6ltaXMgYXUgYsOpbsOpZmljZSBk4oCZdW4gY3LDqWFuY2llciDDqXRhYmxpIMOgIGzigJnDqXRyYW5nZXIgOyAKQ29uc2lkw6lyYW50IHF1ZSBsYSByw6lwb25zZSBkdSAyNCBvY3RvYnJlIDIwMTIgZGUgTS7CoFkgcHLDqXNlbnRlIHBvdXIgbGVzIGNoYXJnZXMgMiwgMywgNCwgNiwgNywgOCBldCA5IGxlcyBtw6ptZXMgYXJndW1lbnRzIHF1ZSBwb3VyIGxhIGNoYXJnZSBuwrDCoDEsIGxlc3F1ZWxzIG5lIHNhdXJhaWVudCBleG9uw6lyZXIgbGUgY29tcHRhYmxlIGRlIHNhIHJlc3BvbnNhYmlsaXTDqcKgOwoKQsKgLcKgTGVzIHRleHRlcyBldCBsZXVyIGFwcGxpY2F0aW9uCkF0dGVuZHUgcXXigJlpbCByw6lzdWx0ZSBkZXMgYXJ0aWNsZXPCoDEgZXQgMTEgZHUgY29kZSBkZXMgbWFyY2jDqXMsIGRhbnMgc2EgdmVyc2lvbiAgYXBwbGljYWJsZSBkdSAyIGFvw7t0IDIwMDYgYXUgMjAgZMOpY2VtYnJlIDIwMDgsIHF1ZSDCq8KgbGVzIG1hcmNow6lzIHB1YmxpY3Mgc29udCBsZXMgY29udHJhdHMgY29uY2x1cyDDoCB0aXRyZSBvbsOpcmV1eCBlbnRyZSBsZXMgcG91dm9pcnMgYWRqdWRpY2F0ZXVycyBkw6lmaW5pcyBb4oCmXSBldCBkZXMgb3DDqXJhdGV1cnMgw6ljb25vbWlxdWVzIHB1YmxpY3Mgb3UgcHJpdsOpcywgcG91ciByw6lwb25kcmUgw6AgbGV1cnMgYmVzb2lucyBlbiBtYXRpw6hyZSBkZSB0cmF2YXV4LCBkZSBmb3Vybml0dXJlcyBvdSBkZSBzZXJ2aWNlc8KgwrsgZXQgcXVlIMKrwqBsZXMgbWFyY2jDqXMgZXQgYWNjb3Jkcy1jYWRyZXMgZCd1biBtb250YW50IMOpZ2FsIG91IHN1cMOpcmlldXIgw6AgNCAwMDAgRXVyb3MgSFQgc29udCBwYXNzw6lzIHNvdXMgZm9ybWUgw6ljcml0ZcKgwrvCoDsgCkF0dGVuZHUgcXVlIGzigJlpbnN0cnVjdGlvbiBjb2RpZmljYXRyaWNlIG7CsMKgMDMtMDYwLUIgZHUgMTfCoG5vdmVtYnJlwqAyMDAzIHN1c3Zpc8OpZSBwcsOpdm9pdCwgZW4gc29uIHBhcmFncmFwaGUgNC4yLjEuwqDCq8KgTWFyY2jDqXMgcHVibGljcyBwYXNzw6lzIHNhbnMgZm9ybWFsaXTDqXMgcHLDqWFsYWJsZXMgZmFpc2FudCBsJ29iamV0IGQndW4gY29udHJhdCDDqWNyaXTCoMK7IHF1ZSBkb2l2ZW50IMOqdHJlIGZvdXJuaXMgYXUgY29tcHRhYmxlIMOgIGzigJlvY2Nhc2lvbiBkdSBwcmVtaWVyIHBhaWVtZW50IGxlIGNvbnRyYXQgZXQsIGxlIGNhcyDDqWNow6lhbnQsIGxlcyBhbm5leGVzIGF5YW50IGRlcyBpbmNpZGVuY2VzIGZpbmFuY2nDqHJlcyBhaW5zaSBxdeKAmXVuIG3DqW1vaXJlIG91IHVuZSBmYWN0dXJlLCBldCBwb3VyIGxlcyBhdXRyZXMgcGFpZW1lbnRzwqA6IHVuIG3DqW1vaXJlIG91IHVuZSBmYWN0dXJlwqA7CkF0dGVuZHUgcXVlIGxhIHJlc3BvbnNhYmlsaXTDqSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzIHPigJlhcHByw6ljaWUgYXUgbW9tZW50IGR1IHBhaWVtZW50wqA7IHF1ZSBmYXV0ZSBkZXMgcGnDqGNlcyByZXF1aXNlcywgbGUgY29tcHRhYmxlIG7igJnDqXRhaXQgcGFzIGVuIG1lc3VyZSBk4oCZZXhlcmNlciBsZXMgY29udHLDtGxlcyBxdWksIHNlbG9uIGxlcyBkaXNwb3NpdGlvbnMgY29tYmluw6llcyBkZXMgYXJ0aWNsZXMgMTIgZXQgMTMgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBkdSByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgc3Vzdmlzw6ksIHBvcnRlbnQgbm90YW1tZW50IHN1ciBsYSDCq8KgcHJvZHVjdGlvbiBkZXMganVzdGlmaWNhdGlvbnPCoMK7IDsgCkF0dGVuZHUgcXVlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIHF1aSBu4oCZb250IHBhcyDDqXTDqSBqb2ludGVzIGF1IGNvbXB0ZSBkZSBnZXN0aW9uIGR1IGNvbXB0YWJsZSBzb250IHLDqXB1dMOpZXMgbmUgcGFzIGF2b2lyIMOpdMOpIHByb2R1aXRlcyBhdSBjb21wdGFibGUgcGFyIGzigJlvcmRvbm5hdGV1ciBhdSBtb21lbnQgZHUgcGFpZW1lbnTCoDsgcXVlIGxlIGNvbXB0YWJsZSBu4oCZYSBwYXMgYXBwb3J0w6kgbGEgcHJldXZlIHF14oCZaWwgZGlzcG9zYWl0IGRlcyBwacOoY2VzIHJlcXVpc2VzIHBhciBsYSBub21lbmNsYXR1cmUgYXUgbW9tZW50IGR1IHBhaWVtZW50wqA7CkF0dGVuZHUgcXXigJnDoCBkw6lmYXV0IGTigJllbmdhZ2VtZW50IMOpY3JpdCBkZXMgcGFydGllcywgbGUgY29tcHRhYmxlIGF1cmFpdCBkw7sgc3VzcGVuZHJlIGxlIHBhaWVtZW50IGRlcyBtYW5kYXRzIHN1c21lbnRpb25uw6lzLCBsZXVycyBtb250YW50cyB1bml0YWlyZXMgZMOpcGFzc2FudCBsZSBzZXVpbCBkZSA0wqAwMDDCoOKCrCBob3JzIHRheGVzLCBldCBlbiBpbmZvcm1lciBs4oCZb3Jkb25uYXRldXIgZW4gYXBwbGljYXRpb24gZGUgbCdhcnRpY2xlwqAzNyBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyLCBwcsOpY2l0w6nCoDsKQXR0ZW5kdSBxdeKAmWF1eCB0ZXJtZXMgZGUgbOKAmWFydGljbGXCoDYwIG1vZGlmacOpIHN1c3Zpc8OpLCBwYXJhZ3JhcGhlIElWIMKrwqBMYSByZXNwb25zYWJpbGl0w6kgcMOpY3VuaWFpcmUgZOKAmXVuIGNvbXB0YWJsZSBwdWJsaWMgbmUgcGV1dCDDqnRyZSBtaXNlIGVuIGpldSBxdWUgcGFyIGxlIG1pbmlzdHJlIGRvbnQgaWwgcmVsw6h2ZSwgbGUgbWluaXN0cmUgY2hhcmfDqSBkdSBidWRnZXQgb3UgbGUganVnZSBkZXMgY29tcHRlc8KgwrvCoDsgcGFyYWdyYXBoZSBWSSwgwqvCoExlIGNvbXB0YWJsZSBwdWJsaWMgZG9udCBsYSByZXNwb25zYWJpbGl0w6kgcMOpY3VuaWFpcmUgZXN0IG1pc2UgZW4gamV1IHBhciAo4oCmKSBsZSBqdWdlIGRlcyBjb21wdGVzIGEgbOKAmW9ibGlnYXRpb24gZGUgdmVyc2VyIGltbcOpZGlhdGVtZW50IGRlIHNlcyBkZW5pZXJzIHBlcnNvbm5lbHMgdW5lIHNvbW1lIMOpZ2FsZSwgc29pdCBhdSBtb250YW50IGRlIGxhIHBlcnRlIGRlIHJlY2V0dGUgc3ViaWUgKOKApinCoMK7wqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGR1IHBhcmFncmFwaGUgVklJSSwgbGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWwgY291cmVudCDCq8Kgw6AgY29tcHRlciBkdSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBjb21wdGFibGVzIHB1YmxpY3PCoMK7wqA7CkF0dGVuZHUgcXXigJllbiBs4oCZZXNww6hjZSwgbGUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgZXN0IGxhIG5vdGlmaWNhdGlvbiDDoCBNLsKgWSBkdSByw6lxdWlzaXRvaXJlwqBkdSBtaW5pc3TDqHJlIHB1YmxpYyA7IHF1ZSBjZXR0ZSBub3RpZmljYXRpb24gYSDDqXTDqSBlZmZlY3R1w6llIGxlIDI4IGp1aW4gMjAxMsKgOyBxdWUgbGUgY29tcHRhYmxlIGVuIGEgYWNjdXPDqSByw6ljZXB0aW9uIGxlIDI5wqBqdWluwqAyMDEywqA7IHF1ZSBsZXMgaW50w6lyw6p0cyBkb2l2ZW50IGRvbmMgY291cmlyIMOgIGNvbXB0ZXIgZGUgY2V0dGUgZGVybmnDqHJlIGRhdGXCoDsKUGFyIGNlcyBtb3RpZnMsCk0uwqBZIGVzdCBjb25zdGl0dcOpIGTDqWJpdGV1ciBlbnZlcnMgbOKAmUV0YXQgZGVzIHNvbW1lcyBmaWd1cmFudCBjaS1kZXNzb3VzwqA6Ci3CoHZpbmd0IHF1YXRyZSBtaWxsZSBjaW5xIGNlbnQgcXVhdHJlIHZpbmd0IGRvdXplIGV1cm9zIGV0IHF1aW56ZSBjZW50aW1lcyAoMjTCoDU5MiwxNcKg4oKsKSBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNywgYXVnbWVudMOpIGRlcyBpbnTDqXLDqnRzIGRlIGRyb2l0IMOgIGNvbXB0ZXIgZHXCoDI5wqBqdWluwqAyMDEywqA7Ci3CoHZpbmd0IHF1YXRyZSBtaWxsZSBuZXVmIGNlbnQgcXVhdHJlIHZpbmd0IHNpeCBldXJvcyBldCBzb2l4YW50ZSBkaXggY2VudGltZXMgKDI0wqA5ODYsNzDCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcsIGF1Z21lbnTDqSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1IDI5wqBqdWluwqAyMDEywqA7Ci3CoHNlaXplIG1pbGxlIHNlcHQgY2VudCB0cmVudGUgc2l4IGV1cm9zIGV0IHRyZW50ZSBxdWF0cmUgY2VudGltZXMgKDE2wqA3MzYsMzTCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDgsIGF1Z21lbnTDqSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1IDI5wqBqdWluwqAyMDEywqA7Ci3CoHF1aW56ZSBtaWxsZSB0cm9pcyBjZW50IHNvaXhhbnRlIGV0IHVuIGV1cm9zIGV0IHF1YXRyZSB2aW5ndCBodWl0IGNlbnRpbWVzICgxNcKgMzYxLDg4wqDigqwpIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA3LCBhdWdtZW50w6kgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOcKganVpbsKgMjAxMsKgOyAKLcKgcXVpbnplIG1pbGxlIHF1YXRyZSBjZW50IHZpbmd0IGRldXggZXVyb3MgZXQgcXVhcmFudGUgY2VudGltZXMgKDE1wqA0MjIsNDDCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcsIGF1Z21lbnTDqSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1IDI5wqBqdWluwqAyMDEywqA7IAotwqBxdWFyYW50ZSBodWl0IG1pbGxlIGNpbnF1YW50ZSBjaW5xIGV1cm9zIGV0IHZpbmd0IGh1aXQgY2VudGltZXMgKDQ4wqAwNTUsMjjCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcsIGF1Z21lbnTDqSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1IDI5wqBqdWluwqAyMDEywqA7Ci3CoHRyZW50ZSBtaWxsZSBxdWF0cmUgY2VudCB0cmVudGUgdHJvaXMgZXVyb3MgZXQgc29peGFudGUgaHVpdCBjZW50aW1lcyAoMzDCoDQzMyw2OCDigqwpIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA4LCBhdWdtZW50w6kgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOcKganVpbsKgMjAxMi4KQ2hhcmdlIG7CsMKgNSBkdSByw6lxdWlzaXRvaXJlIDIwMTItNDAgUlEtREIKQSAtIExlcyBmYWl0cwpBdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNwpDb25zaWTDqXJhbnQgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUgcXVlLCBzdXIgbWFuZGF0IG7CsMKgMjMxNSDDqW1pcyBsZSAyNiBub3ZlbWJyZSAyMDA3LCBsZSBjb21wdGFibGUgYXZhaXQgIHBhecOpLCBhdSBwcm9maXQgZGUgbOKAmWVudHJlcHJpc2UgwqvCoE1hdHRhbGlhwqDCuywgbGEgc29tbWUgdG90YWxlIGRlIDTCoDczMyw0NsKg4oKsICg0wqA0ODYsNzDCoEhUKSwgY29ycmVzcG9uZGFudCDDoCBkZXMgdHJhdmF1eCBkZSByZXN0YXVyYXRpb24gZGUgZmHDp2FkZXMgZGUgbOKAmWjDtHRlbCBIdWdlciBkZSBWZXJuZXZlbGxlIMOgIExhIEZsw6hjaGUgOwpDb25zaWTDqXJhbnQgcXXigJnDoCBs4oCZYXBwdWkgZHUgbWFuZGF0IG7CsMKgMjMxNSwgbmUgZmlndXJhaWVudCBxdWUgbGEgc2ltcGxlIGZhY3R1cmUgbsKwwqAyNTM3IGR1IDcgbm92ZW1icmUgMjAwNywgcmV2w6p0dWUgZGUgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCuywgbOKAmW9yZHJlIGRlIHNlcnZpY2UgbsKwwqAxIGR1IDEzIGTDqWNlbWJyZSAyMDA2LCBhZHJlc3PDqSBwYXIgbGEgZGlyZWN0aW9uIHLDqWdpb25hbGUgZGVzIGFmZmFpcmVzIGN1bHR1cmVsbGVzIGRlcyBQYXlzIGRlIExvaXJlIMOgIGxhIHNvY2nDqXTDqSBldCBsZSBkZXZpcyBlc3RpbWF0aWYgbsKwwqAzNDAxIGR1IDI1wqBvY3RvYnJlwqAyMDA2wqAgOwpDb25zaWTDqXJhbnQgcXVlIGNlIG1hbmRhdCBu4oCZYSBwYXMgZmFpdCBs4oCZb2JqZXQgZGUgc2lnbmF0dXJlIGRlIGxhIHBhcnQgZGUgbOKAmW9yZG9ubmF0ZXVyIGRlIGxhIGTDqXBlbnNlLCBsZSBkaXJlY3RldXIgcsOpZ2lvbmFsIGRlcyBhZmZhaXJlcyBjdWx0dXJlbGxlcywgcGFyIGTDqWzDqWdhdGlvbiBkdSBwcsOpZmV0IGRlIHLDqWdpb24sIG9yZG9ubmF0ZXVyIHNlY29uZGFpcmUgOyAKQ29uc2lkw6lyYW50IHF14oCZZW4gbOKAmWFic2VuY2UgZGUgY2V0dGUgc2lnbmF0dXJlLCBsZSBjb21wdGFibGUgbmUgcG91dmFpdCBuaSB2w6lyaWZpZXIgbGEgcXVhbGl0w6kgZGUgbOKAmW9yZG9ubmF0ZXVyLCBuaSBz4oCZYXNzdXJlciBkZSBzb24gaW5zdHJ1Y3Rpb24gZGUgcGF5ZXIgbGEgZMOpcGVuc2UsIG5pIGdhcmFudGlyIGxhIG1pc2UgZW4gamV1IGRlcyByZXNwb25zYWJpbGl0w6lzIHByb3ByZXMgw6AgbOKAmW9yZG9ubmF0ZXVywqA7CkLCoC3CoExlcyB0ZXh0ZXMgZXQgbGV1ciBhcHBsaWNhdGlvbgpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZHUgcGFyYWdyYXBoZSA0LjE0IGRlIGzigJlhbm5leGUgZGUgbGEgY2lyY3VsYWlyZSBkdSBtaW5pc3RyZSBkdSBidWRnZXQgZHUgMzAgc2VwdGVtYnJlIDIwMDMgcmVsYXRpdmUgw6AgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGRlcyBkw6lwZW5zZXMgZGUgbOKAmUV0YXQgZXQgZGUgbOKAmWluc3RydWN0aW9uIG7CsMKgMDMtMDYwLUIgZHUgMTcgbm92ZW1icmUgMjAwMyBzdXN2aXPDqWVzLCDCq8KgbGUgY29tcHRhYmxlIFvigKZdIGRvaXQgYXUgc3RhZGUgZHUgcGFpZW1lbnQgc+KAmWFzc3VyZXIgZGUgbGEgcXVhbGl0w6kgZOKAmW9yZG9ubmF0ZXVyIG91IGRlIGTDqWzDqWdhdGFpcmUgZGUgbOKAmW9yZG9ubmF0ZXVyLCBkdSBzaWduYXRhaXJlIGRlIGzigJlvcmRvbm5hbmNlIG91IGR1IG1hbmRhdCBkZSBwYWllbWVudMKgOyBxdWUsIGRhbnMgY2UgY2FkcmUsIGxlIGNvbnRyw7RsZSBkdSBjb21wdGFibGUgc+KAmWVmZmVjdHVlIMOgIGzigJlhaWRlIGRlcyBhcnLDqnTDqXMgZGUgbm9taW5hdGlvbiBkZXMgb3Jkb25uYXRldXJzIGV0IGRlIGTDqWzDqWdhdGlvbsKgOyBxdeKAmcOgIGNlIHRpdHJlLCBpbCBkb2l0IGRpc3Bvc2VyIGRlcyBzcMOpY2ltZW5zIGRlIHNpZ25hdHVyZXMgZGVzIG9yZG9ubmF0ZXVycyBldCBkZSBsZXVycyBkw6lsw6lndcOpcyBwb3VyIG1lbmVyIMOgIGJpZW4gc2VzIGNvbnRyw7RsZXPCoMK7wqA7IApBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgMTIgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBxdWUgwqvCoGxlcyBjb21wdGFibGVzIHNvbnQgdGVudXMgZOKAmWV4ZXJjZXIgWy4uLl0gQi4g4oCTIMKrwqBlbiBtYXRpw6hyZSBkZSBkw6lwZW5zZXMsIGxlIGNvbnRyw7RsZSA6IGRlIGxhIHF1YWxpdMOpIGRlIGzigJlvcmRvbm5hdGV1ciBvdSBkZSBzb24gZMOpbMOpZ3XDqSBbLi4uXSDCu8KgOyAKQXR0ZW5kdSBxdeKAmWVuIGzigJlhYnNlbmNlIGRlIHNpZ25hdHVyZSwgbGUgY29tcHRhYmxlIGF1cmFpdCBkb25jIGTDuyBzdXNwZW5kcmUgbGUgcGFpZW1lbnQgZHUgbWFuZGF0IG7CsMKgMjMxNSBldCBlbiBpbmZvcm1lciBs4oCZb3Jkb25uYXRldXIgZW4gYXBwbGljYXRpb24gZGUgbCdhcnRpY2xlIDM3IGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIsIHByw6ljaXTDqcKgOyAKQXR0ZW5kdSBxdeKAmWF1eCB0ZXJtZXMgZHUgcGFyYWdyYXBoZSBWSUlJLCBsZXMgaW50w6lyw6p0cyBhdSB0YXV4IGzDqWdhbCBjb3VyZW50IMKrwqDDoMKgY29tcHRlciBkdSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBjb21wdGFibGVzIHB1YmxpY3PCoMK7wqA7CkF0dGVuZHUgcXXigJllbiBs4oCZZXNww6hjZSwgbGUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSAgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIGVzdCBsYSBub3RpZmljYXRpb24gw6AgTS7CoFkgZHUgcsOpcXVpc2l0b2lyZcKgZHUgbWluaXN0w6hyZSBwdWJsaWMgOyBxdWUgY2V0dGUgbm90aWZpY2F0aW9uIGEgw6l0w6kgZWZmZWN0dcOpZSBsZSAyOCBqdWluIDIwMTLCoDsgcXVlIGxlIGNvbXB0YWJsZSBlbiBhIGFjY3Vzw6kgcsOpY2VwdGlvbiBsZSAyOSBqdWluIMKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoMKgY29tcHRlciBkZSBjZXR0ZSBkZXJuacOocmUgZGF0ZcKgOwpQYXIgY2VzIG1vdGlmcywKTS7CoFkgZXN0IGNvbnN0aXR1w6kgZMOpYml0ZXVyIGVudmVycyBs4oCZRXRhdCBkZSBsYSBzb21tZSBkZSBxdWF0cmUgbWlsbGUgc2VwdCBjZW50IHRyZW50ZSB0cm9pcyBldXJvcyBldCBxdWFyYW50ZSBzaXggY2VudGltZXMgKDTCoDczMyw0NsKg4oKsKSBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2XCoDIwMDcsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOSBqdWluwqAyMDEyLgpDaGFyZ2UgbsKwwqAxMCBkdSByw6lxdWlzaXRvaXJlIDIwMTItNDAgUlEtREIKQSAtIExlcyBmYWl0cwpBdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNwpDb25zaWTDqXJhbnQgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUgcXVlLCBzdXIgbWFuZGF0IG7CsMKgNTQxIMOpbWlzIGxlIDUgbm92ZW1icmUgMjAwNywgbGUgY29tcHRhYmxlIGF2YWl0IHBhecOpLCBzdXIgbGUgcHJvZ3JhbW1lIDIwNiDCq8KgU8OpY3VyaXTDqSBldCBxdWFsaXTDqSBzYW5pdGFpcmVzIGRlIGzigJlhbGltZW50YXRpb27CoMK7IGR1IG1pbmlzdMOocmUgZGUgbOKAmWFncmljdWx0dXJlIGV0IGRlIGxhIHDDqmNoZSwgYXUgcsOpZ2lzc2V1ciBkZSBs4oCZSW5zdGl0dXQgZMOpcGFydGVtZW50YWwgZOKAmWFuYWx5c2UgZXQgZGUgY29uc2VpbCAoSURBQyksIGxhIHNvbW1lIGRlIDbCoDkwMiwyNcKg4oKsLCBqdXN0aWZpw6llIHBhciBsYSBmYWN0dXJlIG7CsMKgUjEyNDI0IGR1IDI1wqBvY3RvYnJlwqAyMDA3ICgxw6hyZcKgcGFnZS80KSBldCBsYSBsZXR0cmUgZGUgbOKAmUlEQUMgw6AgbGEgZGlyZWN0aW9uIGRlcyBzZXJ2aWNlcyB2w6l0w6lyaW5haXJlcyAoRFNWKSBkdSAyNCBvY3RvYnJlIDIwMDcgaW5kaXF1YW50IGxlIGTDqXRhaWwgZGVzIGFuYWx5c2VzIGVmZmVjdHXDqWVzIGVuIHNlcHRlbWJyZSAyMDA3wqA7IApDb25zaWTDqXJhbnQgcXVlLCBzdXIgbWFuZGF0IG7CsMKgNTk0IGR1IDIwIG5vdmVtYnJlIDIwMDcsIGxlIGNvbXB0YWJsZSBhwqBwYXnDqSBzdXIgbGUgcHJvZ3JhbW1lIDIwNiDCq8KgU8OpY3VyaXTDqSBldCBxdWFsaXTDqSBzYW5pdGFpcmVzIGRlIGzigJlhbGltZW50YXRpb27CoMK7IGR1IG1pbmlzdMOocmUgZGUgbOKAmWFncmljdWx0dXJlIGV0IGRlIGxhIHDDqmNoZSwgYXUgcsOpZ2lzc2V1ciBkZSBs4oCZSURBQywgbGEgc29tbWUgZGUgNMKgMDUxLDI1wqDigqwsIGp1c3RpZmnDqWUgcGFyIGxhIGZhY3R1cmUgbsKwwqBSMTIzODAgZHUgMTkgb2N0b2JyZSAyMDA3IGRlIGzigJlJREFDICgxw6hyZcKgcGFnZS80KSBldCBsZSBkw6ljb21wdGUgbsKwwqAyMDA3MTMwMzAgZHUgMTIgbm92ZW1icmUgMjAwNyBkdSBsYWJvcmF0b2lyZSBkw6lwYXJ0ZW1lbnRhbCBk4oCZYW5hbHlzZXMsIGRlIG1vbnRhbnRzIHJlc3BlY3RpZnMgZGUgNzIxLDI1wqDigqwgZXQgM8KgMzMwwqDigqwsIGF5YW50IGZhaXQgbOKAmW9iamV0IGRlcyB0aXRyZXMgZXjDqWN1dG9pcmVzIG5vc8KgMzA5MiBldCA3MTUwNCBkZXMgMjbCoG9jdG9icmUgZXQgMTIgbm92ZW1icmUgMjAwN8KgOwpDb25zaWTDqXJhbnQgcXVlLCBzdXIgbWFuZGF0IG7CsMKgNTk1IGR1IDIwIG5vdmVtYnJlIDIwMDcsIGxlIGNvbXB0YWJsZSBhIHBhecOpLCBzdXIgbGUgcHJvZ3JhbW1lwqAyMDYgwqvCoFPDqWN1cml0w6kgZXQgcXVhbGl0w6kgc2FuaXRhaXJlcyBkZSBs4oCZYWxpbWVudGF0aW9uwqDCuyBkdSBtaW5pc3TDqHJlIGRlIGzigJlhZ3JpY3VsdHVyZSBldCBkZSBsYSBww6pjaGUsIGxhIHNvbW1lIGRlIDk1Niw4MMKg4oKsLCBqdXN0aWZpw6llIHBhciBsYSBmYWN0dXJlIG7CsMKgODUzMDcgZHUgMTLCoG5vdmVtYnJlwqAyMDA3wqBkZXMgbGFib3JhdG9pcmVzIMKrwqBIdW1lYXXCoMK7wqA7CkNvbnNpZMOpcmFudCBxdWUsIHN1ciBtYW5kYXQgbsKwwqA2MTkgZHUgMjYgbm92ZW1icmUgMjAwNywgbGUgY29tcHRhYmxlIGEgcGF5w6ksIHN1ciBsZSBwcm9ncmFtbWUgMjA2IMKrwqBTw6ljdXJpdMOpIGV0IHF1YWxpdMOpIHNhbml0YWlyZXMgZGUgbOKAmWFsaW1lbnRhdGlvbsKgwrsgZHUgbWluaXN0w6hyZSBkZSBs4oCZYWdyaWN1bHR1cmUgZXQgZGUgbGEgcMOqY2hlLCBhdSByw6lnaXNzZXVyIGRlIGzigJlJREFDLCBsYSBzb21tZSBkZSAyMsKgODY1LDA0wqDigqwsIGp1c3RpZmnDqWUgcGFyIGxhIGZhY3R1cmUgbsKwwqBSMTI1NzUgZHUgMTUgbm92ZW1icmUgMjAwNyAoMcOocmXCoHBhZ2UvMTIpIGV0IGxhIGxldHRyZSBkdSBtw6ptZSBqb3VyIGRlIGzigJlJREFDIMOgIGxhIERTViBpbmRpcXVhbnQgbGUgZMOpdGFpbCBkZXMgYW5hbHlzZXMgZWZmZWN0dcOpZXMgZW4gbm92ZW1icmUgMjAwNyAocGnDqGNlwqAxYcKgZXQgMTBkKcKgOwpDb25zaWTDqXJhbnQgcXVlIGxhIG1lbnRpb24gwqvCoHNlcnZpY2UgZmFpdMKgwrsgbuKAmWVzdCBhcHBvc8OpZSBuaSBzdXIgbGVzIG1hbmRhdHMgcHLDqWNpdMOpcyBuaSBzdXIgbGVzIHBpw6hjZXMgw6AgbOKAmWFwcHVpIDsKQiAtIExlcyB0ZXh0ZXMgZXQgbGV1ciBhcHBsaWNhdGlvbgpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZHUgcGFyYWdyYXBoZSA0LjE0IGRlIGzigJlhbm5leGUgZGUgbGEgY2lyY3VsYWlyZSBkdSBtaW5pc3RyZSBkdSBidWRnZXQgZHUgMzAgc2VwdGVtYnJlIDIwMDMgcmVsYXRpdmUgw6AgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGRlcyBkw6lwZW5zZXMgZGUgbOKAmUV0YXQgZXQgZGUgbOKAmWluc3RydWN0aW9uIG7CsMKgMDMtMDYwLUIgZHUgMTfCoG5vdmVtYnJlwqAyMDAzIHN1c3Zpc8OpZXMsIGxhIGNlcnRpZmljYXRpb24gZHUgc2VydmljZSBmYWl0IGVzdCBtYXTDqXJpYWxpc8OpZSBwYXIgbGEgwqvCoG1lbnRpb24gZHUgc2VydmljZSBmYWl0IGF2ZWMgc2lnbmF0dXJlIGRlIGzigJlvcmRvbm5hdGV1ciBvdSBkZSBzb24gcmVwcsOpc2VudGFudCBoYWJpbGl0w6kgw6AgY2V0IGVmZmV0LCBzYXVmIHNpIGNlbGxlLWNpIGVzdCBwb3J0w6llIHN1ciBs4oCZb3Jkb25uYW5jZSBvdSBsZSBtYW5kYXQgZGUgcGFpZW1lbnTCoMK7IG91wqDCq8KgY2VydGlmaWNhdCBkZSBzZXJ2aWNlIGZhaXQgw6l0YWJsaSBwYXIgbOKAmW9yZG9ubmF0ZXVyIG91IHNvbiByZXByw6lzZW50YW50IGhhYmlsaXTDqSDDoCBjZXQgZWZmZXTCoMK7IDsKQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDEyIGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgcXVlIMKrwqBsZXMgY29tcHRhYmxlcyBzb250IHRlbnVzIGTigJlleGVyY2VyIFsuLi5dIEIuIC0gRW4gbWF0acOocmUgZGUgZMOpcGVuc2VzLCBsZSBjb250csO0bGUgOiBbLi4uXSA7IERlIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZcKgwrvCoDsgcXVlIGzigJlhcnRpY2xlIDEzIGR1IG3Dqm1lIGTDqWNyZXQgcHLDqWNpc2UgcXXigJllbiDCq8KgY2UgcXVpIGNvbmNlcm5lIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSwgbGUgY29udHLDtGxlIHBvcnRlIHN1ciA6IFsuLi5dIGxhIGp1c3RpZmljYXRpb24gZHUgc2VydmljZSBmYWl0wqBbLi4uXSBldCBsYSBwcm9kdWN0aW9uIGRlcyBqdXN0aWZpY2F0aW9uc8KgwrvCoDsgbm90YW1tZW50IGxlIGTDqWZhdXQgZGUgbGEgbWVudGlvbiBleHByZXNzZSBkdSBzZXJ2aWNlIGZhaXQgc3VyIGxlcyBtYW5kYXRzIG91IGxlcyBwacOoY2VzIGpvaW50ZXMgw6AgbGV1ciBhcHB1acKgOwpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGR1IDIzIGbDqXZyaWVyIDE5NjMgc3Vzdmlzw6llLCBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIHNlIHRyb3V2ZSBlbmdhZ8OpZSBkw6hzIGxvcnNxdSd1bmUgZMOpcGVuc2UgYSDDqXTDqSBpcnLDqWd1bGnDqHJlbWVudCBwYXnDqWXCoDsKQXR0ZW5kdSBxdeKAmWF1eCB0ZXJtZXMgZHUgcGFyYWdyYXBoZSBWSUlJLCBsZXMgaW50w6lyw6p0cyBhdSB0YXV4IGzDqWdhbCBjb3VyZW50IMKrwqDDoMKgY29tcHRlciBkdSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBjb21wdGFibGVzIHB1YmxpY3PCoMK7wqA7IApBdHRlbmR1IHF14oCZZW4gbOKAmWVzcMOoY2UsIGxlIHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIGVzdCBsYSBub3RpZmljYXRpb24gw6AgTS7CoFkgZHUgcsOpcXVpc2l0b2lyZcKgZHUgbWluaXN0w6hyZSBwdWJsaWMgOyBxdWUgY2V0dGUgbm90aWZpY2F0aW9uIGEgw6l0w6kgZWZmZWN0dcOpZSBsZSAyOCBqdWluIDIwMTLCoDsgcXVlIGxlIGNvbXB0YWJsZSBlbiBhIGFjY3Vzw6kgcsOpY2VwdGlvbiBsZSAyOcKganVpbsKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoMKgY29tcHRlciBkZSBjZXR0ZSBkZXJuacOocmUgZGF0ZcKgOwpQYXIgY2VzIG1vdGlmcywKTS7CoFkgZXN0IGNvbnN0aXR1w6kgZMOpYml0ZXVyIGVudmVycyBs4oCZRXRhdCBkZSBsYSBzb21tZSBkZSB0cmVudGUgcXVhdHJlIG1pbGxlIHNlcHQgY2VudCBzb2l4YW50ZSBxdWluemUgZXVyb3MgZXQgdHJlbnRlIHF1YXRyZSBjZW50aW1lcyAoMzTCoDc3NSwzNMKg4oKsKSBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNywgYXVnbWVudMOpZSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1IDI5IGp1aW7CoDIwMTIuCkNoYXJnZSBuwrDCoDExIGR1IHLDqXF1aXNpdG9pcmUgMjAxMi00MCBSUS1EQgpBwqAtIExlcyBmYWl0cwpBdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNwpDb25zaWTDqXJhbnQgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUgcXVlLCBzdXIgbWFuZGF0IG7CsMKgNjc5IMOpbWlzIGxlIDcgZMOpY2VtYnJlIDIwMDcsIGxlIGNvbXB0YWJsZSBhdmFpdCBwYXnDqSwgc3VyIGxlIHByb2dyYW1tZcKgMjI4IMKrwqBWZWlsbGUgZXQgc8OpY3VyaXTDqSBzYW5pdGFpcmVzwqDCuyBkdSBtaW5pc3TDqHJlIGRlIGxhIHNhbnTDqSBldCBkZXMgc29saWRhcml0w6lzLCBhdSBwcm9maXQgZHUgQ29uc2VydmF0b2lyZSBuYXRpb25hbCBkZXMgYXJ0cyBldCBtw6l0aWVycyAoQ05BTSksIGxhIHNvbW1lIGRlIDQwwqA5NTDCoOKCrCwganVzdGlmacOpZSBwYXIgbGEgc2ltcGxlIGZhY3R1cmUgbsKwwqAyNzQ2IGR1IDQgZMOpY2VtYnJlIDIwMDcgcG9ydGFudCByw6lmw6lyZW5jZSDDoCBsYSBjb252ZW50aW9uIG7CsMKgMjAwNS8yMDA2LzI2MzUgZXQgY29uY2VybmFudCBkZXMgZm9ybWF0aW9ucyBhdSByaXNxdWUgZGUgcGFuZMOpbWllIGdyaXBwYWxlIGRpc3BlbnPDqWVzIGR1cmFudCBsYSBww6lyaW9kZSBkdSA0IG9jdG9icmUgYXUgMjYgbm92ZW1icmUgMjAwN8KgOyAKQ29uc2lkw6lyYW50IHF1ZSwgbG9ycyBkZSBs4oCZaW5zdHJ1Y3Rpb24sIGxlIGNvbXB0YWJsZSBhIHByb2R1aXQgYSBwb3N0ZXJpb3JpIGxhIGNvcGllIGR1IGNhaGllciBkZXMgY2xhdXNlcyBwYXJ0aWN1bGnDqHJlcywgdmFsYW50IGFjdGUgZOKAmWVuZ2FnZW1lbnQgZHUgbWFyY2jDqSBuwrDCoDQ4LCBjb25jbHUgZW50cmUgbGEgZGlyZWN0aW9uIHLDqWdpb25hbGUgZGVzIGFmZmFpcmVzIHNhbml0YWlyZXMgZXQgc29jaWFsZXMgZXQgbGUgQ05BTSwgcmVsYXRpZiDDoCBsYSBjYW1wYWduZSBkZSBmb3JtYXRpb24gZGUgN8KgMDAwwqBwcm9mZXNzaW9ubmVscyBkZSBzYW50w6kgOyBsZSBjYWhpZXIgZGVzIGNoYXJnZXMgcG91ciBsYSBnw6luw6lyYWxpc2F0aW9uIGRlIGxhIGNhbXBhZ25lIG5hdGlvbmFsZSBkZSBmb3JtYXRpb24gc3VyIGxhIGdyaXBwZSBhdmlhaXJlIGTigJlhdnJpbCAyMDA2wqA7IGxhIGxldHRyZSBkZSBs4oCZYWdlbmNlIHLDqWdpb25hbGUgZGUgc2FudMOpIGF1IHRyw6lzb3JpZXItcGF5ZXVyIGfDqW7DqXJhbCBhdHRlc3RhbnQgcXVlIMKrwqBsYSBmYWN0dXJlIGEgw6l0w6kgcGF5w6llIGF1IHRpdHJlIGR1IG1hcmNow6kgbsKwIDQ4IGV0IG5vbiBkZSBsYSBjb252ZW50aW9uIGNpdMOpZSBkZSBtYW5pw6hyZSBlcnJvbsOpZS4gQ2V0dGUgY29udmVudGlvbiBu4oCZZXhpc3RlIHBhc8KgWy4uLl3CuyA7CkNvbnNpZMOpcmFudCBxdWUgbGUgbWFyY2jDqSBleHBpcmFpdCBsZSAzMSBhb8O7dCAyMDA3wqA7IHF14oCZaWwgbuKAmWF2YWl0IMOpdMOpIHByb2xvbmfDqSBwYXIgYXVjdW4gYXZlbmFudMKgOyBxdWUgbGVzIHByZXN0YXRpb25zIG9udCAgw6l0w6kgZWZmZWN0dcOpZXMgcG9zdMOpcmlldXJlbWVudCDDoCBsYSBkYXRlIGTigJnDqWNow6lhbmNlIGRlIGNlIG1hcmNow6ksIGRvbmMgcXVlIGxlIGNvbXB0YWJsZSBhIHBhecOpIGxhIGZhY3R1cmUgZW4gbOKAmWFic2VuY2UgZGUgbWFyY2jDqcKgOwpDb25zaWTDqXJhbnQgcXVlIGRhbnMgc2VzIG9ic2VydmF0aW9ucyBlbiByw6lwb25zZSBhdSByw6lxdWlzaXRvaXJlLCBkYXTDqWVzIGR1IDI0wqBvY3RvYnJlwqAyMDEyLCBNLsKgWSBu4oCZYXBwb3J0ZSBhdWN1biDDqWzDqW1lbnQgZGUgcsOpcG9uc2Ugc3VzY2VwdGlibGUgZGUgZMOpZ2FnZXIgc2EgcmVzcG9uc2FiaWxpdMOpIHBvdXIgY2V0dGUgb256acOobWUgY2hhcmdlIDsgCkLCoC0gTGVzIHRleHRlcyBldCBsZXVyIGFwcGxpY2F0aW9uCkF0dGVuZHUgcXXigJllbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSAxMiBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlIDE5NjIgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgcXVlIMKrwqBsZXMgY29tcHRhYmxlcyBzb250IHRlbnVzIGTigJlleGVyY2VyIFsuLi5dIEIuIC0gRW4gbWF0acOocmUgZGUgZMOpcGVuc2VzLCBsZSBjb250csO0bGUgOiBbLi4uXSA7IERlwqBsYSB2YWxpZGl0w6kgZGUgbGEgY3LDqWFuY2XCoMK7wqA7IHF1ZSBs4oCZYXJ0aWNsZSAxMyBkdSBtw6ptZSBkw6ljcmV0IHByw6ljaXNlIHF14oCZZW4gwqvCoGNlIHF1aSBjb25jZXJuZSBsYSB2YWxpZGl0w6kgZGUgbGEgY3LDqWFuY2UsIGxlIGNvbnRyw7RsZSBwb3J0ZSBzdXIgOiBbLi4uXSBsYSBwcm9kdWN0aW9uIGRlcyBqdXN0aWZpY2F0aW9uc8KgwrvCoDsgCkF0dGVuZHUgcXXigJnDoCBkw6lmYXV0IGRlIHBpw6hjZSBqdXN0aWZpY2F0aXZlIHZhbGlkZSwgbGUgY29tcHRhYmxlIGF1cmFpdCBkw7sgc3VzcGVuZHJlIGxlIHBhaWVtZW50IGR1IG1hbmRhdCBuwrDCoDY3OSBldCBlbiBpbmZvcm1lciBs4oCZb3Jkb25uYXRldXIgZW4gYXBwbGljYXRpb24gZGUgbCdhcnRpY2xlwqAzNyBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyLCBwcsOpY2l0w6nCoDsKQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkdSAyMyBmw6l2cmllciAxOTYzIHN1c3Zpc8OpZSwgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBzZSB0cm91dmUgZW5nYWfDqWUgZMOocyBsb3JzcXUndW5lIGTDqXBlbnNlIGEgw6l0w6kgaXJyw6lndWxpw6hyZW1lbnQgcGF5w6llwqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGR1IHBhcmFncmFwaGUgVklJSSwgbGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWwgY291cmVudCDCq8Kgw6AgY29tcHRlciBkdSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBjb21wdGFibGVzIHB1YmxpY3PCoMK7wqA7IApBdHRlbmR1IHF14oCZZW4gbOKAmWVzcMOoY2UsIGxlIHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIGVzdCBsYSBub3RpZmljYXRpb24gw6AgTS7CoFkgZHUgcsOpcXVpc2l0b2lyZSBkdSBtaW5pc3TDqHJlIHB1YmxpY8KgOyBxdWUgY2V0dGUgbm90aWZpY2F0aW9uIGEgw6l0w6kgZWZmZWN0dcOpZSBsZSAyOCBqdWluIDIwMTLCoDsgcXVlIGxlIGNvbXB0YWJsZSBlbiBhIGFjY3Vzw6kgcsOpY2VwdGlvbiBsZSAyOSBqdWluIMKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoCBjb21wdGVyIGRlIGNldHRlIGRlcm5pw6hyZSBkYXRlwqA7ClBhciBjZXMgbW90aWZzLApNLsKgWSBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIHF1YXJhbnRlIG1pbGxlIG5ldWYgY2VudCBjaW5xdWFudGUgZXVyb3MgKDQwwqA5NTDCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOcKganVpbsKgMjAxMi4KQ2hhcmdlcyBuwrDCoDEyIGV0IDEzIGR1IHLDqXF1aXNpdG9pcmUgMjAxMi00MCBSUS1EQgpBwqAtIExlcyBmYWl0cwpDaGFyZ2UgbsKwwqAxMiwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDgKQ29uc2lkw6lyYW50IHF1ZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBkYW5zIHNvbiByw6lxdWlzaXRvaXJlLCBxdWUsIHN1ciBtYW5kYXRzIG5vcyA3MjQgZXQgODIzIGRlcyAyNyBub3ZlbWJyZSBldCA4wqBkw6ljZW1icmXCoDIwMDgsIGxlIGNvbXB0YWJsZSBhdmFpdCBwYXnDqSwgc3VyIGxlIHByb2dyYW1tZSBuwrDCoDE1NSDCq8KgQ29uY2VwdGlvbiwgZ2VzdGlvbiBldCDDqXZhbHVhdGlvbiBkZXMgcG9saXRpcXVlcyBkZSBs4oCZZW1wbG9pIGV0IGR1IHRyYXZhaWzCoMK7IGR1IG1pbmlzdMOocmUgZHUgdHJhdmFpbCwgZGVzIHJlbGF0aW9ucyBzb2NpYWxlcyBldCBkZSBsYSBzb2xpZGFyaXTDqSwgw6AgaGF1dGV1ciByZXNwZWN0aXZlbWVudCBkZSAxNMKgMzQ2LDc2wqDigqwgZXQgMTDCoDMyMyw5MMKg4oKsLCBzb2l0IGF1IHRvdGFsIDI0wqA2NzAsNjbCoOKCrCwgZGV1eCBkw6lwZW5zZXMgZGUgZm9uY3Rpb25uZW1lbnQgZGUgbGEgZGlyZWN0aW9uIHLDqWdpb25hbGUgZHUgdHJhdmFpbCwgZGUgbOKAmWVtcGxvaSBldCBkZSBsYSBmb3JtYXRpb24gcHJvZmVzc2lvbm5lbGxlIChEUlRFRlApIDsKQ29uc2lkw6lyYW50IHF14oCZw6AgbOKAmWFwcHVpIGR1IG1hbmRhdCBuwrDCoDcyNCwgZmlndXJhaXQgbGEgc2ltcGxlIGZhY3R1cmUgbsKwwqA2MSBkdSAyNMKgbm92ZW1icmXCoDIwMDggZGUgbGEgc29jacOpdMOpIMKrwqBPa2FwYXJrYcKgwrssIHBvcnRhbnQgbGEgcsOpZsOpcmVuY2UgYXUgZGV2aXMgbsKwwqBBU1MtMDgtMTEtMDExMy1ELCBjb25jZXJuYW50IGxhIGNvbmNlcHRpb24gZXQgbGEgcsOpYWxpc2F0aW9uIGTigJl1bmUgYnJvY2h1cmUgOwpDb25zaWTDqXJhbnQgcXVlLCBsb3JzIGRlIGzigJlpbnN0cnVjdGlvbiwgbGUgY29tcHRhYmxlIGEgdHJhbnNtaXMgYSBwb3N0ZXJpb3JpIGxhIGNvbnZlbnRpb24gZGUgcGFydGVuYXJpYXQgZW50cmUgbGEgRFJURUZQIGV0IGzigJlBU1NFRElDIGRlcyBQYXlzIGRlIGxhIExvaXJlIGR1IDTCoG5vdmVtYnJlwqAyMDA4LCBsYSBjb3BpZSBkdSBkZXZpcyBuwrDCoEFTUy0wOC0xMS0wMTEzLUQgZHUgMTcgbm92ZW1icmUgMjAwOCByZXbDqnR1IGRlIGzigJlhY2NlcHRhdGlvbiBkZSBs4oCZQVNTRURJQywgdW5lIG5vdGUgZHUgMjUganVpbiAyMDEwIGRlIGxhIGRpcmVjdGlvbiByw6lnaW9uYWxlIGRlcyBlbnRyZXByaXNlcywgZGUgbGEgY29uY3VycmVuY2UsIGRlIGxhIGNvbnNvbW1hdGlvbiwgZHUgdHJhdmFpbCBldCBkZSBs4oCZZW1wbG9pIChESVJFQ0NURSkgcHLDqWNpc2FudCBsZXMgbW9kYWxpdMOpcyBkdSBtYW5kYXRlbWVudMKgOwpDb25zaWTDqXJhbnQgcXXigJnDoCBs4oCZYXBwdWkgZHUgbWFuZGF0IG7CsMKgODIzLCBmaWd1cmFpdCBsYSBzaW1wbGUgZmFjdHVyZSBuwrDCoDE5ODY3NDI3OSBkdSAxNCBub3ZlbWJyZSAyMDA4IGRlIGxhIMKrwqBDQU1JRiBjb2xsZWN0aXZpdMOpc8KgwrssIHBvcnRhbnQgbGEgcsOpZsOpcmVuY2Ugw6AgbGEgY29tbWFuZGUgbsKwwqA1MzA4MzE5MjYxNDEsIGNvbmNlcm5hbnQgbOKAmWFjaGF0IGRlIGTDqWZpYnJpbGxhdGV1cnMgOwpDb25zaWTDqXJhbnQgcXVlLCBsb3JzIGRlIGzigJlpbnN0cnVjdGlvbiwgbGUgY29tcHRhYmxlIGEgdHJhbnNtaXMgYSBwb3N0ZXJpb3JpIGxhIGxldHRyZSBkZSBjb21tYW5kZSBkZSBsYSBEUlRFRlAgZHUgNiBub3ZlbWJyZSAyMDA4LCBhY2NvbXBhZ27DqWUgZHUgZGV2aXMgbsKwwqAxMDgzODYxMSByZXbDqnR1IGRlIGxhIG1lbnRpb24gwqvCoGJvbiBwb3VyIGFjY29yZMKgwrsgZXQgZGUgbGEgY29uZmlybWF0aW9uIHBhciBsYSBDQU1JRiBkZSBsYSBjb21tYW5kZSBuwrDCoDUzMDgzMTkyNjE0MSA7CkNoYXJnZSBuwrDCoDEzLCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOApDb25zaWTDqXJhbnQgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUsIHF1ZSwgc3VyIG1hbmRhdHMgbm9zIDc5LCA4NCBldCA4NiBkZXMgNSBldCAyNCBub3ZlbWJyZSAyMDA4LCBsZSBjb21wdGFibGUgYXZhaXQgcGF5w6ksIHN1ciBsZSBwcm9ncmFtbWUgbsKwwqAxMDQgwqsgSW50w6lncmF0aW9uIGV0IGFjY8OocyDDoCBsYSBuYXRpb25hbGl0w6kgZnJhbsOnYWlzZcKgwrsgZHUgbWluaXN0w6hyZSBkZSBs4oCZaW1taWdyYXRpb24sIGRlIGzigJlpbnTDqWdyYXRpb24sIGRlIGzigJlpZGVudGl0w6kgbmF0aW9uYWxlIGV0IGR1IGNvZMOpdmVsb3BwZW1lbnQsIMOgIGhhdXRldXIgcmVzcGVjdGl2ZW1lbnQgZGUgNDTCoDY5MCwyOMKg4oKsLCA1wqA3MjAsNTPCoOKCrCwgZXQgMzPCoDA5Miw2NsKg4oKsLCBzb2l0IGF1IHRvdGFsIDgzwqA1MDMsNDfCoOKCrCwgZGVzIGTDqXBlbnNlcyBkZSBmb25jdGlvbm5lbWVudCBkZSBsYSBzb3VzLWRpcmVjdGlvbiBkZXMgbmF0dXJhbGlzYXRpb25zIDsKQ29uc2lkw6lyYW50IHF14oCZw6AgbOKAmWFwcHVpIGR1IG1hbmRhdCBuwrDCoDc5IGR1IDUgbm92ZW1icmUgMjAwOCBmaWd1cmFpZW50IGxhIHNpbXBsZSBmYWN0dXJlIG7CsMKgRUY4MTAwMDYgZGUgbGEgc29jacOpdMOpIMKrwqBTTkVEVsKgwrsgZHUgMzAgb2N0b2JyZSAyMDA4LCBk4oCZdW4gbW9udGFudCBkZSA1wqA5NjgsNjLCoOKCrCwgcG9ydGFudCByw6lmw6lyZW5jZSDDoCBsYSBjb21tYW5kZSBuwrDCoDIwMDgtMTM4LCBtZW50aW9ubmFudCDCq8KgdHJhdmF1eCBzZWxvbiBkZXZpcyBuwrDCoDA4MDcxNDE1NiBhY2NlcHTDqSBsZSAzMMKganVpbGxldMKgMjAwOMKgwrvCoGV0IMKrwqByZW1wbGFjZW1lbnQgZHUgc3lzdMOobWUgZGUgZ2VzdGlvbiBkZSBjaGF1ZmZhZ2UgZXhpc3RhbnTCoMK7wqA7IGxhIHNpbXBsZSBmYWN0dXJlIG7CsMKgOTgzODczIGRlIGxhIHNvY2nDqXTDqSDCq8KgRVNJwqDCuyBkdSAxN8Kgb2N0b2JyZcKgMjAwOCwgZOKAmXVuIG1vbnRhbnQgZGUgMTHCoDkxOSwxMMKg4oKsLCBwb3J0YW50IHLDqWbDqXJlbmNlIMOgIGxhIGNvbW1hbmRlIG7CsMKgMjAwOC0xNjksIHJlbGF0aXZlIMOgIGxhIGZvdXJuaXR1cmUgZGUgZGl2ZXJzIG1hdMOpcmllbHMgaW5mb3JtYXRpcXVlc8KgOyBsYSBzaW1wbGUgZmFjdHVyZSBuwrAgUDA4MTAzMjk4IGRlIGxhIHNvY2nDqXTDqSDCq8KgRWNvbm9jb23CoMK7IGR1IDIzwqBvY3RvYnJlwqAyMDA4LCBk4oCZdW4gbW9udGFudCBkZSA5wqA5MzgsNzbCoOKCrCwgcG9ydGFudCByw6lmw6lyZW5jZSDDoCBsYSBjb21tYW5kZSBuwrDCoDIwMDgxNjgsIHJlbGF0aXZlIMOgIGxhIGZvdXJuaXR1cmUgZGUgbWF0w6lyaWVscyBpbmZvcm1hdGlxdWVzwqA7IGxhIHNpbXBsZSBmYWN0dXJlIG7CsMKgNTc4IGRlIGxhIHNvY2nDqXTDqSDCq8KgTWljaGVsIENhdWNoYXJkwqDCuyBkdSAyMMKgb2N0b2JyZcKgMjAwOCwgZOKAmXVuIG1vbnRhbnQgZGUgMTbCoDg2Myw2MMKg4oKsLCBwb3J0YW50IHLDqWbDqXJlbmNlIMOgIGxhIGNvbW1hbmRlIG7CsMKgMjAwOC0xOTgsIHJlbGF0aXZlIMOgIGxhIGZvdXJuaXR1cmUgZGUgYm9pdGVzIGRlIGNvbnNlcnZhdGlvbiBk4oCZYXJjaGl2ZXMgOwpDb25zaWTDqXJhbnQgcXVlLCBsb3JzIGRlIGzigJlpbnN0cnVjdGlvbiwgbGUgY29tcHRhYmxlIGEgdHJhbnNtaXMgYSBwb3N0ZXJpb3JpIGxhIGNvcGllIGR1IGRldmlzIG7CsMKgMDgwNzE0MTU2IGR1IDI4IGp1aWxsZXQgMjAwOCwgYWNjZXB0w6kgcGFyIGzigJlvcmRvbm5hdGV1ciBsZSAzMMKganVpbGxldMKgMjAwOCwgYW5ub3TDqWUgZHUgbsKwwqAyMDA4LTEzOCBkZSBsYSBjb21tYW5kZcKgOyBsYSBjb3BpZSBkZSBsYSBjb21tYW5kZSBuwrDCoDIwMDgtMTY5IGR1IDMwwqBzZXB0ZW1icmXCoDIwMDgsIGFwcHV5w6llIGRlIGRldmlzIMOpdGFibGlzIHBhciBsYSBzb2Npw6l0w6kgwqvCoEVTScKgwrsgbGVzIDI5wqBvY3RvYnJlwqAyMDA3IGV0IDI3wqBhb8O7dMKgMjAwOMKgOyBsYSBjb3BpZSBkZSBsYSBjb21tYW5kZSBuwrAgMjAwOC0xNjggZHUgMzAgc2VwdGVtYnJlIDIwMDgsIGFwcHV5w6llIGRlIGRldmlzIMOpdGFibGlzIHBhciBsYSBzb2Npw6l0w6kgwqvCoEVjb25vY29twqDCuyBlbiBzZXB0ZW1icmUgMjAwOMKgOyBsYSBjb3BpZSBkZSBsYSBjb21tYW5kZSBuwrAgMjAwOC0xOTggZHUgMTQgb2N0b2JyZSAyMDA4LCBhcHB1ecOpZSBkZSBs4oCZb2ZmcmUgZHUgMyBvY3RvYnJlIDIwMDggZGUgbGEgc29jacOpdMOpIMKrwqBNaWNoZWwgQ2F1Y2hhcmTCoMK7wqA7CkNvbnNpZMOpcmFudCBxdeKAmcOgIGzigJlhcHB1aSBkdSBtYW5kYXQgbsKwwqA4NCBkdSAyNMKgbm92ZW1icmXCoDIwMDgsIGZpZ3VyYWl0IGxhIHNpbXBsZSBmYWN0dXJlIG7CsMKgMTY3NTM0NSBkZSBsYSBzb2Npw6l0w6kgwqvCoEZyYW5rZWzCoMK7IGR1IDbCoG5vdmVtYnJlwqAyMDA4LCBk4oCZdW4gbW9udGFudCBkZSA1wqA3MjAsNTPCoOKCrCwgY29uY2VybmFudCBsYSBmb3Vybml0dXJlIGRlIGNoYXJpb3RzLCBtYXJjaGVwaWVkcyBldCBwb3J0ZS3DqXRpcXVldHRlc8KgOyAKQ29uc2lkw6lyYW50IHF1ZSwgbG9ycyBkZSBs4oCZaW5zdHJ1Y3Rpb24sIGxlIGNvbXB0YWJsZSBhIHRyYW5zbWlzIGEgcG9zdGVyaW9yaSBsYSBjb3BpZSBkZSBs4oCZb2ZmcmUgbsKwwqAxMDIyNDk3OSBkdSA2IG9jdG9icmUgMjAwOCwgYWNjZXB0w6llIHBhciBs4oCZb3Jkb25uYXRldXLCoDsKQ29uc2lkw6lyYW50IHF14oCZw6AgbOKAmWFwcHVpIGR1IG1hbmRhdCBuwrDCoDg2IGR1IDI0IG5vdmVtYnJlIDIwMDgsIGZpZ3VyYWllbnQgbGEgc2ltcGxlIGZhY3R1cmUgbsKwwqBGQzgwMTkyOCBkZSBs4oCZaW1wcmltZXJpZSDCq8KgSm/Dq2wgUGxhbmNoZW5hdWx0wqDCuyBkdSAzMcKgb2N0b2JyZSAyMDA4LCBk4oCZdW4gbW9udGFudCBkZSAyM8KgNzQwLDYwwqDigqwsIHBvcnRhbnQgcsOpZsOpcmVuY2Ugw6AgbGEgY29tbWFuZGUgbsKwwqAyMDA4LTI0NiwgcmVsYXRpdmUgw6AgbOKAmWltcHJlc3Npb24gZGUgZG9jdW1lbnRzIGFkbWluaXN0cmF0aWZzwqA7IGxhIHNpbXBsZSBmYWN0dXJlIG7CsMKgRkNEMDgxMTAxMjY5IGRlIGxhIHNvY2nDqXTDqSDCq8KgRHlhZGVtwqDCuyBkdSAxMMKgbm92ZW1icmUgMjAwOCwgZOKAmXVuIG1vbnRhbnQgZGUgOcKgMzUyLDA2wqDigqwsIHNlbG9uIGxhIGNvbW1hbmRlIGR1IDIxIG9jdG9icmUgMjAwOCwgcmVsYXRpdmUgw6AgbGEgZm91cm5pdHVyZSBkZSBjb25zb21tYWJsZXMgcG91ciBpbXByaW1hbnRlc8KgOyAKQ29uc2lkw6lyYW50IHF1ZSwgbG9ycyBkZSBs4oCZaW5zdHJ1Y3Rpb24sIGxlIGNvbXB0YWJsZSBhIHRyYW5zbWlzIGEgcG9zdGVyaW9yaSBsYSBjb3BpZSBkZSBsYSBjb21tYW5kZSBuwrDCoDIwMDgtMjQ2IGR1IDcgbm92ZW1icmUgMjAwOCwgZOKAmXVuIG1vbnRhbnQgZGUgMjPCoDc0MCw2MMKg4oKsLCBhcHB1ecOpZSBkdSBtYXJjaMOpIG5vdGlmacOpIGxlIDE0IG1haSAyMDA3IGV0IGR1IGNhaGllciBkZXMgY2xhdXNlcyB0ZWNobmlxdWVzIHBhcnRpY3VsacOocmVzIGR1IDEwwqBhdnJpbMKgMjAwN8KgOyAKQ29uc2lkw6lyYW50IHF1ZSwgbG9ycyBkZSBs4oCZaW5zdHJ1Y3Rpb24sIGxlIGNvbXB0YWJsZSBhIHRyYW5zbWlzIGEgcG9zdGVyaW9yaSBsYSBjb3BpZSBkZSBsYSBjb21tYW5kZSBuwrDCoDIwMDgtMjAzIGR1IDIxIG9jdG9icmUgMjAwOCwgZOKAmXVuIG1vbnRhbnQgZGUgOcKgMzUyLDA2wqDigqwsIGFwcHV5w6llIGR1IG1hcmNow6kgbm90aWZpw6kgbGUgMTIgbm92ZW1icmUgMjAwN8KgOwpCwqAtwqBMZXMgdGV4dGVzIGV0IGxldXIgYXBwbGljYXRpb24KQXR0ZW5kdSBxdeKAmWVuIG1hdGnDqHJlIGRlIGTDqXBlbnNlcywgbGEgcmVzcG9uc2FiaWxpdMOpIGRlcyBjb21wdGFibGVzIHB1YmxpY3Mgc+KAmWFwcHLDqWNpZSBhdSBtb21lbnQgZHUgcGFpZW1lbnTCoDsgcXXigJllbiByZWdhcmQgZGVzIHBpw6hjZXMgcHJvZHVpdGVzLCBsZSBjb21wdGFibGUgbuKAmcOpdGFpdMKgcGFzIGVuIG1lc3VyZSBk4oCZZXhlcmNlciBsZXMgY29udHLDtGxlcyBxdWksIHNlbG9uIGxlcyBkaXNwb3NpdGlvbnMgY29tYmluw6llcyBkZXMgYXJ0aWNsZXPCoDEyIGV0IDEzIGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIgZHUgcsOoZ2xlbWVudCBnw6luw6lyYWwgc3VyIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUsIHN1c3Zpc8OpLCBwb3J0ZW50IG5vdGFtbWVudCBzdXIgbGEgwqvCoHByb2R1Y3Rpb24gZGVzIGp1c3RpZmljYXRpb25zwqDCuyA7CkF0dGVuZHUgcXXigJnDoCBkw6lmYXV0IGRlIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgdmFsaWRlcywgbGUgY29tcHRhYmxlIGF1cmFpdCBkw7sgc3VzcGVuZHJlIGxlIHBhaWVtZW50IGRlcyBtYW5kYXRzIHN1c21lbnRpb25uw6lzIGV0IGVuIGluZm9ybWVyIGzigJlvcmRvbm5hdGV1ciBlbiBhcHBsaWNhdGlvbiBkZSBsJ2FydGljbGXCoDM3IGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIsIHByw6ljaXTDqcKgOwpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGR1IDIzIGbDqXZyaWVyIDE5NjMgc3Vzdmlzw6llLCBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIHNlIHRyb3V2ZSBlbmdhZ8OpZSBkw6hzIGxvcnMgcXUndW5lIGTDqXBlbnNlIGEgw6l0w6kgaXJyw6lndWxpw6hyZW1lbnQgcGF5w6llwqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGR1IHBhcmFncmFwaGUgVklJSSwgbGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWwgY291cmVudCDCq8Kgw6DCoGNvbXB0ZXIgZHUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzwqDCu8KgOyAKQXR0ZW5kdSBxdeKAmWVuIGzigJllc3DDqGNlLCBsZSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBlc3QgbGEgbm90aWZpY2F0aW9uIMOgIE0uwqBZIGR1IHLDqXF1aXNpdG9pcmXCoGR1IG1pbmlzdMOocmUgcHVibGljIDsgcXVlIGNldHRlIG5vdGlmaWNhdGlvbiBhIMOpdMOpIGVmZmVjdHXDqWUgbGUgMjgganVpbiAyMDEywqA7IHF1ZSBsZSBjb21wdGFibGUgZW4gYSBhY2N1c8OpIHLDqWNlcHRpb24gbGUgMjkganVpbiDCoDIwMTLCoDsgcXVlIGxlcyBpbnTDqXLDqnRzIGRvaXZlbnQgZG9uYyBjb3VyaXIgw6AgY29tcHRlciBkZSBjZXR0ZSBkZXJuacOocmUgZGF0ZcKgOwpQYXIgY2VzIG1vdGlmcywKTS7CoFkgZXN0IGNvbnN0aXR1w6kgZMOpYml0ZXVyIGVudmVycyBs4oCZRXRhdCBkZXMgc29tbWVzIGZpZ3VyYW50IGNpLWRlc3NvdXPCoDoKLcKgdmluZ3QgcXVhdHJlIG1pbGxlIHNpeCBjZW50IHNvaXhhbnRlIGRpeCBldXJvcyBldCBzb2l4YW50ZSBzaXggY2VudGltZXMgKDI0wqA2NzAsNjbCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDgsIGF1Z21lbnTDqSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1IDI5wqBqdWluwqAyMDEywqA7Ci3CoHF1YXRyZSB2aW5ndCB0cm9pcyBtaWxsZSBjaW5xIGNlbnQgdHJvaXMgZXVyb3MgZXQgcXVhcmFudCBzZXB0IGNlbnRpbWVzICg4M8KgNTAzLDQ3wqDigqwpIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA4LCBhdWdtZW50w6kgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOcKganVpbsKgMjAxMi4KCkNoYXJnZSBuwrDCoDE0IGR1IHLDqXF1aXNpdG9pcmUgMjAxMi00MCBSUS1EQgpBwqAtIExlcyBmYWl0cwpBdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOCAKQ29uc2lkw6lyYW50IHF1ZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBkYW5zIHNvbiByw6lxdWlzaXRvaXJlLCBxdWUsIHN1ciBtYW5kYXQgbsKwwqAzOSDDqW1pcyBsZSAzwqBkw6ljZW1icmXCoDIwMDggbGUgY29tcHRhYmxlIGF2YWl0IHBhecOpLCBzdXIgbGUgcHJvZ3JhbW1lwqAxODEgwqtQcm90ZWN0aW9uIGRlIGzigJllbnZpcm9ubmVtZW50IGV0IHByw6l2ZW50aW9uIGRlcyByaXNxdWVzwrsgZHUgbWluaXN0w6hyZSBkZSBs4oCZw6ljb2xvZ2llLCBkdSBkw6l2ZWxvcHBlbWVudCBldCBkZSBs4oCZYW3DqW5hZ2VtZW50LCBhdSBwcm9maXQgZGUgbOKAmWFnZW5jZSBk4oCZaW5nw6luaWVyaWUgZXQgZGUgY29uc2VpbCDCq8KgQU5URUHCoMK7LCBsYSBzb21tZSBkZSAyN8KgNDg0LDA4wqDigqwsIGp1c3RpZmnDqWUgcGFyIGxhIGZhY3R1cmUgbsKwwqAyOMKgMDDCoDU1NDggZHUgMjHCoG9jdG9icmXCoDIwMDgsIGTigJl1biBtb250YW50IGRlIDIywqA5ODDCoOKCrMKgSFQsIHJlbGF0aXZlIMOgIGzigJnDqWxhYm9yYXRpb24gZHUgcmFwcG9ydCBlbnZpcm9ubmVtZW50YWwgY29uc3RpdHVhbnQgbGUgc2Now6ltYSBkw6lwYXJ0ZW1lbnRhbCBhY3R1YWxpc8OpIGRlcyBjYXJyacOocmVzIGRlIGxhIFNhcnRoZSwgZmFpc2FudCByw6lmw6lyZW5jZSDDoCB1biBtYXJjaMOpIHNpZ27DqSBsZSAxNsKganVpbsKgMjAwOMKgcG91ciB1biBtb250YW50IGRlIDM4wqAzMDDCoOKCrMKgSFTCoDvCoApDb25zaWTDqXJhbnQgcXVlIGzigJlhY3RlIGTigJllbmdhZ2VtZW50IG7CsMKgUERMIEVJU1MgMjAwOC0wMSwgw6AgaGF1dGV1ciBkZSAzOMKgMzAwwqDigqzCoEhULCBwb3J0YW50IG1lbnRpb24gZHUgZMOpbGFpIGTigJlleMOpY3V0aW9uIGR1IG1hcmNow6kgZGUgc2l4IG1vaXMgw6AgY29tcHRlciBkZSBsYSBkYXRlIGRlIG5vdGlmaWNhdGlvbiBkdSBtYXJjaMOpIGV0IGRlIGzigJlhY2N1c8OpIGRlIHLDqWNlcHRpb24gZGUgY2V0dGUgbm90aWZpY2F0aW9uIHBhciBBTlRFQSBsZSAxZXLCoGp1aWxsZXTCoDIwMDgsIGEgw6l0w6kgc2lnbsOpIHBhciBsZSB0aXR1bGFpcmUgZHUgbWFyY2jDqSBsZSAyNcKgbm92ZW1icmXCoDIwMDggZXQgYWNjZXB0w6kgcGFyIGxhIHBlcnNvbm5lIHJlc3BvbnNhYmxlIGxlIDLCoGTDqWNlbWJyZcKgMjAwOMKgO8KgcXVlIHBhciBjZXJ0aWZpY2F0IGFkbWluaXN0cmF0aWYgZHUgM8KgZMOpY2VtYnJlwqAyMDA4LCBs4oCZb3Jkb25uYXRldXIgYXR0ZXN0ZSBxdWUgwqvCoGzigJlhY3RlIGTigJllbmdhZ2VtZW50IGR1IDI1wqBub3ZlbWJyZcKgMjAwOCBwYXNzw6kgZW50cmUgbOKAmUV0YXQgZXQgbOKAmUFOVEVBIFsuLi5dIGEgw6l0w6kgbm90aWZpw6kgZXQgcXVlIGxlcyB0cmF2YXV4IHNvbnQgdGVybWluw6lzwqDCu8KgOyBxdWUgbGVzIG1vZGFsaXTDqXMgZGUgcGFpZW1lbnQsIHRlbGxlcyBxdWUgcHLDqWNpc8OpZXMgw6AgbOKAmWFydGljbGUgVkktMTAgZHUgbWFyY2jDqSwgNjDCoCUgZHUgbW9udGFudCBkdSBtYXJjaMOpICgyMsKgOTgwwqDigqzCoEhUKSBwYXlhYmxlIMOgIGxhIHByb2R1Y3Rpb24gZHUgcHJvamV0IGRlIHJhcHBvcnQgZW52aXJvbm5lbWVudGFswqA7CkNvbnNpZMOpcmFudCBxdWUgbGUgY29tcHRhYmxlIGEgY29uZmlybcOpIHF1ZSBsYSBkYXRlIGRlIG5vdGlmaWNhdGlvbiBkdSBtYXJjaMOpIMOpdGFpdCBsZSAyIGTDqWNlbWJyZSAyMDA4wqA7IHF1ZSwgdG91dGVmb2lzLCBpbCByZXNzb3J0IGR1IGNlcnRpZmljYXQgZGUgbGEgZGlyZWN0aW9uIHLDqWdpb25hbGUgZGUgbOKAmWVudmlyb25uZW1lbnQsIGRlIGzigJlhbcOpbmFnZW1lbnQgZXQgZHUgbG9nZW1lbnQgKERSRUFMKSBxdeKAmcKrwqBpbCBu4oCZYSBwYXMgw6l0w6kgcG9zc2libGUgZGUgcmV0cm91dmVyIGRhbnMgbGVzIGRvc3NpZXJzIHRyYW5zbWlzIHBhciBs4oCZYW5jaWVubmUgRFJJUkUsIGxhIG5vdGlmaWNhdGlvbiBkdSBtYXJjaMOpIHNpZ27DqSBsZSAyLzEyLzIwMDjCoMK7wqA7CkNvbnNpZMOpcmFudCBxdWUsIHNpIGzigJlvbiBjb25zaWTDqHJlIHF1ZSBsZSBtYXJjaMOpIGVzdCByw6lwdXTDqSBhdm9pciDDqXTDqSBjb25jbHUgbGUgMTbCoGp1aW4sIGxhIHPDqXF1ZW5jZSBub3JtYWxlIHNlIHRyb3V2ZSBhbG9ycyBpbnZlcnPDqWUsIHB1aXNxdWUgbOKAmWFjdGUgZOKAmWVuZ2FnZW1lbnQgYSDDqXTDqSBzaWduw6kgcGFyIGxlIGNhbmRpZGF0IGxlIDI1IG5vdmVtYnJlIGV0IHBhciBsZSBwb3V2b2lyIGFkanVkaWNhdGV1ciBsZSAyIGTDqWNlbWJyZSwgZGF0ZSBwYXNzYW50IHBvdXIgYXZvaXIgw6l0w6kgYXVzc2kgY2VsbGUgZGUgbGEgbm90aWZpY2F0aW9uIGR1IG1hcmNow6nCoDsgcXXigJllbiBvdXRyZSwgc3VyIGzigJlhY3RlIGTigJllbmdhZ2VtZW50IHNpZ27DqSBwYXIgbGEgc29jacOpdMOpIEFOVEVBIGxlIDI1wqBub3ZlbWJyZcKgMjAwOCwgY2V0dGUgZGVybmnDqHJlIGFjY3VzZSByw6ljZXB0aW9uIGR1IG1hcmNow6kgbGUgMWVywqBqdWlsbGV0wqAyMDA4LCBkYXRlIGlkZW50aXF1ZSDDoCBjZWxsZSBwb3J0w6llIHN1ciBsZSBjYWhpZXIgZGVzIGNoYXJnZXMgZHUgbWFyY2jDqcKgOyBxdWUsIGxhIGRhdGUgZGUgbGEgZmFjdHVyZSBuwrDCoDI4IDAwIDU1NDggKDIxIG9jdG9icmUgMjAwOCkgZXN0IGFudMOpcmlldXJlIMOgIGxhIGRhdGUgZGUgbm90aWZpY2F0aW9uIGR1IG1hcmNow6kgdGVsbGUgcXVlIHJlcG9ydMOpZSBwYXIgbGUgY29tcHRhYmxlIHN1ciBsZSBmb3JtdWxhaXJlIFA1MzAsIHNvaXQgbGUgMsKgZMOpY2VtYnJlwqAyMDA4wqA7IHF1ZSBsYSBmYWN0dXJlIGZhaXQgcsOpZsOpcmVuY2Ugw6AgdW4gbWFyY2jDqSBwYXNzw6kgbGUgMTYganVpbiAyMDA4LCBzb2l0IHByZXNxdWUgc2l4IG1vaXMgYXZhbnQgbGEgZGF0ZSBkdSBtYXJjaMOpIHByw6lzZW50w6kgw6AgbOKAmWFwcHVpIGR1IG1hbmRhdMKgOwpCwqAtwqBMZXMgdGV4dGVzIGV0IGxldXIgYXBwbGljYXRpb24KQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDEyIGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgcXVlIMKrwqBsZXMgY29tcHRhYmxlcyBzb250IHRlbnVzIGTigJlleGVyY2VyIFsuLi5dIEIuIC0gRW4gbWF0acOocmUgZGUgZMOpcGVuc2VzLCBsZSBjb250csO0bGUgOiBbLi4uXSA7IERlIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZcKgwrvCoDsgcXXigJlhdSB0aXRyZSBkdSBjb250csO0bGUgZGUgbGEgcHJvZHVjdGlvbiBkZXMganVzdGlmaWNhdGlvbnMgcHLDqXZ1IMOgIGzigJlhcnRpY2xlwqAxMyBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlIDE5NjIsIHByw6ljaXTDqSwgbGUgY29tcHRhYmxlIG5lIGRvaXQgcGFzIHNlIGNvbnRlbnRlciBkZSB2w6lyaWZpZXIgbOKAmWV4aXN0ZW5jZSBtYXTDqXJpZWxsZSBkZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlc8KgOyBxdeKAmWlsIGx1aSBpbmNvbWJlIMOpZ2FsZW1lbnQgZOKAmWVuIGFwcHLDqWNpZXIgbGEgY29ow6lyZW5jZSA7IHF1ZSBsZXMgaW5jb2jDqXJlbmNlcyByZW5jb250csOpZXMgYXVyYWllbnQgZMO7IGNvbmR1aXJlIGxlIGNvbXB0YWJsZSDDoCBkZW1hbmRlciBkZXMgw6ljbGFpcmNpc3NlbWVudHMgw6AgbOKAmW9yZG9ubmF0ZXVyIGV0LCBkYW5zIGzigJlhdHRlbnRlIGRlIGxldXIgcHJvZHVjdGlvbiwgw6Agc3VzcGVuZHJlIGxlIHBhaWVtZW50IGR1IG1hbmRhdCBuwrDCoDM5LCBlbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSAzNyBkdSByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSA7CkF0dGVuZHUgcXXigJllbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZHUgMjMgZsOpdnJpZXIgMTk2MyBzdXN2aXPDqWUsIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgc2UgdHJvdXZlIGVuZ2Fnw6llIGTDqHMgbG9yc3F1J3VuZSBkw6lwZW5zZSBhIMOpdMOpIGlycsOpZ3VsacOocmVtZW50IHBhecOpZcKgOwpBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBkdSBwYXJhZ3JhcGhlIFZJSUksIGxlcyBpbnTDqXLDqnRzIGF1IHRhdXggbMOpZ2FsIGNvdXJlbnQgwqvCoMOgwqBjb21wdGVyIGR1IHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZGVzIGNvbXB0YWJsZXMgcHVibGljc8KgwrvCoDsgCkF0dGVuZHUgcXXigJllbiBs4oCZZXNww6hjZSwgbGUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgZXN0IGxhIG5vdGlmaWNhdGlvbiDDoCBNLsKgWSBkdSByw6lxdWlzaXRvaXJlwqBkdSBtaW5pc3TDqHJlIHB1YmxpYyA7IHF1ZSBjZXR0ZSBub3RpZmljYXRpb24gYSDDqXTDqSBlZmZlY3R1w6llIGxlIDI4IGp1aW4gMjAxMsKgOyBxdWUgbGUgY29tcHRhYmxlIGVuIGEgYWNjdXPDqSByw6ljZXB0aW9uIGxlIDI5IGp1aW4gwqAyMDEywqA7IHF1ZSBsZXMgaW50w6lyw6p0cyBkb2l2ZW50IGRvbmMgY291cmlyIMOgIGNvbXB0ZXIgZGUgY2V0dGUgZGVybmnDqHJlIGRhdGXCoDsKUGFyIGNlcyBtb3RpZnMsCk0uwqBZIGVzdCBjb25zdGl0dcOpIGTDqWJpdGV1ciBlbnZlcnMgbOKAmUV0YXQgZGUgbGEgc29tbWUgZGUgdmluZ3Qgc2VwdCBtaWxsZSBxdWF0cmUgY2VudCBxdWF0cmUgdmluZ3QgcXVhdHJlIGV1cm9zIGV0IGh1aXQgY2VudGltZXMgKDI3wqA0ODQsMDjCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlwqAyMDA4LCBhdWdtZW50w6kgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOcKganVpbsKgMjAxMi4KQ2hhcmdlIG7CsMKgMTUgZHUgcsOpcXVpc2l0b2lyZSAyMDEyLTQwIFJRLURCCkEtIExlcyBmYWl0cwpBdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNwpDb25zaWTDqXJhbnQgcXVlLCBkYW5zIHNvbiByw6lxdWlzaXRvaXJlLCBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBxdWUgc3VyIG1hbmRhdHMgbm9zIDY2MTEgZXQgNjYxMiBk4oCZdW5lIHBhcnQsIG5vcyA2ODMxIMOgIDY4MzQgZOKAmWF1dHJlIHBhcnQsIMOpbWlzIGxlcyAzIGV0IDXCoGTDqWNlbWJyZcKgMjAwNywgbGUgY29tcHRhYmxlIGF2YWl0IHBhecOpIGxlcyA1IGV0IDEwIGTDqWNlbWJyZSBzdWl2YW50cywgc3VyIGxlIHByb2dyYW1tZSBuwrDCoDEzOSDCqyBFbnNlaWduZW1lbnQgcHJpdsOpIGR1IHByZW1pZXIgZXQgZHUgc2Vjb25kIGRlZ3LDqcKgwrsgZHUgbWluaXN0w6hyZSBkZSBs4oCZw6lkdWNhdGlvbiBuYXRpb25hbGUsIGRlcyBib3Vyc2VzIGRlIGNvbGzDqGdlcyBldCBkZSBseWPDqWVzLCBzb2l0IGRpcmVjdGVtZW50IGF1eCBhdHRyaWJ1dGFpcmVzLCBzb2l0IMOgIGRlcyDDqXRhYmxpc3NlbWVudHMgc2NvbGFpcmVzIGRlIGzigJllbnNlaWduZW1lbnQgcHJpdsOpIHNvdXMgY29udHJhdCwgcG91ciB1biBtb250YW50IHRvdGFsIGRlIDg4OcKgNzg3LDQxwqDigqwgc2Vsb24gbGUgdGFibGVhdSBmaWd1cmFudCBjaS1kZXNzb3VzwqA6CkNvbnNpZMOpcmFudCBxdeKAmcOgIGzigJlhcHB1aSBkZXMgbWFuZGF0cyBuwrBzIDY2MTEsIDY2MTIgZXQgNjgzMSDDoCA2ODM0LCBmaWd1cmFpZW50IHNldWxlbWVudCBkZXMgwqvCoMOpdGF0cyBkZSBsaXF1aWRhdGlvbiBkZXMgYm91cnNlcyBkZSBjb2xsw6hnZSBkZSBs4oCZZW5zZWlnbmVtZW50IHByaXbDqSAtIGFubsOpZSBzY29sYWlyZSAyMDA3LTIwMDgsIHRyaW1lc3RyZSBuwrDCoDHCoMK7IGV0IGRlcyDDqXRhdHMgaW50aXR1bMOpcyDCq8KgQm91cnNlIG5hdGlvbmFsZSBk4oCZw6l0dWRlcyBkdSBzZWNvbmQgZGVncsOpIGRlIGx5Y8OpZSDigJMgRXRhdCBkZSBsaXF1aWRhdGlvbsKgLSBBbm7DqWUgc2NvbGFpcmUgMjAwNy0yMDA4LCBudW3DqXJvIGRlIHRyaW1lc3RyZcKgMcKgwrssIHLDqWNhcGl0dWxhbnQgbOKAmWlkZW50aXTDqSBkZXMgYXR0cmlidXRhaXJlcywgbGVzIG1vbnRhbnRzIGRlcyBib3Vyc2VzIGV0IGRlcyBwcmltZXMgYXR0cmlidcOpZXMsIGV0IGxlcyBjb29yZG9ubsOpZXMgYmFuY2FpcmVzIDsKTGVzIG1hbmRhdHMgbm9zIDY2MTIsIDY4MzMgZXQgNjgzNApDb25zaWTDqXJhbnQgcXVlIGxlcyBtYW5kYXRzIG5vc8KgNjYxMiwgNjgzMyBldCA2ODM0LCBwb3VyIGxlc3F1ZWxzIGxlIHBhaWVtZW50IGEgw6l0w6kgZWZmZWN0dcOpIGF1eCDDqXRhYmxpc3NlbWVudHMgc2NvbGFpcmVzLCBu4oCZw6l0YWllbnQgcGFzIGFjY29tcGFnbsOpcyBkZXMgcHJvY3VyYXRpb25zIHNvdXMgc2VpbmcgcHJpdsOpIGRvbm7DqWVzIHBhciBsZXMgYXR0cmlidXRhaXJlcyBkZXMgYm91cnNlcyBhdXggcmVwcsOpc2VudGFudHMgbMOpZ2F1eCBkZXMgw6l0YWJsaXNzZW1lbnRzIGRlIGzigJllbnNlaWduZW1lbnQgcHJpdsOpLCBjb250cmFpcmVtZW50IMOgIGxhIG1lbnRpb24gZmlndXJhbnQgc3VyIGxlcyDDqXRhdHMgZmlndXJhbnQgw6AgbOKAmWFwcHVpIGRlIGNlcyBtYW5kYXRzLCBldCwgZW4gbcOpY29ubmFpc3NhbmNlIGRlcyBkaXNwb3NpdGlvbnMgZGUgbOKAmWluc3RydWN0aW9uIERHQ1AgbsKwwqA4OC00OC1CMSBkdSAxMsKgYXZyaWzCoDE5ODgsIHJlbGF0aXZlIGF1eCBtb2RhbGl0w6lzIGRlIHBhaWVtZW50IGRlcyBib3Vyc2VzIG5hdGlvbmFsZXMgZOKAmcOpdHVkZXMgZHUgc2Vjb25kIGRlZ3LDqSBhdXggw6lsw6h2ZXMgc2NvbGFyaXPDqXMgZGFucyBkZXMgw6l0YWJsaXNzZW1lbnRzIHByaXbDqXMgc291cyBjb250cmF0wqA7IAoKTGVzIG1hbmRhdHMgbm9zIDY2MTEsIDY4MzEgZXQgNjgzMgpDb25zaWTDqXJhbnQgcXVlIGxlcyBtYW5kYXRzIHN1c21lbnRpb25uw6lzIG7igJnDqXRhaWVudCBhY2NvbXBhZ27DqXMgbmkgZGUgZMOpY2lzaW9uIGTigJlhdHRyaWJ1dGlvbiwgbmkgZOKAmWF1Y3VuIHByb2PDqHMtdmVyYmFsIGRlIGNvbW1pc3Npb24sIGZhaXNhbnQgcsOpZsOpcmVuY2UgYXV4IGRpc3Bvc2l0aW9ucyByw6lnbGVtZW50YWlyZXMgYXBwbGljYWJsZXMgZW4gbOKAmWVzcMOoY2UgZXQgcGVybWV0dGFudCBkZSB2w6lyaWZpZXIgbOKAmWV4YWN0aXR1ZGUgZGUgbGEgbGlxdWlkYXRpb27CoDsKQiAtIExlcyB0ZXh0ZXMgZXQgbGV1ciBhcHBsaWNhdGlvbgpBdHRlbmR1IHF1ZSBs4oCZaW5zdHJ1Y3Rpb24gREdDUCBuwrAgODgtNDgtQjEgcHLDqXZvaXQgcXVlIGxlIHBhaWVtZW50IGdsb2JhbCBkZXMgYm91cnNlcyBwZXV0IGludGVydmVuaXIgZW50cmUgbGVzIG1haW5zIGR1IHJlcHLDqXNlbnRhbnQgbMOpZ2FsIGRlIGNoYXF1ZSDDqXRhYmxpc3NlbWVudCwgc3VyIHByw6lzZW50YXRpb24gZGUgcHJvY3VyYXRpb25zIHNvdXMgc2VpbmcgcHJpdsOpIGRvbm7DqWVzIHBhciBsZSByZXByw6lzZW50YW50IGzDqWdhbCBkZSBs4oCZw6lsw6h2ZSBhdHRyaWJ1dGFpcmXCoDsgcXVlLCBkYW5zIGNlIGNhcywgbOKAmW9yaWdpbmFsIGV0IHVuIGRvdWJsZSBkZSBsYSBwcm9jdXJhdGlvbiBkb2l2ZW50IMOqdHJlIHRyYW5zbWlzIGF1IGNvbXB0YWJsZSBsb3JzIGR1IG1hbmRhdGVtZW50IGRlcyBib3Vyc2VzIGR1IHByZW1pZXIgdHJpbWVzdHJlIGFmaW4gZGUgc2VydmlyIGRlIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgYXVwcsOocyBkZSBsYSBDb3VyIGRlcyBjb21wdGVzwqA7IApBdHRlbmR1IHF1ZSBs4oCZaW5zdHJ1Y3Rpb24gY29kaWZpY2F0cmljZSBuwrDCoDAzLTA2MC1CIGR1IDE3wqBub3ZlbWJyZcKgMjAwMyBzdXN2aXPDqWUgcHLDqXZvaXQsIGVuIHNvbiBwYXJhZ3JhcGhlIDUuNMKgwqvCoETDqXBlbnNlcyBk4oCZaW50ZXJ2ZW50aW9uIC0gZMOpcGVuc2VzIGRpcmVjdGVzIChhbGxvY2F0aW9ucywgc2Vjb3VycywgcHJlc3RhdGlvbnMgYXUgYsOpbsOpZmljZSBkZSB0aWVyc+KApinCoMK7IHF1ZSBkb2l2ZW50IMOqdHJlIGZvdXJuaXMgYXUgY29tcHRhYmxlIMOgIGzigJlhcHB1aSBkdSBtYW5kYXQgaW5kaXZpZHVlbCBvdSBjb2xsZWN0aWYgwqvCoGxhIGTDqWNpc2lvbiBk4oCZYXR0cmlidXRpb24gZGUgbOKAmWFpZGUgb3UgbcOpbW9pcmUgb3UgZmFjdHVyZSDDqXRhYmxpIHBhciBsZSBwcmVzdGF0YWlyZSBldCBjZXJ0aWZpY2F0IGRlIHBhaWVtZW50IHZpc8OpIHBhciBs4oCZb3Jkb25uYXRldXLCoMK7wqA7IHF14oCZYWluc2kgwqvCoGxlcyBtZW50aW9ucyBkZXZhbnQgZW4gcHJpbmNpcGUgZmlndXJlciBzdXIgbGEgZMOpY2lzaW9uIGTigJlhdHRyaWJ1dGlvbiBvdSBsZSBtw6ltb2lyZSBkb2l2ZW50LCDDoCBkw6lmYXV0LCDDqnRyZSBtZW50aW9ubsOpZXMgc3VyIGxlIG1hbmRhdCwgbm9taW5hdGlmIG91IGNvbGxlY3RpZi4gTGEgZMOpY2lzaW9uIGRvaXQgcHLDqWNpc2VyIGxlIHR5cGUgZGUgbOKAmWFjdGlvbiBldCBsZXMgbW9kYWxpdMOpcyBkZSBsaXF1aWRhdGlvbiBkZSBs4oCZYWlkZSwgZXQgZmFpcmUgcsOpZsOpcmVuY2UgYXV4IGRpc3Bvc2l0aW9ucyByw6lnbGVtZW50YWlyZXMgZXQgw6l2ZW50dWVsbGVtZW50IGF1IHByb2PDqHMtdmVyYmFsIGRlIGxhIGNvbW1pc3Npb24gZOKAmWF0dHJpYnV0aW9uLiBMZSBtw6ltb2lyZSBkb2l0IGZhaXJlIGFwcGFyYcOudHJlIGxlIG1vbnRhbnQgdG90YWwgZGVzIGZyYWlzIGVuZ2Fnw6lzIGV0IGxlIG1vbnRhbnQgw6AgbGEgY2hhcmdlIGRlIGzigJlFdGF0LiBMZSBjZXJ0aWZpY2F0IGRlIHBhaWVtZW50IGRvaXQgZmFpcmUgcsOpZsOpcmVuY2UgYXV4IGRpc3Bvc2l0aW9ucyByw6lnbGVtZW50YWlyZXMgZXQgcGVybWV0dHJlIGRlIHbDqXJpZmllciBs4oCZZXhhY3RpdHVkZSBkZXMgY2FsY3VscyBkZSBsaXF1aWRhdGlvbsKgwrvCoDsKQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDEywqBCIGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgbGUgY29tcHRhYmxlIGVzdCB0ZW51IGRlIHbDqXJpZmllciBsZSBjYXJhY3TDqHJlIGxpYsOpcmF0b2lyZSBkdSByw6hnbGVtZW50IGV0IGTigJlleGVyY2VyIGxlIGNvbnRyw7RsZSBkZSB2YWxpZGl0w6kgZGVzIGNyw6lhbmNlcyBzdXIgbGVzIGTDqXBlbnNlcyBxdeKAmWlsIHByZW5kIGVuIGNoYXJnZcKgOyBxdWUgbOKAmWFydGljbGUgMTMgZHUgbcOqbWUgZMOpY3JldCBwcsOpY2lzZSBxdWUgbGUgY29udHLDtGxlIGRlIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSBjb21wcmVuZCBjZXV4IGRlIGzigJlleGFjdGl0dWRlIGRlcyBjYWxjdWxzIGRlIGxpcXVpZGF0aW9uIGV0IGRlIGxhIHByb2R1Y3Rpb24gZGVzIGp1c3RpZmljYXRpb25zwqA7CkF0dGVuZHUgcXVlIGxhIHJlc3BvbnNhYmlsaXTDqSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzIHPigJlhcHByw6ljaWUgYXUgbW9tZW50IGR1IHBhaWVtZW50wqA7IHF14oCZZW4gcmVnYXJkIGRlcyDDqXRhdHMgZGUgbGlxdWlkYXRpb24gZGVzIGJvdXJzZXMgcHJvZHVpdHMgw6AgbOKAmWFwcHVpIGRlcyBtYW5kYXRzIG7CsHPCoDY2MTEsIDY2MTIsIGV0IDY4MzEgw6AgNjgzNCwgbGUgY29tcHRhYmxlIG7igJlhIHBhcyBleGVyY8OpIGxlcyBjb250csO0bGVzIHByw6l2dXMgYXV4IGFydGljbGVzIDEyIGV0IDEzIGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmUgMTk2MiwgcHLDqWNpdMOpIDsgcXXigJnDoCBkw6lmYXV0IGRlIGp1c3RpZmljYXRpb25zIHN1ZmZpc2FudGVzLCBpbCBhdXJhaXQgZMO7IHN1c3BlbmRyZSBsZSBwYWllbWVudCBkZXMgZGl0cyBtYW5kYXRzLCBldCBlbiBpbmZvcm1lciBs4oCZb3Jkb25uYXRldXIgZW4gYXBwbGljYXRpb24gZGUgbCdhcnRpY2xlIDM3IGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIsIHByw6ljaXTDqcKgOyAKQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkdSAyMyBmw6l2cmllciAxOTYzIHN1c3Zpc8OpZSwgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBzZSB0cm91dmUgZW5nYWfDqWUgZMOocyBsb3JzcXUndW5lIGTDqXBlbnNlIGEgw6l0w6kgaXJyw6lndWxpw6hyZW1lbnQgcGF5w6llwqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGR1IHBhcmFncmFwaGUgVklJSSwgbGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWwgY291cmVudCDCq8Kgw6AgY29tcHRlciBkdSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBjb21wdGFibGVzIHB1YmxpY3PCoMK7wqA7IApBdHRlbmR1IHF14oCZZW4gbOKAmWVzcMOoY2UsIGxlIHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIGVzdCBsYSBub3RpZmljYXRpb24gw6AgTS7CoFkgZHUgcsOpcXVpc2l0b2lyZSBkdSBtaW5pc3TDqHJlIHB1YmxpYyA7IHF1ZSBjZXR0ZSBub3RpZmljYXRpb24gYSDDqXTDqSBlZmZlY3R1w6llIGxlIDI4IGp1aW4gMjAxMsKgOyBxdWUgbGUgY29tcHRhYmxlIGVuIGEgYWNjdXPDqSByw6ljZXB0aW9uIGxlIDI5IGp1aW4gMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoCBjb21wdGVyIGRlIGNldHRlIGRlcm5pw6hyZSBkYXRlwqA7ClBhciBjZXMgbW90aWZzLApNLsKgWSBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIGh1aXQgY2VudCBxdWF0cmUgdmluZ3QgbmV1ZiBtaWxsZSBzZXB0IGNlbnQgcXVhdHJlIHZpbmd0IHNlcHQgZXVyb3MgZXQgcXVhcmFudGUgZXQgdW4gY2VudGltZXMgKDg4OcKgNzg3LDQxwqDigqwpIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA3LCBhdWdtZW50w6llIGRlcyBpbnTDqXLDqnRzIGRlIGRyb2l0IMOgwqBjb21wdGVyIGR1wqAyOcKganVpbsKgMjAxMi4KQ2hhcmdlIG7CsMKgMTYgZHUgcsOpcXVpc2l0b2lyZSAyMDEyLTQwIFJRLURCCkEgLSBMZXMgZmFpdHMKQXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcKQ29uc2lkw6lyYW50IHF1ZSBkYW5zIHNvbiByw6lxdWlzaXRvaXJlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIHF1ZSwgc3VyIG1hbmRhdHMgbm9zIDUyMDIgw6AgNTIwNiDDqW1pcyBsZXMgMTAgb2N0b2JyZSAyMDA3LCBldCwgc3VyIG1hbmRhdHMgbm9zIDY5NDcgw6AgNjk1MCwgw6ltaXMgbGUgNsKgZMOpY2VtYnJlwqAyMDA3LCBsZSBjb21wdGFibGUgYXZhaXQgcHJvY8OpZMOpIGF1IHBhaWVtZW50LCBsZXMgMTUgb2N0b2JyZSBldCAxMCBkw6ljZW1icmUgMjAwNywgZGUgY3LDqWRpdHMgcMOpZGFnb2dpcXVlcyBlbiBmYXZldXIgZOKAmcOpdGFibGlzc2VtZW50cyBzY29sYWlyZXMgcHJpdsOpcyBzb3VzIGNvbnRyYXQgcG91ciB1biBtb250YW50IHRvdGFsIGRlIDYxOMKgNjAyLDEwwqDigqwsIGRvbnQgbGUgZMOpdGFpbCBmaWd1cmUgZGFucyBsZSB0YWJsZWF1IGNpLWRlc3NvdXPCoDoKCkxlcyBtYW5kYXRzIG5vcyA1MjAyIMOgIDUyMDYKQ29uc2lkw6lyYW50IHF14oCZw6AgbOKAmWFwcHVpIGRlcyBtYW5kYXRzIG5vcyA1MjAyIMOgIDUyMDYgZmlndXJhaWVudCBzZXVsZW1lbnQgZGVzIMOpdGF0cyBpbnRpdHVsw6lzIMKrwqBjcsOpZGl0cyBww6lkYWdvZ2lxdWVzIGdsb2JhbGlzw6lzIHJlbGV2YW50IGR1IHByb2dyYW1tZcKgMTM5LWFydGljbGXCoDUyLWNhdMOpZ29yaWUgNjQtZXhlcmNpY2UgMjAwN8KgwrssIG5vbiBzaWduw6lzIHBhciBs4oCZb3Jkb25uYXRldXIgc2Vjb25kYWlyZSwgZXQgbWVudGlvbm5hbnQgcGFyIMKrwqBjYXTDqWdvcmllIGTigJnDqXRhYmxpc3NlbWVudMKgwrsgbGUgbm9tYnJlIGTigJnDqXRhYmxpc3NlbWVudHMgY29uY2VybsOpcyBldCBsZSBtb250YW50IGRlcyB2ZXJzZW1lbnRzIDsgCkNvbnNpZMOpcmFudCBxdWUgbGVzIMOpdGF0cywgZmlndXJhbnQgw6AgbOKAmWFwcHVpIGRlcyBtYW5kYXRzIHN1c21lbnRpb25uw6lzLCBkw6l0YWlsbMOpcyBwYXIgY2F0w6lnb3JpZSBk4oCZw6l0YWJsaXNzZW1lbnQgZXQgbm9uIHJldsOqdHVzIGRlIGxhIHNpZ25hdHVyZSBkZSBs4oCZaW5zcGVjdGV1ciBk4oCZYWNhZMOpbWllLCBkaXJlY3RldXIgZGVzIHNlcnZpY2VzIGTDqXBhcnRlbWVudGF1eCBkZSBs4oCZw6lkdWNhdGlvbiBuYXRpb25hbGUsIG5lIHNhdXJhaWVudCB2YWxvaXIgZW4gbOKAmcOpdGF0IGTDqWNpc2lvbiBhdHRyaWJ1dGl2ZcKgOwpMZXMgbWFuZGF0cyBub3MgNjk0NyDDoCA2OTUwCkNvbnNpZMOpcmFudCBxdeKAmcOgIGzigJlhcHB1aSBkZXMgbWFuZGF0cyBub3MgNjk0NyDDoCA2OTUwIGZpZ3VyYWllbnQgc2V1bGVtZW50IGRlcyDDqXRhdHMgaW50aXR1bMOpcyDCq8KgY3LDqWRpdHMgcMOpZGFnb2dpcXVlcyBnbG9iYWxpc8OpcyByZWxldmFudCBkdSBwcm9ncmFtbWUgMTM5LWFydGljbGXCoDUyLWNhdMOpZ29yaWXCoDY0IC0gZXhlcmNpY2XCoDIwMDfCoMK7LCBzaWduw6lzIHBhciBs4oCZaW5zcGVjdGV1ciBk4oCZYWNhZMOpbWllLCBldCBtZW50aW9ubmFudCBwYXIgwqvCoGNhdMOpZ29yaWUgZOKAmcOpdGFibGlzc2VtZW50wqDCuyBsZSBub21icmUgZOKAmcOpdGFibGlzc2VtZW50cyBjb25jZXJuw6lzIGV0IGxlIG1vbnRhbnQgZGVzIHZlcnNlbWVudHMgOwpDb25zaWTDqXJhbnQgY2VwZW5kYW50LCBxdWUgY2VzIMOpdGF0cyBqdXN0aWZpY2F0aWZzLCBhY2NvbXBhZ25hbnQgbGVzIG1hbmRhdHMgc3VzbWVudGlvbm7DqXMsIHNvbnQgc2lnbsOpcyBwYXIgbOKAmWluc3BlY3RldXIgZOKAmWFjYWTDqW1pZSBldCBxdWUgbGEgbGlzdGUgZGVzIGLDqW7DqWZpY2lhaXJlcyB5IGVzdCBhbm5leMOpZcKgOyBxdeKAmcOgIGNlIHRpdHJlIGV0IGRhbnMgbGUgY2FzIHByw6lzZW50LCBpbHMgcGV1dmVudCDDqnRyZSBhc3NpbWlsw6lzIMOgIHVuZSBkw6ljaXNpb24gYXR0cmlidXRpdmUgZGUgc3VidmVudGlvbsKgOwpCIC0gTGVzIHRleHRlcyBldCBsZXVyIGFwcGxpY2F0aW9uCkF0dGVuZHUgcXVlIGzigJlpbnN0cnVjdGlvbiBjb2RpZmljYXRyaWNlIG7CsMKgMDMtMDYwLUIgZHUgMTfCoG5vdmVtYnJlwqAyMDAzIHN1c3Zpc8OpZSBwcsOpdm9pdCwgZW4gc2VzIHBhcmFncmFwaGVzIDUuMSBldCA1LjIsIMKrwqBkw6lwZW5zZXMgZOKAmWludGVydmVudGlvbiDigJMgc3VidmVudGlvbnMgZGUgZm9uY3Rpb25uZW1lbnQgb3UgZOKAmWludmVzdGlzc2VtZW50wqDCuyBsYSDCq8KgZMOpY2lzaW9uIGF0dHJpYnV0aXZlIGRlIHN1YnZlbnRpb24gb3UgY29udmVudGlvbiBk4oCZYXR0cmlidXRpb24gZXQgcmVsZXbDqSBk4oCZaWRlbnRpdMOpIGJhbmNhaXJlIG91IHBvc3RhbCBkdSBiw6luw6lmaWNpYWlyZcKgwrvCoDsKQXR0ZW5kdSBxdeKAmWVuIGzigJlhYnNlbmNlIGRlIGNldHRlIHNpZ25hdHVyZSwgbGUgY29tcHRhYmxlIG5lIHBvdXZhaXQgbmkgdsOpcmlmaWVyIGxhIHF1YWxpdMOpIGR1IGTDqWNpc2lvbm5haXJlLCBuaSBz4oCZYXNzdXJlciBkZSBzb24gc291aGFpdCBxdWUgbGEgZMOpcGVuc2Ugc29pdCBwYXnDqWUsIG5pIGdhcmFudGlyIGxhIG1pc2UgZW4gamV1IGRlcyByZXNwb25zYWJpbGl0w6lzIHByb3ByZXMgYXUgZMOpY2lzaW9ubmFpcmXCoDsKQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDEyIEIgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBxdWUgbGUgY29tcHRhYmxlIGVzdCB0ZW51IGRlIHbDqXJpZmllciBsYSBxdWFsaXTDqSBkZSBs4oCZb3Jkb25uYXRldXIsIGxlIGNhcmFjdMOocmUgbGliw6lyYXRvaXJlIGR1IHLDqGdsZW1lbnQgZXQgZOKAmWV4ZXJjZXIgbGUgY29udHLDtGxlIGRlIHZhbGlkaXTDqSBkZXMgY3LDqWFuY2VzIHN1ciBsZXMgZMOpcGVuc2VzIHF14oCZaWwgcHJlbmQgZW4gY2hhcmdlwqA7IHF1ZSBs4oCZYXJ0aWNsZSAxMyBkdSBtw6ptZSBwcsOpY2lzZSBxdWUgbGUgY29udHLDtGxlIGRlIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSBjb21wcmVuZCBjZXV4IGRlIGzigJlleGFjdGl0dWRlIGRlcyBjYWxjdWxzIGRlIGxpcXVpZGF0aW9uIGV0IGRlIGxhIHByb2R1Y3Rpb24gZGVzIGp1c3RpZmljYXRpb25zwqA7CkF0dGVuZHUgcXVlIGxhIHJlc3BvbnNhYmlsaXTDqSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzIHPigJlhcHByw6ljaWUgYXUgbW9tZW50IGR1IHBhaWVtZW50wqA7IHF1ZSBmYXV0ZSBkZXMgcGnDqGNlcyByZXF1aXNlcyDDoCBs4oCZYXBwdWkgZGVzIG1hbmRhdHMgbsKwc8KgNTIwMiDDoCA1MjA2LCBsZSBjb21wdGFibGUgbuKAmWEgcGFzIGV4ZXJjw6kgbGVzIGNvbnRyw7RsZXMgcHLDqXZ1cyBhdXggYXJ0aWNsZXMgMTIgZXQgMTMgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiwgcHLDqWNpdMOpIDsgcXXigJnDoCBkw6lmYXV0IGRlIGp1c3RpZmljYXRpb25zIHN1ZmZpc2FudGVzLCBpbCBhdXJhaXQgZMO7IHN1c3BlbmRyZSBsZXVyIHBhaWVtZW50LCBldCBlbiBpbmZvcm1lciBs4oCZb3Jkb25uYXRldXIgZW4gYXBwbGljYXRpb24gZGUgbCdhcnRpY2xlIDM3IGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIsIHByw6ljaXTDqcKgOyAKQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkdSAyMyBmw6l2cmllciAxOTYzIHN1c3Zpc8OpZSwgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBzZSB0cm91dmUgZW5nYWfDqWUgZMOocyBsb3JzcXUndW5lIGTDqXBlbnNlIGEgw6l0w6kgaXJyw6lndWxpw6hyZW1lbnQgcGF5w6llwqA7CkF0dGVuZHUsIGVuIGNvbnPDqXF1ZW5jZSwgcXVlIGxlcyBwYWllbWVudHMgc3VzbWVudGlvbm7DqXMgcG91cnJhaWVudCDDqnRyZSBwcsOpc29tcHRpZnMgZOKAmWlycsOpZ3VsYXJpdMOpcyBzdXNjZXB0aWJsZXMgcG91dmFudCBmb25kZXIgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlIE0uwqBZLCDDoCBoYXV0ZXVyIGRlIDM4OcKgOTk5LDQ0wqDigqwsIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZcKgMjAwN8KgOwpBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBkdSBwYXJhZ3JhcGhlIFZJSUksIGxlcyBpbnTDqXLDqnRzIGF1IHRhdXggbMOpZ2FsIGNvdXJlbnQgwqvCoMOgwqBjb21wdGVyIGR1IHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZGVzIGNvbXB0YWJsZXMgcHVibGljc8KgwrvCoDsgCkF0dGVuZHUgcXXigJllbiBs4oCZZXNww6hjZSwgbGUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgZXN0IGxhIG5vdGlmaWNhdGlvbiDDoCBNLsKgWSBkdSByw6lxdWlzaXRvaXJlwqBkdSBtaW5pc3TDqHJlIHB1YmxpYzsgcXVlIGNldHRlIG5vdGlmaWNhdGlvbiBhIMOpdMOpIGVmZmVjdHXDqWUgbGUgMjgganVpbiAyMDEywqA7IHF1ZSBsZSBjb21wdGFibGUgZW4gYSBhY2N1c8OpIHLDqWNlcHRpb24gbGUgMjkganVpbsKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoCBjb21wdGVyIGRlIGNldHRlIGRlcm5pw6hyZSBkYXRlwqA7ClBhciBjZXMgbW90aWZzLApNLsKgWSBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIHRyb2lzIGNlbnQgcXVhdHJlIHZpbmd0IG5ldWYgbWlsbGUgbmV1ZiBjZW50IHF1YXRyZSB2aW5ndCBkaXggbmV1ZiBldXJvcyBldCBxdWFyYW50ZSBxdWF0cmUgY2VudGltZXMgKDM4OSA5OTksNDTCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDcsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOcKganVpbsKgMjAxMi4KCkNoYXJnZSBuwrDCoDE3IGR1IHLDqXF1aXNpdG9pcmUgMjAxMi00MCBSUS1EQgpBIC0gTGVzIGZhaXRzCkF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA4IApDb25zaWTDqXJhbnQgcXVlIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUgbGUgUHJvY3VyZXVyIGfDqW7DqXJhbCBhIHJlbGV2w6kgcXVlLCBzdXIgbWFuZGF0cyBub3MgNDgyNyDDoCA0ODMwLCDDqW1pcyBsZSAxNyBub3ZlbWJyZSAyMDA4LCBsZSBjb21wdGFibGUgYXZhaXQgcGF5w6ksIGR1cmFudCBzYSBnZXN0aW9uIDIwMDgsIHN1ciBsZSBwcm9ncmFtbWUgbsKwwqAyMzAgwqvCoFZpZSBzY29sYWlyZcKgwrsgZHUgbWluaXN0w6hyZSBkZSBs4oCZw6lkdWNhdGlvbiBuYXRpb25hbGUsIGxhIHNvbW1lIHRvdGFsZSBkZSAyNcKgOTcywqDigqwsIGNvcnJlc3BvbmRhbnQgw6AgbOKAmW9jdHJvaSBkZSBjcsOpZGl0cyBk4oCZYWNjb21wYWduZW1lbnQgw6lkdWNhdGlmIMOgIGRlcyDDqXRhYmxpc3NlbWVudHMgZGUgbOKAmWVuc2VpZ25lbWVudCBwdWJsaWMsIGVuIGV4w6ljdXRpb24gZGVzIG1hbmRhdHMgcsOpcGVydG9yacOpcyBhdSB0YWJsZWF1IHN1aXZhbnTCoDoKCkNvbnNpZMOpcmFudCBxdeKAmWVuIGzigJlhYnNlbmNlIHRvdGFsZSBkZSBwacOoY2VzIGp1c3RpZmljYXRpdmVzIMOgIGzigJlhcHB1aSBkZXMgbWFuZGF0cyBwcsOpY2l0w6lzLCBsZXMgY29udHLDtGxlcyBlZmZlY3R1w6lzIHBhciBsZSBjb21wdGFibGUgcHVibGljIHBvcnRhbnQgc3VyIGxhIHZhbGlkaXTDqSBkZXMgY3LDqWFuY2VzIGV0IGxlIGNhcmFjdMOocmUgbGliw6lyYXRvaXJlIGRlcyByw6hnbGVtZW50cyBu4oCZb250IHB1IMOqdHJlIGVmZmVjdHXDqXPCoDsKQsKgLcKgTGVzIHRleHRlcyBldCBsZXVyIGFwcGxpY2F0aW9uCkF0dGVuZHUgcXXigJllbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZcKgMTLCoEIgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBxdWUgbGUgY29tcHRhYmxlIGVzdCB0ZW51IGRlIHbDqXJpZmllciBsYSBxdWFsaXTDqSBkZSBs4oCZb3Jkb25uYXRldXIsIGxlIGNhcmFjdMOocmUgbGliw6lyYXRvaXJlIGR1IHLDqGdsZW1lbnQgZXQgZOKAmWV4ZXJjZXIgbGUgY29udHLDtGxlIGRlIHZhbGlkaXTDqSBkZXMgY3LDqWFuY2VzIHN1ciBsZXMgZMOpcGVuc2VzIHF14oCZaWwgcHJlbmQgZW4gY2hhcmdlwqA7IHF1ZSBs4oCZYXJ0aWNsZSAxMyBkdSBtw6ptZSBwcsOpY2lzZSBxdWUgbGUgY29udHLDtGxlIGRlIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSBjb21wcmVuZCBjZXV4IGRlIGzigJlleGFjdGl0dWRlIGRlcyBjYWxjdWxzIGRlIGxpcXVpZGF0aW9uIGV0IGRlIGxhIHByb2R1Y3Rpb24gZGVzIGp1c3RpZmljYXRpb25zwqA7CkF0dGVuZHUgcXVlIGzigJlpbnN0cnVjdGlvbiBjb2RpZmljYXRyaWNlIG7CsMKgMDMtMDYwLUIgZHUgMTfCoG5vdmVtYnJlwqAyMDAzIHN1c3Zpc8OpZSBwcsOpdm9pdCwgZW4gc2VzIHBhcmFncmFwaGVzIDUuMSBldCA1LjIsIMKrwqBEw6lwZW5zZXMgZOKAmWludGVydmVudGlvbiDigJMgU3VidmVudGlvbnMgZGUgZm9uY3Rpb25uZW1lbnQgb3UgZOKAmWludmVzdGlzc2VtZW50wqDCuyBsYSDCq8KgZMOpY2lzaW9uIGF0dHJpYnV0aXZlIGRlIHN1YnZlbnRpb24gb3UgLSBjb252ZW50aW9uIGTigJlhdHRyaWJ1dGlvbiBldCAtIHJlbGV2w6kgZOKAmWlkZW50aXTDqSBiYW5jYWlyZSBvdSBwb3N0YWwgZHUgYsOpbsOpZmljaWFpcmXCoMK7wqA7CkF0dGVuZHUgcXVlIGzigJlhcnRpY2xlIDMzIGR1IGTDqWNyZXQgc3VzbWVudGlvbm7DqSBwcsOpY2lzZSA6IMKrwqBTb3VzIHLDqXNlcnZlIGRlcyBleGNlcHRpb25zIHByw6l2dWVzIHBhciBsZXMgbG9pcyBvdSByw6hnbGVtZW50cywgbGVzIHBhaWVtZW50cyBuZSBwZXV2ZW50IGludGVydmVuaXIgYXZhbnQsIFsuLi5dIGxhIGTDqWNpc2lvbiBpbmRpdmlkdWVsbGUgZOKAmWF0dHJpYnV0aW9uIGRlIHN1YnZlbnRpb25zIG91IGTigJlhbGxvY2F0aW9uc8KgwrvCoDsKQXR0ZW5kdSBxdWUgbGEgcmVzcG9uc2FiaWxpdMOpIGRlcyBjb21wdGFibGVzIHB1YmxpY3Mgc+KAmWFwcHLDqWNpZSBhdSBtb21lbnQgZHUgcGFpZW1lbnTCoDsgcXXigJnDoCBkw6lmYXV0IGRlIHRvdXRlIGp1c3RpZmljYXRpb24sIGxlIGNvbXB0YWJsZSBu4oCZYSBwYXMgcHUgZXhlcmNlciBsZXMgY29udHLDtGxlcyBwcsOpdnVzIGF1eCBhcnRpY2xlcyAxMiBldCAxMyBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyLCBwcsOpY2l0w6kgOyBxdeKAmWlsIGF1cmFpdCBkb25jIGTDuyBzdXNwZW5kcmUgbGUgcGFpZW1lbnQgZGVzIG1hbmRhdHMgbm9zIDQ4Mjcgw6AgNDgzMCwgZXQgZW4gaW5mb3JtZXIgbOKAmW9yZG9ubmF0ZXVyIGVuIGFwcGxpY2F0aW9uIGRlIGwnYXJ0aWNsZSAzNyBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyLCBwcsOpY2l0w6nCoDsKQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkdSAyMyBmw6l2cmllciAxOTYzIHN1c3Zpc8OpZSwgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBzZSB0cm91dmUgZW5nYWfDqWUgZMOocyBsb3JzcXUndW5lIGTDqXBlbnNlIGEgw6l0w6kgaXJyw6lndWxpw6hyZW1lbnQgcGF5w6llwqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGR1IHBhcmFncmFwaGUgVklJSSwgbGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWwgY291cmVudCDCq8Kgw6DCoGNvbXB0ZXIgZHUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzwqDCu8KgOyAKQXR0ZW5kdSBxdeKAmWVuIGzigJllc3DDqGNlLCBsZSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBlc3QgbGEgbm90aWZpY2F0aW9uIMOgIE0uwqBZIGR1IHLDqXF1aXNpdG9pcmUgZHUgbWluaXN0w6hyZSBwdWJsaWMgOyBxdWUgY2V0dGUgbm90aWZpY2F0aW9uIGEgw6l0w6kgZWZmZWN0dcOpZSBsZSAyOCBqdWluIDIwMTLCoDsgcXVlIGxlIGNvbXB0YWJsZSBlbiBhIGFjY3Vzw6kgcsOpY2VwdGlvbiBsZSAyOcKganVpbsKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoMKgY29tcHRlciBkZSBjZXR0ZSBkZXJuacOocmUgZGF0ZcKgOwpQYXIgY2VzIG1vdGlmcywKTS7CoFkgZXN0IGNvbnN0aXR1w6kgZMOpYml0ZXVyIGVudmVycyBs4oCZRXRhdCBkZSBsYSBzb21tZSBkZSB2aW5ndCBjaW5xIG1pbGxlIG5ldWYgY2VudCBzb2l4YW50ZSBkb3V6ZSBldXJvcyAoMjXCoDk3MsKg4oKsKSBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2XCoDIwMDgsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSAyOSBqdWluwqAyMDEyLgpDaGFyZ2UgbsKwwqAxOCBkdSByw6lxdWlzaXRvaXJlIDIwMTItNDAgUlEtREIKQcKgLcKgTGVzIGZhaXRzCkF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA4CkNvbnNpZMOpcmFudCBxdWUgZGFucyBzb24gcsOpcXVpc2l0b2lyZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBxdWUgbGUgcGFpZW1lbnQgZGUgcHJpbWVzIGTigJlhY3Rpdml0w6kgZGVzIGNvcnBzIGRlIGzigJlpbnNwZWN0aW9uIGV0IGRlcyBjb250csO0bGV1cnMgZHUgdHJhdmFpbCBhIGRvbm7DqSBsaWV1IGVuIDIwMDggw6AgZGVzIGTDqXBhc3NlbWVudHMsIMOgIGhhdXRldXIgZGUgMjjCoDU1Myw5NsKg4oKsLCBkZXMgcGxhZm9uZHMgcsOpZ2xlbWVudGFpcmVzIGludHJvZHVpdHMgcGFyIGxlcyBhcnLDqnTDqXMgZGVzIDI0IG5vdmVtYnJlIDIwMDAgZXQgMjYgbWFpIDE5OTcsIGRhbnMgbGEgbGltaXRlIGZpeMOpZSBwYXIgbGVzIGTDqWNyZXRzIG7CsMKgOTktNzg3IGR1IDEzwqBzZXB0ZW1icmUgMTk5OSBldCBuwrDCoDk3LTUzMCBkdSAyNsKgbWFpwqAxOTk3wqA7CkNvbnNpZMOpcmFudCBxdWUgbGVzIMOpdGF0cyBsaXF1aWRhdGlmcyBwcm9kdWl0cyBwYXIgbGVzIGdlc3Rpb25uYWlyZXMgYXUgY29tcHRhYmxlIHB1YmxpYyDDqXRhaWVudCBzdWZmaXNhbW1lbnQgZMOpdGFpbGzDqXMgcG91ciBwZXJtZXR0cmUgYXUgY29tcHRhYmxlIGRlIHbDqXJpZmllciBs4oCZZXhhY3RlIGFwcGxpY2F0aW9uIGRlcyB0ZXh0ZXMgZW4gdmlndWV1csKgOyAKQ29uc2lkw6lyYW50IHF14oCZYXUgdnUgZGUgY2VzIHRleHRlcyBldCBwacOoY2VzIGp1c3RpZmljYXRpdmVzLCBsZSBjb21wdGFibGUgc2UgZGV2YWl0IGRlIGNvbnRyw7RsZXIgbCdleGFjdGl0dWRlIGRlcyBjYWxjdWxzIGRlIGxpcXVpZGF0aW9uIGRlcyBwcmltZXMgZOKAmWFjdGl2aXTDqSBkZXMgZm9uY3Rpb25uYWlyZXMgYXBwYXJ0ZW5hbnQgYXV4IGNvcnBzIGRlIGzigJlpbnNwZWN0aW9uIGR1IHRyYXZhaWwgZXQgZGVzIGNvbnRyw7RsZXVycyBkdSB0cmF2YWlsIGV0IGRvbmMsIHMnYXNzdXJlciBxdWUgbGVzIHLDqXN1bHRhdHMgZGUgbGEgbGlxdWlkYXRpb24gw6l0YWllbnQgY29uZm9ybWVzIGF1eCBiYXNlcyByw6lnbGVtZW50YWlyZXMgZXQgbmUgZMOpcGFzc2FpZW50IHBhcyBsZXMgbGltaXRlcyBhbm51ZWxsZXMgcHLDqXZ1ZXMgcGFyIGxhIHLDqWdsZW1lbnRhdGlvbiwgZW4gdGVuYW50IGNvbXB0ZSBkZXMgw6l2ZW50dWVscyByYXBwZWxzIGxlIGNhcyDDqWNow6lhbnTCoDsKQ29uc2lkw6lyYW50IHF14oCZaWwgYXBwYXJhcmHDrnQgcXVlIGxlIGNvbXB0YWJsZSBu4oCZYSBwYXMgY29udHLDtGzDqSBsZSByZXNwZWN0IGRlcyBwbGFmb25kcyByw6lnbGVtZW50YWlyZXMgZXQgcXVlLCBwb3VyIGxlcyBhZ2VudHMgc8OpbGVjdGlvbm7DqXMsIGxlIG1vbnRhbnQgZGVzIHZlcnNlbWVudHMgZW4gMjAwOCBkZSBsYSBwcmltZSBk4oCZYWN0aXZpdMOpIGVzdCBzdXDDqXJpZXVyIGF1IHBsYWZvbmQgcsOpZ2xlbWVudGFpcmUgZml4w6kgcG91ciBsYSBwcmltZSBk4oCZYWN0aXZpdMOpIGRlcyBncmFkZXMgZGUgZGlyZWN0ZXVyIGR1IHRyYXZhaWwgZXQgZGUgY29udHLDtGxldXIgZHUgdHJhdmFpbCAoZGUgY2xhc3NlcyBleGNlcHRpb25uZWxsZSwgc3Vww6lyaWV1cmUgZXQgbm9ybWFsZSksIHRlbHMgcXXigJlpbCByw6lzdWx0ZSwgcG91ciBsZSBncmFkZSBkZSBkaXJlY3RldXIsIGR1IGTDqWNyZXQgbsKwwqA5OS03ODcgZHUgMTMgc2VwdGVtYnJlIDE5OTkgbW9kaWZpw6kgZXQgZGVzIGFycsOqdMOpcyBtaW5pc3TDqXJpZWxzIGR1IDI0wqBub3ZlbWJyZcKgMjAwMCBldCwgcG91ciBsZXMgZ3JhZGVzIGRlIGNvbnRyw7RsZXVycywgZHUgZMOpY3JldCBuwrDCoDk3LTUzMCBkdSAyNsKgbWFpwqAxOTk3IG1vZGlmacOpIGV0IGRlIGzigJlhcnLDqnTDqSBtaW5pc3TDqXJpZWwgZHUgMjYgbWFpIDE5OTfCoDsKQ29uc2lkw6lyYW50IHF1ZSBsZXMgZMOpcGFzc2VtZW50cyBkZSBwbGFmb25kcyByw6lnbGVtZW50YWlyZXMsIHBvdXIgbGVzIGdyYWRlcyBkZSBkaXJlY3RldXIgZXQgY2V1eCBkZSBjb250csO0bGV1ciBkZSBjbGFzc2VzIGV4Y2VwdGlvbm5lbGxlLCBzdXDDqXJpZXVyZSBldCBub3JtYWxlLCBk4oCZdW4gbW9udGFudCB0b3RhbCBkZSAyOMKgNTUzLDk2wqDigqwsIHPigJnDqXRhYmxpcmFpZW50LCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOCwgY29tbWUgYXV4IHRhYmxlYXV4IHN1aXZhbnRzwqA6CkdyYWRlIGRlIGRpcmVjdGV1ciBkdSB0cmF2YWlswqAgOgoKR3JhZGUgZGUgY29udHLDtGxldXIgZHUgdHJhdmFpbCBkZSBjbGFzc2UgZXhjZXB0aW9ubmVsbGXCoDoKCgpHcmFkZSBkZSBjb250csO0bGV1ciBkdSB0cmF2YWlsIGRlIGNsYXNzZSBzdXDDqXJpZXVyZcKgIDoKCkdyYWRlIGRlIGNvbnRyw7RsZXVyIGR1IHRyYXZhaWwgZGUgY2xhc3NlIG5vcm1hbGXCoCA6CkIgLSBMZXMgdGV4dGVzIGV0IGxldXIgYXBwbGljYXRpb24KQXR0ZW5kdSBxdeKAmWF1eCB0ZXJtZXMgZGVzIGFydGljbGVzIDEgZXQgMiBkdSBkw6ljcmV0IG7CsMKgOTktNzg3IGR1IDEzwqBzZXB0ZW1icmXCoDE5OTksIMKrwqBsZXMgZm9uY3Rpb25uYWlyZXMgZHUgY29ycHMgZGUgbOKAmWluc3BlY3Rpb24gZHUgdHJhdmFpbCBwZXLDp29pdmVudCB1bmUgcHJpbWUgZOKAmWFjdGl2aXTDqcKgwrvCoDsgcXVlIGzigJlhcnLDqnTDqSBkdSAyNCBub3ZlbWJyZSAyMDAwLCBmaXhhbnQgbGVzIG1vbnRhbnRzIG1veWVucyBhbm51ZWxzIGRlIGxhIHByaW1lIGQnYWN0aXZpdMOpIGF0dHJpYnXDqWUgYXV4IGZvbmN0aW9ubmFpcmVzIGR1IGNvcnBzIGRlIGwnaW5zcGVjdGlvbiBkdSB0cmF2YWlsLCBwcsOpdm9pdCDCq8KgbGVzIG1vbnRhbnRzIG1veWVucyBhbm51ZWxzIGRlIGxhIHByaW1lIGQnYWN0aXZpdMOpIHByw6l2dWUgw6AgbCdhcnRpY2xlwqAxZXLCoGR1IGTDqWNyZXQgZHUgMTPCoHNlcHRlbWJyZcKgMTk5OSBzdXN2aXPDqSBzb250IGZpeMOpcyBhaW5zaSBxdSdpbCBzdWl0IDogZGlyZWN0ZXVycyBkdSB0cmF2YWlsIDogNDTCoDIzN8KgRiAgWy4uLl3CoDsgcXXigJllbiBvdXRyZSBs4oCZYXJyw6p0w6kgZHUgMjQgbm92ZW1icmUgMjAwMCwgcG9ydGFudCBkw6lwbGFmb25uZW1lbnQgZGUgbGEgcHJpbWUgZCdhY3Rpdml0w6kgYWxsb3XDqWUgYXV4IGZvbmN0aW9ubmFpcmVzIGRlcyBjb3JwcyBkZSBsJ2luc3BlY3Rpb24gZHUgdHJhdmFpbCBldCBkZSBsJ2luc3BlY3Rpb24gZGUgbGEgZm9ybWF0aW9uIHByb2Zlc3Npb25uZWxsZSwgcHLDqWNpc2UgwqvCoGxlIG1vbnRhbnQgbWF4aW11bSBhbm51ZWwgZGVzIGF0dHJpYnV0aW9ucyBpbmRpdmlkdWVsbGVzIGTDqXRlcm1pbsOpZXMgcGFyIGdyYWRlIGV0IHZlcnPDqWVzIGF1IHRpdHJlIGRlIGxhIHByaW1lIGQnYWN0aXZpdMOpLCBpbnN0aXR1w6llcyBwYXIgbGVzIGTDqWNyZXRzIGR1IDEzIHNlcHRlbWJyZSAxOTk5IHN1c3Zpc8OpcywgcGV1dCDDqnRyZSBtYWpvcsOpIGRlIDMwwqAlIGVuIGZhdmV1ciBkZSAyNcKgJSBhdSBwbHVzIGRlIGwnZWZmZWN0aWYgZGUgY2hhY3VuIGRlcyBncmFkZXMgZGVzIGNvcnBzIGNvbnNpZMOpcsOpc8KgwrvCoDsKQXR0ZW5kdSBxdeKAmWF1eCB0ZXJtZXMgZGVzIGFydGljbGVzIDEgZXQgMiBkdSBkw6ljcmV0IG7CsMKgOTctNTMwIGR1IDI2wqBtYWnCoDE5OTcsIGxlcyBmb25jdGlvbm5haXJlcyBkdSBjb3JwcyBkZXMgY29udHLDtGxldXJzIGR1IHRyYXZhaWwsIHBlcsOnb2l2ZW50IHVuZSBwcmltZSBk4oCZYWN0aXZpdMOpIGRvbnQgwqvCoGxlcyBtb250YW50cyBtb3llbnMgYW5udWVscyBwYXIgZ3JhZGUgc2VydmFudCBkZSBiYXNlIGF1IGNhbGN1bCBkZXMgY3LDqWRpdHMgcG91ciBsJ2F0dHJpYnV0aW9uIGRlIGxhIHByaW1lIHByw6l2dWUgw6AgbCdhcnRpY2xlIDFlciBkdSBwcsOpc2VudCBkw6ljcmV0IHNvbnQgZml4w6lzIHBhciBhcnLDqnTDqSBjb25qb2ludCBkdSBtaW5pc3RyZSBjaGFyZ8OpIGRlcyB0cmFuc3BvcnRzLCBkdSBtaW5pc3RyZSBjaGFyZ8OpIGR1IHRyYXZhaWwsIGR1IG1pbmlzdHJlIGNoYXJnw6kgZGUgbCdhZ3JpY3VsdHVyZSwgZHUgbWluaXN0cmUgY2hhcmfDqSBkZSBsYSBmb25jdGlvbiBwdWJsaXF1ZSBldCBkdSBtaW5pc3RyZSBjaGFyZ8OpIGR1IGJ1ZGdldMKgOyBxdWUgbOKAmWFycsOqdMOpIGR1IDI2wqBtYWnCoDE5OTcsIGZpeGFudCBsZXMgbW9udGFudHMgbW95ZW5zIGFubnVlbHMgZGUgbGEgcHJpbWUgZCdhY3Rpdml0w6kgYXR0cmlidcOpZSBhdXggZm9uY3Rpb25uYWlyZXMgZHUgY29ycHMgZGVzIGNvbnRyw7RsZXVycyBkdSB0cmF2YWlsLCBwcsOpdm9pdCDCq8KgbGVzIG1vbnRhbnRzIG1veWVucyBhbm51ZWxzIGRlIGxhIHByaW1lIGQnYWN0aXZpdMOpIHByw6l2dWUgw6AgbCdhcnRpY2xlIDFlcsKgZHUgZMOpY3JldCBkdSAyNiBtYWkgMTk5NyBzdXN2aXPDqSBzb250IGZpeMOpcyBhaW5zaSBxdSdpbCBzdWl0IDogY29udHLDtGxldXJzIGR1IHRyYXZhaWwgZGUgY2xhc3NlIGV4Y2VwdGlvbm5lbGxlIDogMTcgNzg0IEYgOyBjb250csO0bGV1cnMgZHUgdHJhdmFpbCBkZSBjbGFzc2Ugc3Vww6lyaWV1cmUgOiAxNyA0ODUgRiA7IGNvbnRyw7RsZXVycyBkdSB0cmF2YWlsIDogMTQgNzU1IEbCoMK7wqA7CkF0dGVuZHUsIGVuIGNvbnPDqXF1ZW5jZSwgcXVlIGxlIHBsYWZvbmQgcsOpZ2xlbWVudGFpcmUgZGUgbGEgcHJpbWUgZOKAmWFjdGl2aXTDqSBkZXMgZm9uY3Rpb25uYWlyZXMgYXBwYXJ0ZW5hbnQgYXV4IGNvcnBzIGRlIGzigJlpbnNwZWN0aW9uIGV0IGRlcyBjb250csO0bGV1cnMgZHUgdHJhdmFpbCBz4oCZw6l0YWJsaXQgY29tbWUgYXUgdGFibGVhdSBzdWl2YW50wqA6CgpBdHRlbmR1IHF1ZSBs4oCZaW5zdHJ1Y3Rpb24gY29kaWZpY2F0cmljZSBuwrAgMDMtMDYwLUIgZHUgMTfCoG5vdmVtYnJlwqAyMDAzIHN1c3Zpc8OpZSBwcsOpdm9pdCwgZW4gc29uIHBhcmFncmFwaGUgMy4zLjEuMSDCqyBJbmRlbW5pdMOpcyAtIENhcyBnw6luw6lyYWzCoMK7IHF1ZSDCq8KgZG9pdmVudCDDqnRyZSBmb3VybmlzIGF1IGNvbXB0YWJsZSwgw6AgbGEgZGF0ZSBkdSBwYWllbWVudCwgbGHCoGTDqWNpc2lvbiBk4oCZYXR0cmlidXRpb24gZXQgbOKAmcOpdGF0IGxpcXVpZGF0aWYgZXQgbm9taW5hdGlmIGZhaXNhbnQgcsOpZsOpcmVuY2UgYXUgdGV4dGUgaW5zdGl0dXRpZiBkZSBs4oCZaW5kZW1uaXTDqSBldCDDoCBs4oCZYXJyw6p0w6kgZml4YW50IGxlKHMpIHRhdXggZW4gdmlndWV1csKgwrsgw6l0YW50IHByw6ljaXPDqSBxdWUgwqvCoGzigJnDqXRhdCBsaXF1aWRhdGlmIGRvaXQgw6p0cmUgc3VmZmlzYW1tZW50IGTDqXRhaWxsw6kgcG91ciBwZXJtZXR0cmUgYXUgY29tcHRhYmxlIGR1IFRyw6lzb3IgZGUgdsOpcmlmaWVyIGzigJlleGFjdGUgYXBwbGljYXRpb24gZHUgdGV4dGUgZW4gdmlndWV1csKgwrvCoDsKQXR0ZW5kdSBxdWUgbGEgcmVzcG9uc2FiaWxpdMOpIGRlcyBjb21wdGFibGVzIHB1YmxpY3Mgc+KAmWFwcHLDqWNpZSBhdSBtb21lbnQgZHUgcGFpZW1lbnTCoDsgcXVlIGxlIGNvbXB0YWJsZSBu4oCZYSBwYXMgZXhlcmPDqSBsZXMgY29udHLDtGxlcyBxdWksIHNlbG9uIGxlcyBkaXNwb3NpdGlvbnMgY29tYmluw6llcyBkZXMgYXJ0aWNsZXMgMTIgZXQgMTMgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBkdSByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgc3Vzdmlzw6ksIHBvcnRlbnQgbm90YW1tZW50IHN1ciBs4oCZZXhhY3RpdHVkZSBkZXMgY2FsY3VscyBkZSBsaXF1aWRhdGlvbiA7IHF14oCZaWwgYXVyYWl0IGRvbmMgZMO7IHN1c3BlbmRyZSBsZXMgcGFpZW1lbnRzIHN1c21lbnRpb25uw6lzIGV0IGVuIGluZm9ybWVyIGzigJlvcmRvbm5hdGV1ciwgZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgMzcgZHUgZMOpY3JldCBkdSAyOSBkw6ljZW1icmUgMTk2MiwgcHLDqWNpdMOpwqA7CkF0dGVuZHUgcXXigJllbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZHUgMjMgZsOpdnJpZXIgMTk2MyBzdXN2aXPDqWUsIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgc2UgdHJvdXZlIGVuZ2Fnw6llIGTDqHMgbG9yc3F14oCZdW5lIGTDqXBlbnNlIGEgw6l0w6kgaXJyw6lndWxpw6hyZW1lbnQgcGF5w6llwqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGR1IHBhcmFncmFwaGUgVklJSSwgbGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWwgY291cmVudCDCq8KgIMOgIGNvbXB0ZXIgZHUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzwqDCu8KgOyAKQXR0ZW5kdSBxdeKAmWVuIGzigJllc3DDqGNlLCBsZSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBlc3QgbGEgbm90aWZpY2F0aW9uIMOgIE0uwqBZIGR1IHLDqXF1aXNpdG9pcmXCoGR1IG1pbmlzdMOocmUgcHVibGljIDsgcXVlIGNldHRlIG5vdGlmaWNhdGlvbiBhIMOpdMOpIGVmZmVjdHXDqWUgbGUgMjgganVpbiAyMDEywqA7IHF1ZSBsZSBjb21wdGFibGUgZW4gYSBhY2N1c8OpIHLDqWNlcHRpb24gbGUgMjkganVpbsKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoCBjb21wdGVyIGRlIGNldHRlIGRlcm5pw6hyZSBkYXRlwqA7ClBhciBjZXMgbW90aWZzLApNLsKgWSBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIHZpbmd0IGh1aXQgbWlsbGUgY2lucSBjZW50IGNpbnF1YW50ZSB0cm9pcyBldXJvcyBldCBxdWF0cmUgdmluZ3Qgc2VpemUgY2VudGltZXMgKDI4wqA1NTMsOTbCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDgsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdcKgMjnCoGp1aW7CoDIwMTIuCgpDaGFyZ2UgbsKwwqAxOSBkdSByw6lxdWlzaXRvaXJlIDIwMTItNDAgUlEtREIKQSAtIExlcyBmYWl0cwpBdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOApDb25zaWTDqXJhbnQgcXVlIGRhbnMgc29uIHLDqXF1aXNpdG9pcmUgbGUgUHJvY3VyZXVyIGfDqW7DqXJhbCBhIHJlbGV2w6kgcXXigJl1bmUgaW5kZW1uaXTDqSDCq8KgdGVtcG9yYWlyZSBkw6lncmVzc2l2ZSBkZSByZXN0cnVjdHVyYXRpb27CoMK7IGF2YWl0IMOpdMOpIHBhecOpZSBlbiAyMDA4LCDDoCBoYXV0ZXVyIGRlIDY2wqAwODAsNjDCoOKCrCwgYXV4IGNoZWZzIGRlIHBvc3RlcyBjb21wdGFibGVzIG5vbiBjZW50cmFsaXNhdGV1cnMgc3VpdGUgw6AgdW5lIG9ww6lyYXRpb24gZGUgcmVzdHJ1Y3R1cmF0aW9uwqA7CkNvbnNpZMOpcmFudCBxdWUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uIHN1ciBwbGFjZSwgbGEgZGlyZWN0aW9uIHLDqWdpb25hbGUgZGVzIGZpbmFuY2VzIHB1YmxpcXVlcyBhIGZvdXJuaSBsYSBmaWNoZSB0ZWNobmlxdWUgcmVsYXRpdmUgw6AgbOKAmUlURFIsIGxhIGxldHRyZSBjaXJjdWxhaXJlwqBER0NQIGR1IDI0IGphbnZpZXIgMjAwNCByZWxhdGl2ZSBhdSBkaXNwb3NpdGlmIGTigJlhY2NvbXBhZ25lbWVudCBkZXMgb3DDqXJhdGlvbnMgZGUgcmVzdHJ1Y3R1cmF0aW9uIGR1IHLDqXNlYXUgZXQgc29uIGFubmV4ZSAyIGV0IHVuIGV4dHJhaXQgZGUgbOKAmWludHJhbmV0IMKrwqBNYWdlbGxhbsKgwrsgc3VyIGxlcyBjb25zw6lxdWVuY2VzIGluZGVtbml0YWlyZXMgZHUgY2xhc3NlbWVudCBkZXMgcG9zdGVzIGNvbXB0YWJsZXMgbm9uIGNlbnRyYWxpc2F0ZXVycyBhdSAxZXLCoGphbnZpZXIgMjAwOCBldCBhIHByw6ljaXPDqSBxdWUgbGVzIHNvbW1lcyB2ZXJzw6llcyBhdSB0aXRyZSBkZSBs4oCZSVREUiBhdHRlaW5kcmFpZW50IDQ1wqA3MzYsNDYg4oKsIGVuIDIwMDjCoDsgCkNvbnNpZMOpcmFudCBxdWUgbGUgY29tcHRhYmxlIGEgdHJhbnNtaXMgbGVzIMKrwqBoaXN0b3JpcXVlcyBkZXMgc29tbWVzIHBhecOpZXMgb3UgcmV0ZW51ZXPCoMK7IGRlcyBhZ2VudHMgYsOpbsOpZmljaWFpcmVzIGV0IGTDqWNsYXLDqSwgw6AgcHJvcG9zIGRlcyDDqWNhcnRzIHJlbGV2w6lzLCBxdWUgwqvCoGxlcyBhZ2VudHMgcG91ciBsZXNxdWVscyB2b3VzIGF2ZXogY29uc3RhdMOpIHVuIMOpY2FydCBvbnQgY29tbWVuY8OpIMOgIHBlcmNldm9pciBsYSBwcmltZSBJVERSIGVuIDIwMDfCoDsgcXVlIGNldHRlIGRlcm5pw6hyZSBhIGNvbnRpbnXDqSDDoCDDqnRyZSB2ZXJzw6llIGF1IGNvdXJzIGRlIGwnYW5uw6llIDIwMDggc2FucyBmYWlyZSBsJ29iamV0IGQndW4gbm91dmVhdSBtb3V2ZW1lbnQgZGUgbWlzZSBlbiBwYWllbWVudMKgwrvCoDsgCkNvbnNpZMOpcmFudCBxdWUgbGVzIG91dGlscyBkZSByZXF1w6p0YWdlIG1pcyDDoCBsYSBkaXNwb3NpdGlvbiBkdSBzZXJ2aWNlIGxpYWlzb24tcsOpbXVuw6lyYXRpb25zIG5lIHBlcm1ldHRlbnQgcGFzIGRlIMKrwqBkw6l0ZWN0ZXLCoMK7IGxlcyBhZ2VudHMgYsOpbsOpZmljaWFudCBkJ3VuZSBpbmRlbW5pdMOpIHNpIGNldHRlIGRlcm5pw6hyZSBuJ2EgcGFzIGZhaXQgbCdvYmpldCBkJ3VuIG1vdXZlbWVudCBkZSBwYXllIGF1IGNvdXJzIGRlIGwnYW5uw6llIGNvbnNpZMOpcsOpZcKgOwpDb25zaWTDqXJhbnQgcXVlIGxlIGNvbXB0YWJsZSBhIHJlY29ubnUgcXVlIGxlcyBhZ2VudHMgY29uY2VybsOpcyBvbnQgZWZmZWN0aXZlbWVudCBwZXLDp3UgYXUgY291cnMgZGUgbCdhbm7DqWUgMjAwOCwgbGEgcHJpbWUgSVREUiBwb3VyIGxlcyBtb250YW50cyBpbmRpcXXDqXMgZGFucyBsZSB0YWJsZWF1IGNpLWRlc3NvdXPCoDsKQ29uc2lkw6lyYW50IHF1ZSBs4oCZZXhwbG9pdGF0aW9uIGRlcyBmaWNoaWVycyBkZSBsYSBwYXllLCBtZW7DqWUgcGFyIGxhIENvdXIgcG91ciBxdWFudGlmaWVyIGxlcyBzb21tZXMgaXJyw6lndWxpw6hyZW1lbnQgdmVyc8OpZXMgIG1vbnRyZSwgcXXigJlhdSB0b3RhbCwgNjbCoDA4MCw2MMKg4oKsIG9udCDDqXTDqSB2ZXJzw6lzIGF1eCBjaGVmcyBkZSBwb3N0ZXMgY29tcHRhYmxlcywgYXUgdGl0cmUgZGUgbOKAmWFubsOpZSAyMDA4LCBjb21tZSBkw6l0YWlsbMOpIGF1IHRhYmxlYXUgc3VpdmFudMKgOiAKCkNvbnNpZMOpcmFudCBxdWUgbGUgY29tcHRhYmxlIG7igJlhIHRyYW5zbWlzIHF1ZSBsYSBsZXR0cmUgY2lyY3VsYWlyZSBuwrDCoENELTE4OTEgZHUgMWVywqBhb8O7dMKgMjAwMyBkdSBkaXJlY3RldXIgZ8OpbsOpcmFsIGRlIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUgcmVsYXRpdmUgw6DCoGxhIHJlc3RydWN0dXJhdGlvbiBkdSByw6lzZWF1IGR1IFRyw6lzb3IgUHVibGljIGVuIG1pbGlldSBydXJhbCwgdW5lIGZpY2hlIGV4dHJhaXRlIGRlIGzigJlpbnRyYW5ldCDCq8KgTWFnZWxsYW7CoMK7IHN1ciBsZXMgY29uZGl0aW9ucyBkZSBtaXNlIGVuIMWTdXZyZSBkZXMgcmVzdHJ1Y3R1cmF0aW9ucyBlbiBtaWxpZXUgcnVyYWwsIGV0IGxhIGxldHRyZSBjaXJjdWxhaXJlIG7CsMKgMDMxMDIgZHUgMjMgamFudmllciAyMDA0LCBhZmluIGRlIGp1c3RpZmllciBkdSBmb25kZW1lbnQganVyaWRpcXVlIGRlIGzigJlJVERSwqA7CkNvbnNpZMOpcmFudCBxdWUgZGFucyBzYSByw6lwb25zZSBkdSAyNCBvY3RvYnJlIDIwMTIsIGxlIGNvbXB0YWJsZSBpbmRpcXVlIMOgwqBub3V2ZWF1IHF1ZSBs4oCZaW5kZW1uaXTDqSDCq8KgdGVtcG9yYWlyZSBkw6lncmVzc2l2ZSBkZSByZXN0cnVjdHVyYXRpb27CoMK7IChJVERSKSBhIGZhaXQgbCdvYmpldCBkJ3VuZSBjaXJjdWxhaXJlIERHQ1AgZHUgMjQgamFudmllciAyMDA0LCBldCwgcXXigJlpbCBjb25zaWTDqHJlIHF14oCZZW4gwqvCoHNhIHF1YWxpdMOpIGRlIGZvbmN0aW9ubmFpcmUsIGlsIMOpdGFpdCBkb25jIHNvdW1pcyDDoCB1biBkZXZvaXIgZCdvYsOpaXNzYW5jZSBoacOpcmFyY2hpcXVlIGF1cXVlbCBpbCBz4oCZZXN0IGNvbmZvcm3DqcKgwrvCoDsKQ29uc2lkw6lyYW50IHF1ZSBsZSAgZGV2b2lyIGQnb2LDqWlzc2FuY2UgaGnDqXJhcmNoaXF1ZSBkdSBjb21wdGFibGUgbmUgZG9pdCBhdWN1bmVtZW50IGludGVyZsOpcmVyIGF2ZWMgbGVzIGNvbnRyw7RsZXMgYXV4cXVlbHMgY2VsdWkgY2kgZG9pdCBwcm9jw6lkZXIgZW4gdmVydHUgZGUgbOKAmWFydGljbGXCoDEyIEIgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZSAxOTYyIHBvcnRhbnQgcsOoZ2xlbWVudCBnw6luw6lyYWwgc3VyIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUsIGxlcXVlbCBwcsOpdm9pdCBxdWUgbGUgY29tcHRhYmxlIGVzdCB0ZW51IGRlIHbDqXJpZmllciBsZSBjYXJhY3TDqHJlIGxpYsOpcmF0b2lyZSBkdSByw6hnbGVtZW50IGV0IGTigJlleGVyY2VyIGxlIGNvbnRyw7RsZSBkZSB2YWxpZGl0w6kgZGVzIGNyw6lhbmNlcyBzdXIgbGVzIGTDqXBlbnNlcyBxdeKAmWlsIHByZW5kIGVuIGNoYXJnZcKgOyBldCBkZSBs4oCZYXJ0aWNsZSAxMyBkdSBtw6ptZSBkw6ljcmV0IHF1aSBwcsOpY2lzZSBxdWUgbGUgY29udHLDtGxlIGRlIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSBjb21wcmVuZCBjZXV4IGRlIGzigJlleGFjdGl0dWRlIGRlcyBjYWxjdWxzIGRlIGxpcXVpZGF0aW9uIGV0IGRlIGxhIHByb2R1Y3Rpb24gZGVzIGp1c3RpZmljYXRpb25zwqA7IHF1J8OgIGNlIHRpdHJlLCBhdmFudCBkZSBwYXllciB1bmUgaW5kZW1uaXTDqSwgbGUgY29tcHRhYmxlICBkb2l0IGV4aWdlciBsYSByw6lmw6lyZW5jZSBkdSB0ZXh0ZSBsYSBmb25kYW50LCByw6lmw6lyZW5jZSDDoCBkw6lmYXV0IGRlIGxhcXVlbGxlIGlsIG5lIHBldXQgcHJvY8OpZGVyIMOgIGxhIHbDqXJpZmljYXRpb24gZGUgbOKAmWV4YWN0ZSBsaXF1aWRhdGlvbiBkZSBs4oCZaW5kZW1uaXTDqSBlbsKgY2F1c2XCoDsKQ29uc2lkw6lyYW50IHF14oCZZW4gcHJvZHVpc2FudCBsZXMgcGnDqGNlcyBwcsOpY2l0w6llcyBjb21tZSBqdXN0aWZpY2F0aW9uIGRlcyB2ZXJzZW1lbnRzIGRlIGzigJlJVERSLCBsZSBjb21wdGFibGUgcHVibGljIGTDqW1vbnRyZSBxdeKAmWlsIGEgZWZmZWN0aXZlbWVudCBhcHBsaXF1w6kgbGVzIGluc3RydWN0aW9ucyBkZSBsYSBkaXJlY3Rpb24gZ8OpbsOpcmFsZSBkZSBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlIHJlbGF0aXZlcyDDoCBs4oCZSVREUsKgOwpDb25zaWTDqXJhbnQgdG91dGVmb2lzIHF1ZSBsZSBjb21wdGFibGUgbmUgc+KAmWVzdCBwYXMgYWNxdWl0dMOpIGR1IGNvbnRyw7RsZSBwb3J0YW50IHN1ciBsYSB2YWxpZGl0w6kgZGVzIGluZGVtbml0w6lzIHF14oCZaWwgbHVpIGEgw6l0w6kgZGVtYW5kw6kgZGUgdmVyc2VywqA7IHF1ZSBjZSBjb250csO0bGUsIHJlcXVpZXJ0IHF14oCZb3V0cmUgbGVzIGp1c3RpZmljYXRpb25zIHByw6l2dWVzIHBhciBsYSBub21lbmNsYXR1cmUgYXBwbGljYWJsZSBhdXggZMOpcGVuc2VzIGRlIHBlcnNvbm5lbCwgbGUgY29tcHRhYmxlIHPigJlhc3N1cmUgZGUgbGEgcsOpZ3VsYXJpdMOpIGRlIGNlcyBpbmRlbW5pdMOpc8KgOwoKQsKgLSBMZXMgdGV4dGVzIGV0IGxldXIgYXBwbGljYXRpb24KQXR0ZW5kdSBxdWUgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy0wNjAtQiBkdSAxN8Kgbm92ZW1icmXCoDIwMDMgc3Vzdmlzw6llIHByw6l2b2l0LCBlbiBzb24gcGFyYWdyYXBoZSAzLjMuMS4xIMKrIEluZGVtbml0w6lzIC0gQ2FzIGfDqW7DqXJhbMKgwrsgcXVlIGRvaXZlbnQgw6p0cmUgZm91cm5pcyBhdSBjb21wdGFibGUsIMOgIGxhIGRhdGUgZHUgcGFpZW1lbnQsIGxhIMKrwqBkw6ljaXNpb24gZOKAmWF0dHJpYnV0aW9uIGV0IGzigJnDqXRhdCBsaXF1aWRhdGlmIGV0IG5vbWluYXRpZiBmYWlzYW50IHLDqWbDqXJlbmNlIGF1IHRleHRlIGluc3RpdHV0aWYgZGUgbOKAmWluZGVtbml0w6kgZXQgw6AgbOKAmWFycsOqdMOpIGZpeGFudCBsZShzKSB0YXV4IGVuIHZpZ3VldXLCoMK7IMOpdGFudCBwcsOpY2lzw6kgcXVlIMKrwqBs4oCZw6l0YXQgbGlxdWlkYXRpZiBkb2l0IMOqdHJlIHN1ZmZpc2FtbWVudCBkw6l0YWlsbMOpIHBvdXIgcGVybWV0dHJlIGF1IGNvbXB0YWJsZSBkdSBUcsOpc29yIGRlIHbDqXJpZmllciBs4oCZZXhhY3RlIGFwcGxpY2F0aW9uIGR1IHRleHRlIGVuIHZpZ3VldXLCoMK7wqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGRlIGzigJlhcnRpY2xlIDIwIGRlIGxhIGxvacKgbsKwwqA4My02MzQgZHUgMTPCoGp1aWxsZXQgMTk4Mywgc3Vzdmlzw6llLCDCq8KgbGVzIGZvbmN0aW9ubmFpcmVzIG9udCBkcm9pdCwgYXByw6hzIHNlcnZpY2UgZmFpdCwgw6AgdW5lIHLDqW11bsOpcmF0aW9uIGNvbXByZW5hbnQgbGUgdHJhaXRlbWVudCwgbOKAmWluZGVtbml0w6kgZGUgcsOpc2lkZW5jZSwgbGUgc3VwcGzDqW1lbnQgZmFtaWxpYWwgZGUgdHJhaXRlbWVudCBhaW5zaSBxdWUgbGVzIGluZGVtbml0w6lzIGluc3RpdHXDqWVzIHBhciB1biB0ZXh0ZSBsw6lnaXNsYXRpZiBvdSByw6lnbGVtZW50YWlyZcKgwrvCoDsKQXR0ZW5kdSBxdWUgbOKAmWFydGljbGUgMiBkdSBkw6ljcmV0IGR1IDE3IGp1aWxsZXQgMTk4NSBwcsOpY2lzZSBjZXR0ZSBkaXNwb3NpdGlvbsKgOiDCq8KgbGVzIGZvbmN0aW9ubmFpcmVzIG1lbnRpb25uw6lzIMOgIGwnYXJ0aWNsZSAxZXIgY2ktZGVzc3VzIG5lIHBldXZlbnQgYsOpbsOpZmljaWVyIGQnYXVjdW5lIGluZGVtbml0w6kgYXV0cmUgcXVlIGNlbGxlcyBmaXjDqWVzIHBhciB1bmUgbG9pIG91IHVuIGTDqWNyZXQsIHNvdXMgcsOpc2VydmUgZGVzIGRpc3Bvc2l0aW9ucyBwcsOpdnVlcyBwYXIgbGVzIGFydGljbGVzIDExMSBldCAxMTUsIGFsaW7DqWEgMiwgZGUgbGEgbG9pIGR1IDI2IGphbnZpZXIgMTk4NCBwcsOpY2l0w6llIGV0IHBhciBsJ2FydGljbGXCoDMwIGRlIGxhIGxvaSBuwrDCoDgyLTIxMyBkdSAyIG1hcnMgMTk4MiBtb2RpZmnDqWUgcmVsYXRpdmUgYXV4IGRyb2l0cyBldCBsaWJlcnTDqXMgZGVzIGNvbW11bmVzLCBkZXMgZMOpcGFydGVtZW50cyBldCBkZXMgcsOpZ2lvbnPCoMK7wqA7CgpBdHRlbmR1IHF1ZSBsZXMgcGFpZW1lbnRzIHN1c21lbnRpb25uw6lzIGRlIGzigJlpbmRlbW5pdMOpIMKrwqB0ZW1wb3JhaXJlIGTDqWdyZXNzaXZlIGRlIHJlc3RydWN0dXJhdGlvbsKgwrsgZMOpcG91cnZ1ZSBkZSBmb25kZW1lbnQganVyaWRpcXVlIGFkw6lxdWF0LCBwb3VycmFpZW50IMOqdHJlIHByw6lzb21wdGlmcyBk4oCZaXJyw6lndWxhcml0w6lzIHBvdXZhbnQgZm9uZGVyIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZSBNLsKgWSwgw6AgaGF1dGV1ciBkZSA2NsKgMDgwLDYwwqDigqwsIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZcKgMjAwOMKgOwpBdHRlbmR1IHF1ZSBsYSByZXNwb25zYWJpbGl0w6kgZGVzIGNvbXB0YWJsZXMgcHVibGljcyBz4oCZYXBwcsOpY2llIGF1IG1vbWVudCBkdSBwYWllbWVudMKgOyBxdWUgbGUgY29tcHRhYmxlIG7igJlhIHBhcyBleGVyY8OpIGxlcyBjb250csO0bGVzIHF1aSwgc2Vsb24gbGVzIGRpc3Bvc2l0aW9ucyBjb21iaW7DqWVzIGRlcyBhcnRpY2xlcyAxMiBldCAxMyBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlIDE5NjIgZHUgcsOoZ2xlbWVudCBnw6luw6lyYWwgc3VyIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUsIHN1c3Zpc8OpLCBwb3J0ZW50IG5vdGFtbWVudCBzdXIgbOKAmWV4YWN0aXR1ZGUgZGVzIGNhbGN1bHMgZGUgbGlxdWlkYXRpb24gOyBxdeKAmWlsIGF1cmFpdCBkb25jIGTDuyBzdXNwZW5kcmUgbGVzIHBhaWVtZW50cyBzdXNtZW50aW9ubsOpcyBldCBlbiBpbmZvcm1lciBs4oCZb3Jkb25uYXRldXIsIGVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDM3IGR1IGTDqWNyZXQgZHUgMjkgZMOpY2VtYnJlIDE5NjIsIHByw6ljaXTDqcKgOwpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGR1IDIzIGbDqXZyaWVyIDE5NjMgc3Vzdmlzw6llLCBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIHNlIHRyb3V2ZSBlbmdhZ8OpZSBkw6hzIGxvcnNxdeKAmXVuZSBkw6lwZW5zZSBhIMOpdMOpIGlycsOpZ3VsacOocmVtZW50IHBhecOpZcKgOwpBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBkdSBwYXJhZ3JhcGhlIFZJSUksIGxlcyBpbnTDqXLDqnRzIGF1IHRhdXggbMOpZ2FsIGNvdXJlbnQgwqvCoMOgIGNvbXB0ZXIgZHUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzwqDCu8KgOwpBdHRlbmR1IHF14oCZZW4gbOKAmWVzcMOoY2UsIGxlIHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIGVzdCBsYSBub3RpZmljYXRpb24gw6AgTS7CoFkgZHUgcsOpcXVpc2l0b2lyZcKgZHUgbWluaXN0w6hyZSBwdWJsaWMgOyBxdWUgY2V0dGUgbm90aWZpY2F0aW9uIGEgw6l0w6kgZWZmZWN0dcOpZSBsZSAyOCBqdWluIDIwMTLCoDsgcXVlIGxlIGNvbXB0YWJsZSBlbiBhIGFjY3Vzw6kgcsOpY2VwdGlvbiBsZSAyOcKganVpbsKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoCBjb21wdGVyIGRlIGNldHRlIGRlcm5pw6hyZSBkYXRlwqA7ClBhciBjZXMgbW90aWZzLApNLsKgWSBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIHNvaXhhbnRlIHNpeCBtaWxsZSBxdWF0cmUgdmluZ3QgZXVyb3MgZXQgc29peGFudGUgY2VudGltZXMgKDY2wqAwODAsNjDCoOKCrCkgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlwqAyMDA4LCBhdWdtZW50w6llIGRlcyBpbnTDqXLDqnRzIGRlIGRyb2l0IMOgIGNvbXB0ZXIgZHUgMjnCoGp1aW7CoDIwMTIuCi0tLS0tLS0tLS0tLQoKRmFpdCBldCBqdWfDqSBlbiBsYSBDb3VyIGRlcyBjb21wdGVzLCBQcmVtacOocmUgY2hhbWJyZSwgcHJlbWnDqHJlIHNlY3Rpb24sIGxlwqBzZWl6ZcKgamFudmllcsKgZGV1eCBtaWwgdHJlaXplLCBwcsOpc2VudHPCoDrCoE1tZcKgRnJhZGluLCBwcsOpc2lkZW50IGRlIHNlY3Rpb24sIE1NLsKgQnJ1bi1CdWlzc29uIGV0IE9yeS1MYXZvbGzDqWUsIGNvbnNlaWxsZXJzIG1hw650cmVzLgpTaWduw6nCoDogRnJhZGluLCBwcsOpc2lkZW50IGRlIHNlY3Rpb24sIGV0IEbDqXJleiwgZ3JlZmZpZXIuCkNvbGxhdGlvbm7DqSwgY2VydGlmacOpIGNvbmZvcm1lIMOgIGxhIG1pbnV0ZSDDqXRhbnQgYXUgZ3JlZmZlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMuCkVuIGNvbnPDqXF1ZW5jZSwgbGEgUsOpcHVibGlxdWUgZnJhbsOnYWlzZSBtYW5kZSBldCBvcmRvbm5lIMOgIHRvdXMgaHVpc3NpZXJzIGRlIGp1c3RpY2UsIHN1ciBjZSByZXF1aXMsIGRlIG1ldHRyZSBsZWRpdCBhcnLDqnQgw6AgZXjDqWN1dGlvbiwgYXV4IHByb2N1cmV1cnMgZ8OpbsOpcmF1eCBldMKgYXV4IHByb2N1cmV1cnMgZGUgbGEgUsOpcHVibGlxdWUgcHLDqHMgbGVzIHRyaWJ1bmF1eCBkZSBncmFuZGUgaW5zdGFuY2UgZCd5IHRlbmlyIGxhIG1haW4sIMOgIHRvdXMgY29tbWFuZGFudHMgZXQgb2ZmaWNpZXJzIGRlIGxhIGZvcmNlIHB1YmxpcXVlIGRlIHByw6p0ZXIgbWFpbi1mb3J0ZSBsb3JzcXUnaWxzIGVuIHNlcm9udCBsw6lnYWxlbWVudCByZXF1aXMuCkTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuClBvdXIgbGUgU2VjcsOpdGFpcmUgZ8OpbsOpcmFsCmV0IHBhciBkw6lsw6lnYXRpb24sCmxlIENoZWYgZHUgR3JlZmZlIGNvbnRlbnRpZXV4CgoKCgoKCgoKCkRhbmllbCBGRVJFWgoK</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133013">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133013</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66117</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHAMPOMIER, Conseiller referendaire</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. CHOUVET, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>16/01/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">27/03/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">27/03/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Directeur départemental des finances publiques (DDFIP) des Hauts-de-Seine (anciennement trésorier-payeur général (TPG) des Hauts-de-Seine) - Exercices 2007 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 45.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Département</DESCRIPTEUR>
<DESCRIPTEUR>Comptable supérieur</DESCRIPTEUR>
<DESCRIPTEUR>Marché public</DESCRIPTEUR>
<DESCRIPTEUR>Contrat</DESCRIPTEUR>
<DESCRIPTEUR>Mandat</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Acte administratif</DESCRIPTEUR>
<DESCRIPTEUR>Nomenclature des actes</DESCRIPTEUR>
<DESCRIPTEUR>Hiérarchie des normes juridiques</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Délégation de signature</DESCRIPTEUR>
<DESCRIPTEUR>Publication administrative</DESCRIPTEUR>
<DESCRIPTEUR>Qualité de l'ordonnateur</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable supérieur avait effectué plusieurs paiements à une société sur la base de la seule production d'une facture. Le comptable soutenait que ni les factures ni les mandats ne faisaient de référence expresse à un contrat écrit et que, conformément à une circulaire du ministre du budget du 30 septembre 2003, il n'était pas fondé à exiger d'autres pièces que celles de la nomenclature. La Cour rappelle que, à la date des faits, « &lt;I style="mso-bidi-font-style: normal"&gt;les marchés et accords-cadres d'un montant égal ou supérieur à 4 000 Euros HT sont passés sous forme écrite&lt;/I&gt; » et que le comptable doit disposer du contrat ainsi que d'un mémoire ou d'une facture au moment du paiement. A défaut d'avoir fourni ces pièces justificatives, le comptable est donc constitué en débet. Par ailleurs, le comptable avait payé d'autres mandats pour lesquels les décisions de délégations de signature de l'ordonnateur n'avaient pas été régulièrement publiées au recueil des actes administratifs de la préfecture. Le défaut de publication rendant la délégation irrégulière, la Cour constitue donc le comptable débiteur.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation de formaliser sous forme écrite les marchés d'un certain seuil, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 novembre 2010, &lt;I style="mso-bidi-font-style: normal"&gt;Parc national du Mercantour&lt;/I&gt;, Recueil 2010, p. 98 ; CC, 7 juin 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CCAS de Polaincourt&lt;/I&gt;, Recueil 2013, p. 87 et &lt;I style="mso-bidi-font-style: normal"&gt;AJDA&lt;/I&gt; 2013, p. 1621.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la hiérarchie des normes, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 27 mars 2013, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la Loire-Atlantique&lt;/I&gt;, Recueil 2013, p. 47.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la production de pièces justificatives nécessaires pour un premier paiement dans le cadre de marchés publics passés sans formalités préalables faisant l'objet d'un contrat écrit, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 27 mars 2013, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la Loire-Atlantique&lt;/I&gt;, Recueil 2013, p. 47 et CC, 14 décembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de l'Indre&lt;/I&gt;, que l'on peut consulter sur le site ccomptes.fr.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le principe de publication des actes administratifs, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CE, 21 octobre 2005, &lt;I style="mso-bidi-font-style: normal"&gt;préfet d'Ille et Vilaine&lt;/I&gt;, n° 269361.Sur l'obligation de contrôler la qualité de l'ordonnateur, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 24 janvier 2012, &lt;I style="mso-bidi-font-style: normal"&gt;TPG du Territoire de Belfort&lt;/I&gt;, Recueil 2012, p. 16 ; CC, 26 juillet 2012, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM du ministère de l'outre-mer&lt;/I&gt;, p. 132 et CC, 9 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM de l'écologie&lt;/I&gt;, Recueil 2013, p. 13
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133013.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00133011">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00133011</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65990</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. CHAMPOMIER, Conseiller referendaire</RAPPORTEUR>
<RAPPORTEUR/></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. BRUN-BUISSON, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>14/11/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">27/03/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">27/03/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Trésorier-payeur général (TPG) de l'Allier - Exercice 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00133011.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">IENPVVIgREVTIENPTVBURVMKCSAgICAtLS0tLS0gCnByZW1pZXJlIENIQU1CUkUKCSAgICAtLS0tLS0gCiBwcmVtaWVyZSBzZWN0aW9uCgkgICAgLS0tLS0tCiAgICAgICAgIEFycsOqdCBuwrAgNjU5OTAKVFJFU09SSUVSLVBBWUVVUiBHRU5FUkFMCkRFIEzigJlBTExJRVIKCgpFeGVyY2ljZSAyMDA5CgpSYXBwb3J0IG7CsMKgMjAxMi02MjctMAoKQXVkaWVuY2UgcHVibGlxdWUgZHUgMTTCoG5vdmVtYnJlIDIwMTIKCkxlY3R1cmUgcHVibGlxdWUgZHUgMjcgbWFycyAyMDEzClJFUFVCTElRVUUgRlJBTsOHQUlTRQpBVSBOT00gRFUgUEVVUExFIEZSQU7Dh0FJUwpMQSBDT1VSIERFUyBDT01QVEVTIGEgcmVuZHUgbOKAmWFycsOqdCBzdWl2YW50wqA6CkxBIENPVVIsClZ1IGxlIGNvZGUgZGVzIGp1cmlkaWN0aW9ucyBmaW5hbmNpw6hyZXMsIG5vdGFtbWVudCBzZXMgYXJ0aWNsZXMgTC7CoDExMS0xLCBMLsKgMTQyLTEsIFIuwqAxMTItOCBldCBSLsKgMTQxLTEwIMOgIFIuwqAxNDEtMTLCoDsKVnUgbOKAmWFydGljbGUgNjAgbW9kaWZpw6kgZGUgbGEgbG9pIGRlIGZpbmFuY2VzIG7CsMKgNjMtMTU2IGR1IDIzwqBmw6l2cmllcsKgMTk2M8KgcG9ydGFudCBsb2kgZGUgZmluYW5jZXMgcG91ciAxOTYzIDsKVnUgbGVzIGxvaXMgZXQgcsOoZ2xlbWVudHMgYXBwbGljYWJsZXMgw6AgbGEgY29tcHRhYmlsaXTDqSBkZXMgY29tcHRhYmxlcyBkdcKgVHLDqXNvciwgbm90YW1tZW50IGxhIGxvaSBvcmdhbmlxdWUgbsKwwqAyMDAxLTY5MiBkdSAxZXIgYW/Du3QgMjAwMSByZWxhdGl2ZSBhdXggbG9pcyBkZSBmaW5hbmNlcywgbGUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjkgZMOpY2VtYnJlIDE5NjIgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSA7ClZ1IGxhIGxvaSBkZSBmaW5hbmNlcyBkZSBs4oCZZXhlcmNpY2UgMjAwOcKgOwpWdSBs4oCZYXJ0aWNsZSAzNCwgMWVywqBhbGluw6lhIGRlIGxhIGxvaSBuwrDCoDIwMDgtMTA5MSBkdSAyOMKgb2N0b2JyZcKgMjAwOCByZWxhdGl2ZSDDoCBsYSBDb3VyIGRlcyBjb21wdGVzIGV0IGF1eCBjaGFtYnJlcyByw6lnaW9uYWxlcyBkZXMgY29tcHRlc8KgOwpWdSBsYSBjaXJjdWxhaXJlIGR1IG1pbmlzdHJlIGR1IGJ1ZGdldCBkdSAzMCBzZXB0ZW1icmUgMjAwMywgcmVsYXRpdmUgw6AgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGRlcyBkw6lwZW5zZXMgZGUgbOKAmUV0YXQgZXQgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy0wNjAtQiBkdSAxNyBub3ZlbWJyZSAyMDAzwqA7CgpWdSBs4oCZYXJyw6p0w6kgZHUgUHJlbWllciBwcsOpc2lkZW50IGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMgbsKwwqAxMS04MjkgZHUgMjfCoGTDqWNlbWJyZcKgMjAxMSBwb3J0YW50IHLDqXBhcnRpdGlvbiBkZXMgYXR0cmlidXRpb25zIGVudHJlIGxlcyBjaGFtYnJlcyBkZSBsYSBDb3VyIGRlcyBjb21wdGVzwqA7ClZ1IGzigJlhcnLDqnTDqSBtb2RpZmnDqSBuwrDCoDA2LTM0NiBkdSAxMMKgb2N0b2JyZcKgMjAwNiBkdSBQcmVtaWVyIHByw6lzaWRlbnQgcG9ydGFudCBjcsOpYXRpb24gZXQgZml4YW50IGxhIGNvbXBvc2l0aW9uIGRlcyBzZWN0aW9ucyBhdSBzZWluIGRlIGxhIFByZW1pw6hyZSBjaGFtYnJlIDsKVnUgbGUgY29tcHRlIGRlIGdlc3Rpb24gcmVuZHUgcG91ciBs4oCZZXhlcmNpY2UgMjAwOSBwYXIgTS7CoFgsIHRyw6lzb3JpZXItcGF5ZXVyIGfDqW7DqXJhbCBkZSBs4oCZQWxsaWVyIGVuIGZvbmN0aW9ucyBkdSAxZXLCoGbDqXZyaWVywqAyMDA2IGF1IDMwIGp1aW7CoDIwMTEsIGVuIHF1YWxpdMOpIGRlIGNvbXB0YWJsZSBkdSBUcsOpc29ywqA7ClZ1IGxlcyBwacOoY2VzIHByb2R1aXRlcyDDoCBs4oCZYXBwdWkgZGUgY2VzIGNvbXB0ZXMgb3UgcmVjdWVpbGxpZXMgYXUgY291cnMgZGUgbOKAmWluc3RydWN0aW9uwqA7ClZ1IGxhIGxldHRyZSBkdSAxMyBvY3RvYnJlIDIwMTAgcGFyIGxhcXVlbGxlLCBlbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSBSLsKgMTQxMTAgZHUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlcywgbGUgcHLDqXNpZGVudCBkZSBsYSBwcmVtacOocmUgY2hhbWJyZSBkZSBsYSBDb3VyIGRlcyBjb21wdGVzIGEgbm90aWZpw6kgYXUgdHLDqXNvcmllci1wYXlldXIgZ8OpbsOpcmFsIGR1IGTDqXBhcnRlbWVudCBkZcKgbOKAmUFsbGllciBsZSBjb250csO0bGUgZGVzIGNvbXB0ZXMgcG91ciBsZXMgZXhlcmNpY2VzIDE5OTkgw6AgMjAwOSA7ClZ1IGxlIHLDqXF1aXNpdG9pcmUgw6AgZmluIGTigJlpbnN0cnVjdGlvbiBkZSBjaGFyZ2VzIG7CsMKgMjAxMi0yNCBSUS1EQiBkdSAzMMKgYXZyaWzCoDIwMTIsIG5vdGlmacOpIGxlIDE1IG1haSAyMDEyIMOgIE0uwqBYIGV0IGF1IGRpcmVjdGV1ciBnw6luw6lyYWwgZGVzIGZpbmFuY2VzIHB1YmxpcXVlcyBxdWkgZW4gb250IGFjY3Vzw6kgcsOpY2VwdGlvbiByZXNwZWN0aXZlbWVudCBsZSA1wqBqdWluwqAyMDEyIGV0IGxlIDE2wqBtYWnCoDIwMTLCoDsKVnUgbGEgZMOpY2lzaW9uIGR1IDnCoG1hacKgMjAxMiBkdSBwcsOpc2lkZW50IGRlIGxhIFByZW1pw6hyZSBjaGFtYnJlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMgZMOpc2lnbmFudCBNLsKgSmVhbi1NaWNoZWzCoENoYW1wb21pZXIsIGNvbnNlaWxsZXIgcsOpZsOpcmVuZGFpcmUsIHBvdXIgaW5zdHJ1aXJlIGxlcyBzdWl0ZXMgw6AgZG9ubmVyIGF1IHLDqXF1aXNpdG9pcmUgc3Vzdmlzw6nCoDsKVnUgbGVzIHLDqXBvbnNlcyBkZSBNLsKgWCBhdSByw6lxdWlzaXRvaXJlIHN1c3Zpc8OpLCB0cmFuc21pc2VzIHBhciBjb3VycmllciBkdSA1wqBqdWlsbGV0wqAyMDEywqA7IApWdSBsZSByYXBwb3J0IG7CsMKgMjAxMi02MjctMCBkZSBNLsKgSmVhbi1NaWNoZWzCoENoYW1wb21pZXIsIGNvbnNlaWxsZXIgcsOpZsOpcmVuZGFpcmUsIHJldsOqdHUgZHUgc29pdCBjb21tdW5pcXXDqSBhdSBQcm9jdXJldXIgZ8OpbsOpcmFsIGRlIGxhIFLDqXB1YmxpcXVlIGR1IHByw6lzaWRlbnQgZGUgbGEgUHJlbWnDqHJlIGNoYW1icmUgZW4gZGF0ZSBkdSAxM8Kgc2VwdGVtYnJlwqAyMDEywqA7ClZ1IGxlcyBjb25jbHVzaW9ucyBuwrDCoDY2NMKgIGR1IDIxwqBzZXB0ZW1icmXCoDIwMTIgZHUgUHJvY3VyZXVyIGfDqW7DqXJhbCBkZSBsYcKgUsOpcHVibGlxdWXCoDsKVnUgbGEgZMOpY2lzaW9uIGR1wqAxM8Kgc2VwdGVtYnJlwqAyMDEyIGR1IHByw6lzaWRlbnQgZGUgbGEgUHJlbWnDqHJlIGNoYW1icmUgZGUgbGEgQ291ciBkZXMgY29tcHRlcyBkw6lzaWduYW50IE0uwqBGcmFuY2lzwqBCcnVuLUJ1aXNzb24sIGNvbnNlaWxsZXIgbWHDrnRyZSwgY29tbWUgcsOpdmlzZXVyIDsKVnUgbGEgbGV0dHJlIGR1IDTCoG9jdG9icmXCoDIwMTIgaW5mb3JtYW50IE0uwqBYIGRlIGxhIHBvc3NpYmlsaXTDqSBk4oCZYXNzaXN0ZXIgw6AgbOKAmWF1ZGllbmNlIHB1YmxpcXVlIGR1IDE0wqBub3ZlbWJyZcKgMjAxMiBldCBk4oCZeSDDqnRyZSBlbnRlbmR1LCBlbnNlbWJsZSBs4oCZYWNjdXPDqSBkZSByw6ljZXB0aW9uIGRlIGNldHRlIGxldHRyZSBlbiBkYXRlIGR1IDbCoG9jdG9icmXCoDIwMTLCoDsKCkVudGVuZHVzIGVuIGF1ZGllbmNlIHB1YmxpcXVlLCBNLsKgSmVhbi1NaWNoZWzCoENoYW1wb21pZXIsIGVuIHNvbiByYXBwb3J0LCBNLsKgWXZlc8KgUGVycmluLCBhdm9jYXQgZ8OpbsOpcmFsLCBlbiBzZXMgY29uY2x1c2lvbnMgb3JhbGVzIGV0IE0uwqBYLCBjZWx1aS1jaSBheWFudCBldSBsYSBwYXJvbGUgZW4gZGVybmllcsKgOwpBeWFudCBkw6lsaWLDqXLDqSBob3JzIGxhIHByw6lzZW5jZSBkdSByYXBwb3J0ZXVyIGV0IGR1IE1pbmlzdMOocmUgcHVibGljIGV0IGFwcsOocyBhdm9pciBlbnRlbmR1IE0uwqBGcmFuY2lzIEJydW4tQnVpc3NvbiwgY29uc2VpbGxlciBtYcOudHJlLCBlbiBzZXMgb2JzZXJ2YXRpb25zwqA7Ck9SRE9OTkXCoDoKQSBs4oCZw6lnYXJkIGRlIE0uwqBYCkF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA5ClByZW1pw6hyZSBjaGFyZ2UgZHUgcsOpcXVpc2l0b2lyZQpBdHRlbmR1IHF1ZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBxdWUsIHN1ciBtYW5kYXRzIG7CsHMgNzEsIDE2MiwgNTAwIGV0IDUyNSBkZXMgMTAgZXQgMjXCoGbDqXZyaWVywqAyMDA5LCAyIGV0IDQganVpbiAyMDA5LCBsZSBjb21wdGFibGUgYXZhaXQgcGF5w6kgc3VyIGxlIHByb2dyYW1tZSBuwrDCoDE1NiDCq8KgR2VzdGlvbiBmaXNjYWxlIGV0IGZpbmFuY2nDqHJlIGRlIGzigJlFdGF0IGV0IGR1IHNlY3RldXIgcHVibGljIGxvY2FswqDCuywgY29kZSBvcmRvbm5hdGV1ciAwNzAwMDMsIGF1IHByb2ZpdCBkZSDigJxMYSBQb3N0ZSBDU1BOIE5hcmJvbm5l4oCdLCDigJxOZW9wb3N0IEZyYW5jZeKAnSwgbOKAmWVudHJlcHJpc2Ug4oCcRmFicmljZSBNYWNodXJldOKAnSBldCBkZSDigJxCb3V5Z3VlcyBUZWxlY29tIEVudHJlcHJpc2Vz4oCdLCBsYSBzb21tZSB0b3RhbGUgZGUgNMKgMTMwLDcwwqDigqzCoDsgCkF0dGVuZHUgcXVlIGNlcyBtYW5kYXRzIG7igJlvbnQgcGFzIGZhaXQgbOKAmW9iamV0IGRlIGxhIHNpZ25hdHVyZSBkZSBs4oCZb3Jkb25uYXRldXIgc2Vjb25kYWlyZcKgOyBxdWUgbGUgY29tcHRhYmxlIG7igJlhIGRvbmMgcGFzIHJlc3BlY3TDqSBsZXMgZGlzcG9zaXRpb25zIGRlIGzigJlhcnRpY2xlIDEyIGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmUgMTk2MiBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlIHNlbG9uIGxlc3F1ZWxsZXMgwqvCoGxlcyBjb21wdGFibGVzIHNvbnQgdGVudXMgZOKAmWV4ZXJjZXIgWy4uLl0gQi7CoC3CoEVuIG1hdGnDqHJlIGRlIGTDqXBlbnNlcywgbGXCoGNvbnRyw7RsZSA6IERlIGxhIHF1YWxpdMOpIGRlIGzigJlvcmRvbm5hdGV1ciBvdSBkZSBzb24gZMOpbMOpZ3XDqSBbLi4uXSDCu8KgOyAKQXR0ZW5kdSBxdeKAmcOgIGTDqWZhdXQgZOKAmW9yZHJlIGV4cHLDqHMgZGUgcGF5ZXIsIGxlIGNvbXB0YWJsZSBhdXJhaXQgZMO7IHN1c3BlbmRyZSBsZXMgcGFpZW1lbnRzIGRlcyBtYW5kYXRzIGVuIGNhdXNlIGV0IGVuIGluZm9ybWVyIGzigJlvcmRvbm5hdGV1ciBlbiBhcHBsaWNhdGlvbiBkZSBsJ2FydGljbGUgMzcgZHUgZMOpY3JldCBkdSAyOcKgZMOpY2VtYnJlIDE5NjIgcHLDqWNpdMOpwqA7CkF0dGVuZHUgcXXigJllbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZHUgMjMgZsOpdnJpZXIgMTk2MyBzdXN2aXPDqWUsIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgc2UgdHJvdXZlIGVuZ2Fnw6llIGTDqHMgbG9ycyBxdSd1bmUgZMOpcGVuc2UgYSDDqXTDqSBpcnLDqWd1bGnDqHJlbWVudCBwYXnDqWXCoDsKQXR0ZW5kdSBxdWUgcGFyIGxlIHLDqXF1aXNpdG9pcmUgc3Vzdmlzw6ksIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSBlc3RpbcOpIHF1ZSBsZXMgcGFpZW1lbnRzIHN1c21lbnRpb25uw6lzIMOpdGFpZW50IHByw6lzb21wdGlmcyBk4oCZaXJyw6lndWxhcml0w6lzIHN1c2NlcHRpYmxlcyBkZSBmb25kZXIgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlIE0uwqBYLCDDoCBoYXV0ZXVyIGRlIDTCoDEzMCw3MMKg4oKsLCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOSA7CgpDb25zaWTDqXJhbnQgcXVlIGRhbnMgc2VzIG9ic2VydmF0aW9ucyBlbiByw6lwb25zZSBkdSA1wqBqdWlsbGV0wqAyMDEyLCBNLsKgWCBjb25maXJtZSBxdWUgY2VzIG1hbmRhdHMgbmUgc29udCBwYXMgc2lnbsOpcyBtYWlzIHF14oCZaWxzIG7igJlhdmFpZW50IHBhcyDDqXTDqSBzw6lsZWN0aW9ubsOpcyBkYW5zIGxlIGNhZHJlIGR1IGNvbnRyw7RsZSBoacOpcmFyY2hpc8OpIGRlIGxhIGTDqXBlbnNlwqA7IHF14oCZZW7CoGNvbnPDqXF1ZW5jZSwgY2VzIG1hbmRhdHMgbuKAmWF2YWllbnQgcGFzIGZhaXQgbOKAmW9iamV0IGRlIGNvbnRyw7RsZXMgZXQgb250IMOpdMOpIG1pcyBlbiBwYWllbWVudCBlbiBs4oCZw6l0YXQgOwpDb25zaWTDqXJhbnQgcXXigJl1biBjb21wdGFibGUgbmUgcGV1dCBz4oCZZXhvbsOpcmVyIGRlIHNhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBhdSBtb3RpZiBxdeKAmXVuZSBkw6lwZW5zZSBuZSBmaWd1cmUgcGFzIGRhbnMgbOKAmcOpY2hhbnRpbGxvbiBkZSBjb250csO0bGUgZHUgY29udHLDtGxlIGhpw6lyYXJjaGlzw6kgZGUgbGEgZMOpcGVuc2XCoDsgcXVlIGTDqHMgbG9ycywgbGEgcmVzcG9uc2FiaWxpdMOpIGR1IGNvbXB0YWJsZSBkb2l0IMOqdHJlIG1pc2UgZW4gamV1IHBvdXIgYXZvaXIgcGF5w6kgaXJyw6lndWxpw6hyZW1lbnQgbGVzIG1hbmRhdHMgZW4gY2F1c2UsIHF1aSBu4oCZw6l0YWllbnQgcGFzIHNpZ27DqXMgcGFyIGzigJlvcmRvbm5hdGV1csKgOyAKQ29uc2lkw6lyYW50IHF14oCZYXV4IHRlcm1lcyBkdSBwYXJhZ3JhcGhlIFZJSUksIGxlcyBpbnTDqXLDqnRzIGF1IHRhdXggbMOpZ2FsIGNvdXJlbnQgwqvCoMOgIGNvbXB0ZXIgZHUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzwqDCu8KgOwpBdHRlbmR1IHF14oCZZW4gbOKAmWVzcMOoY2UsIGxlIHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgZXN0IGxhIG5vdGlmaWNhdGlvbiBkdSByw6lxdWlzaXRvaXJlIGRvbnQgTS7CoFggYcKgYWNjdXPDqSByw6ljZXB0aW9uIGxlwqA1wqBqdWluwqAyMDEywqA7IHF1ZSBsZXMgaW50w6lyw6p0cyBkb2l2ZW50IGRvbmMgY291cmlyIMOgIGNvbXB0ZXIgZGUgY2V0dGUgZGF0ZcKgOwpQYXIgY2VzIG1vdGlmcywKTS7CoFggZXN0IGNvbnN0aXR1w6kgZMOpYml0ZXVyIGVudmVycyBs4oCZRXRhdCBkZSBsYSBzb21tZSBkZcKgNMKgMTMwLDcwwqDigqwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDksIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSA1wqBqdWluwqAyMDEyLgoKRGV1eGnDqG1lIGNoYXJnZSBkdSByw6lxdWlzaXRvaXJlCkF0dGVuZHUgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIHF1ZSBNLsKgWCBhdmFpdCBwYXnDqSBlbiAyMDA5LCDDoCBoYXV0ZXVyIGRlIDM2wqAxMTUsMzDCoOKCrCwgc3VyIGxlIHByb2dyYW1tZSBuwrDCoDE1NiDCq8KgR2VzdGlvbiBmaXNjYWxlIGV0IGZpbmFuY2nDqHJlIGRlIGzigJlFdGF0IGV0IGR1IHNlY3RldXIgcHVibGljIGxvY2FswqDCuyBkdSBtaW5pc3TDqHJlIGR1IGJ1ZGdldCAobGlhc3NlIGNlbnRyYWxlIDE5OSksIGNvZGUgb3Jkb25uYXRldXIgMDcwMDAzLCB0cmVudGUtY2lucSBtYW5kYXRzIHLDqXBlcnRvcmnDqXMgYXUgdGFibGVhdSBzdWl2YW50wqA6CkF0dGVuZHUgcXVlIGNlcyBtYW5kYXRzIHBvcnRlbnQgdW5lIHNpZ25hdHVyZSBpbGxpc2libGUsIHNhbnMgbWVudGlvbiBkdSBub20gZGUgbOKAmW9yZG9ubmF0ZXVyIHNlY29uZGFpcmUgOyBxdWUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uLCBsZSB0csOpc29yaWVyLXBheWV1ciBnw6luw6lyYWwgYSBub3RhbW1lbnQgdHJhbnNtaXMgw6AgbGEgQ291ciwgbGVzIGFycsOqdMOpcyBwcsOpZmVjdG9yYXV4IG7CsHMgNTI4LCA1MjkgZXQgOTA5IGRlcyAxOMKgZsOpdnJpZXIgZXQgOSBtYXJzIDIwMDkgZGUgZMOpbMOpZ2F0aW9ucyBkZSBzaWduYXR1cmXCoDsgcXXigJlhdSByZWdhcmQgZGVzIHNww6ljaW1lbnMgZGUgc2lnbmF0dXJlcyBkw6lwb3PDqXMgcG91ciBs4oCZYW5uw6llIDIwMDksIGzigJlpZGVudGlmaWNhdGlvbiBkdSBzaWduYXRhaXJlIGRlIGzigJllbnNlbWJsZSBkZXMgbWFuZGF0cyBlc3QgaW1wb3NzaWJsZcKgOwpBdHRlbmR1IHF14oCZYXUgc3VycGx1cywgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCuyBu4oCZZXN0IHBhcyBhcHBvc8OpZSBzdXIgY2VzIG1hbmRhdHMsIGhvcm1pcyBwb3VyIGxlcyBtYW5kYXRzIG7CsHMgMTQ5IGV0IDE3OCA7CgpBdHRlbmR1LCBxdeKAmWludGVycm9nw6kgc3VyIGNlIHBvaW50LCBsZSBjb21wdGFibGUgYSByw6lwb25kdSBxdeKAmTogwqvCoFvigKZdwqBlbiBhdmFsLCBsZSBzZXJ2aWNlIGRlIGxhIGTDqXBlbnNlLCBlbiBjaGFyZ2UgZGVzIHBhaWVtZW50cyDDoCBsYSB0csOpc29yZXJpZSBnw6luw6lyYWxlLCBuZSBibG9xdWUgcGFzIGxlcyBtYW5kYXRzIGFwcHV5w6lzIGRlIHBpw6hjZXMgbmUgY29tcG9ydGFudCBwYXMgbGEgbWVudGlvbiBkdSBzZXJ2aWNlIGZhaXQuIEVuIGVmZmV0LCBsYSBjaXJjdWxhaXJlIE5PUsKgOiBFQ09aMDMwMDAyMUMgZHUgMzAvMDkvMjAwMyBwb3J0YW50IHLDqWZvcm1lIGRlIGxhIG5vbWVuY2xhdHVyZSBkZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBkZXMgZMOpcGVuc2VzIGRlIGzigJlFdGF0LCDDqW5vbmNlLCBkYW5zIHNvbiBhbm5leGUgZMOpbm9tbcOpZSDCq8KgY2FkcmUgZ8OpbsOpcmFsIGRlIGxhIG5vbWVuY2xhdHVyZcKgwrssIGxhIGRpc3Bvc2l0aW9uIHN1aXZhbnRlwqA6IMKrwqDigKZpbCBlc3QgcmFwcGVsw6kgcXVlIGzigJlvcmRvbm5hdGV1ciBz4oCZZW4gdGllbnQsIHNhdWYgZXhjZXB0aW9ucyBb4oCmXSwgw6AgbGEgc2V1bGUgc2lnbmF0dXJlIGR1IG1hbmRhdCBvdSBkZSBs4oCZb3Jkb25uYW5jZSBldCBlbiBhdWN1biBjYXMgZGUgbOKAmcOpdmVudHVlbCBib3JkZXJlYXUgZGUgbWFuZGF0cyBldCBkZXMgZmFjdHVyZXMgam9pbnRlcyBhdXggbWFuZGF0cywgYXV4IGZpbnMgZGUgY2VydGlmaWNhdGlvbiBkdSBzZXJ2aWNlIGZhaXTCoMK7wqA7CkxlcyBhcHBsaWNhdGlvbnMgaW5mb3JtYXRpcXVlcyB1dGlsaXPDqWVzIGF1IG5pdmVhdSBsb2NhbCAoTkRMKSwgbmUgcGVybWV0dGVudCBwYXMgbOKAmWltcHJlc3Npb24gc3VyIGxlIG1hbmRhdCBk4oCZdW5lIG1lbnRpb24gdGVsbGUgcXVlIMKrwqBwb3VyIHZhbG9pciBhdHRlc3RhdGlvbiBkdSBzZXJ2aWNlIGZhaXTCoMK7LiBJbCBu4oCZYSBwYXMgw6l0w6kgZXhpZ8OpIGRlIGxhIHBvcnRlciBtYW51ZWxsZW1lbnQsIGxhIHNpZ25hdHVyZSBkdSBtYW5kYXQgw6l0YW50IGNvbnNpZMOpcsOpZSwgc2Vsb24gbGVzIGRpc3Bvc2l0aW9ucyBzdXN2aXPDqWVzLCBjb21tZSBs4oCZYXR0ZXN0YW50IGVmZmVjdGl2ZW1lbnQgc291cyBsYSByZXNwb25zYWJpbGl0w6kgZGUgbOKAmW9yZG9ubmF0ZXVyLiBQb3VyIGNoYXF1ZSBtYW5kYXQsIGxlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGR1IHNlcnZpY2UgZmFpdCBhc3NleiBzb3V2ZW50IHRyYW5zbWlzZXMgbG9ycyBkZSBsYSBkZW1hbmRlIGRlIHBhaWVtZW50IG91IGNvbnNlcnbDqWVzIGRhbnMgbGVzIGRvc3NpZXJzIGRlcyBzZXJ2aWNlcyBnZXN0aW9ubmFpcmVzLCBzb250IHRyYW5zbWlzZXMgcGFyIGNvdXJyaWVywqDCuyA7CkF0dGVuZHUgcXXigJllbiBvdXRyZSwgc+KAmWFnaXNzYW50IGRlcyBtYW5kYXRzIG7CsHPCoDE2MywgMTY3LCAxNzIsIDE3NyBldCAxODEsIHByb2dyYW1tZcKgMTU2LCBsZSBjb21wdGFibGUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uLCBkb25jIGEgcG9zdGVyaW9yaSwgYSB0cmFuc21pcyBsZXMgwqvCoMOpbMOpbWVudHMgZGUgbmF0dXJlIMOgIHNlIHN1YnN0aXR1ZXIgw6AgbOKAmWFic2VuY2UgZGUgbWVudGlvbiBkdSBzZXJ2aWNlIGZhaXTCoMK7LCB0ZWxzIHNlbG9uIGx1aSwgbGVzIGNvcGllcyBkZSBib24gZGUgbGl2cmFpc29uwqA7CkF0dGVuZHUgcXVlIGzigJlpbnN0cnVjdGlvbiBkZSBsYSBkaXJlY3Rpb24gZ8OpbsOpcmFsZSBkZSBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlIG7CsMKgMDItMDI1LUIxIGR1IDIxwqBtYXJzwqAyMDAyIHJlbGF0aXZlIMOgIGxhIHNpbXBsaWZpY2F0aW9uIGRlIGxhIHByb2PDqWR1cmUgZOKAmW9yZG9ubmFuY2VtZW50IC8gbWFuZGF0ZW1lbnQgcHLDqWNpc2UgcXXigJlhZmluIMKrwqBk4oCZYWNjcm/DrnRyZSBsYSByZXNwb25zYWJpbGlzYXRpb24gZGVzIHNlcnZpY2VzIG9yZG9ubmF0ZXVycyBkZSBs4oCZRXRhdCwgaWwgZXN0IGFkbWlzLCDDoCBjb21wdGVyIGRlIGxhIGdlc3Rpb24gMjAwMiwgcXVlIGxhIHNldWxlIHNpZ25hdHVyZSBkZSBs4oCZb3Jkb25uYXRldXIgcG9ydMOpZSBzdXIgbOKAmW9yZG9ubmFuY2Ugb3UgbGUgbWFuZGF0IGRlIHBhaWVtZW50LCBhY2NvbXBhZ27DqWUgZGUgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCuywgdmF1dCBvcmRyZSBkZSBwYXllciBldCBjZXJ0aWZpY2F0aW9uIGRlIHNlcnZpY2UgZmFpdCBwb3VyIGzigJllbnNlbWJsZSBkZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBqb2ludGVzwqDCu8KgOwpBdHRlbmR1IGVuIGNvbnPDqXF1ZW5jZSBxdWUgbOKAmWFwcG9zaXRpb24gZGUgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCuyBkZW1ldXJhaXQgb2JsaWdhdG9pcmUgc3VyIGxlcyBtYW5kYXRzIGRlIHBhaWVtZW50wqA7CkF0dGVuZHUgcXVlIGxhIHJlc3BvbnNhYmlsaXTDqSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzIHPigJlhcHByw6ljaWUgYXUgbW9tZW50IGR1IHBhaWVtZW50wqA7IHF14oCZw6AgY2V0dGUgZGF0ZSwgbGVzIHBpw6hjZXMgcHJvZHVpdGVzIGVuIGp1c3RpZmljYXRpb24gZGVzIG1hbmRhdHMgbmUgcGVybWV0dGFpZW50IHBhcyBhdSBjb21wdGFibGUgZGUgdsOpcmlmaWVyIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSA7IHF1ZSBsYSBjaXJjb25zdGFuY2UgcXVlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGR1IHNlcnZpY2UgZmFpdCBhdXJhaWVudCDDqXTDqSBkw6l0ZW51ZXMgcGFyIGxlcyBzZXJ2aWNlcyBnZXN0aW9ubmFpcmVzIGRlIGxhIHRyw6lzb3JlcmllIGfDqW7DqXJhbGUgbmUgY29tcGVuc2UgcGFzIGzigJlhYnNlbmNlIGRlcyBqdXN0aWZpY2F0aW9ucyBleGlnw6llcyBwYXIgbGVzIHLDqGdsZW1lbnRzwqA7IApBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgMTIgZHUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlIHN1c3Zpc8OpwqA6IMKrwqBsZXMgY29tcHRhYmxlcyBzb250IHRlbnVzIGTigJlleGVyY2VyIFsuLi5dIEIuIC0gRW4gbWF0acOocmUgZGUgZMOpcGVuc2VzLCBsZSBjb250csO0bGUgOiBEZSBsYSBxdWFsaXTDqSBkZSBs4oCZb3Jkb25uYXRldXIgb3UgZGUgc29uIGTDqWzDqWd1w6kgWy4uLl0gRGUgbGEgdmFsaWRpdMOpIGRlIGxhIGNyw6lhbmNlwqDCu8KgWy4uLl0gOyBxdWUgbOKAmWFydGljbGXCoDEzIGR1IG3Dqm1lIGTDqWNyZXQgcHLDqWNpc2UgcXXigJllbiDCq8KgY2UgcXVpIGNvbmNlcm5lIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSwgbGUgY29udHLDtGxlIHBvcnRlIHN1ciA6IFsuLi5dIGxhIGp1c3RpZmljYXRpb24gZHUgc2VydmljZSBmYWl0wqDCu8KgOyAKQXR0ZW5kdSBxdWUgbGUgY29tcHRhYmxlIG7igJlhIHBhcyBleGVyY8OpIGxlcyBjb250csO0bGVzIHF14oCZaWwgw6l0YWl0IHRlbnUgZOKAmW9ww6lyZXIgZW4gYXBwbGljYXRpb24gZGVzIGFydGljbGVzIDEyIGV0IDEzIGR1IGTDqWNyZXQgZHUgMjkgZMOpY2VtYnJlIDE5NjIgcHLDqWNpdMOpwqA7IHF14oCZaWwgYXVyYWl0IGTDuyBzdXNwZW5kcmUgbGVzIHBhaWVtZW50cyBzdXNtZW50aW9ubsOpcyBlbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSAzNyBkdSByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSBwcsOpY2l0w6kgZXQgZW4gaW5mb3JtZXIgbOKAmW9yZG9ubmF0ZXVywqA7CkF0dGVuZHUgcXXigJllbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZHUgMjPCoGbDqXZyaWVywqAxOTYzIHN1c3Zpc8OpZSwgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBjb21wdGFibGVzIHNlIHRyb3V2ZSBlbmdhZ8OpZSBkw6hzIGxvcnMgcXUndW5lIGTDqXBlbnNlIGEgw6l0w6kgaXJyw6lndWxpw6hyZW1lbnQgcGF5w6llwqA7IApBdHRlbmR1IHF1ZSBwYXIgbGUgcsOpcXVpc2l0b2lyZSBzdXN2aXPDqSwgbGUgUHJvY3VyZXVyIGfDqW7DqXJhbCBhIGVzdGltw6kgcXVlIGxlcyBwYWllbWVudHMgZW4gY2F1c2Ugw6l0YWllbnQgcHLDqXNvbXB0aWZzIGTigJlpcnLDqWd1bGFyaXTDqXMgc3VzY2VwdGlibGVzIGRlIGZvbmRlciBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZGUgTS7CoFgsIMOgIGhhdXRldXIgZGUgMzbCoDExNSwzMMKg4oKsLCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2XCoDIwMDnCoDsKQ29uc2lkw6lyYW50IHF1ZSBkYW5zIHNlcyBvYnNlcnZhdGlvbnMgZW4gcsOpcG9uc2UgZHUgNcKganVpbGxldMKgMjAxMiwgTS7CoFggYSB0cmFuc21pcyBsZSBzcMOpY2ltZW4gZGUgc2lnbmF0dXJlIGRlIE1tZSBaIGR1IDFlcsKganVpbGxldMKgMjAwOMKgOyBxdeKAmWVuIG91dHJlLCBpbMKgaW52b3F1ZSDDoCBkw6ljaGFyZ2UgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy0wNjAtQiBkdSAxN8Kgbm92ZW1icmXCoDIwMDMgcG91ciBqdXN0aWZpZXIgbOKAmWFic2VuY2UgZGUgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCuywgbGEgdHJhbnNtaXNzaW9uIGTigJnDqWzDqW1lbnRzIGRlIG5hdHVyZSDDoCBzZSBzdWJzdGl0dWVyIMOgIGzigJlhYnNlbmNlIGRlIG1lbnRpb24gZHUgc2VydmljZSBmYWl0IGV0IGxhIG5hdHVyZSBkZXMgZMOpcGVuc2VzIG9yZG9ubmFuY8OpZXMgcGFyIGNlcnRhaW5zIG1hbmRhdHPCoDsKQ29uc2lkw6lyYW50IHRvdXRlZm9pcyBxdWUgbGUgc3DDqWNpbWVuIGRlIHNpZ25hdHVyZSBkZSBNbWUgWiBkdSAxZXLCoGp1aWxsZXTCoDIwMDggbmUgY29ycmVzcG9uZCBwYXMgw6AgY2VsdWkgZMOpcG9zw6kgbGUgNcKgZMOpY2VtYnJlwqAyMDA3IHRyYW5zbWlzIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uwqA7IHF14oCZZW4gb3V0cmUsIGxhIHNpZ25hdHVyZSBwb3J0w6llIHN1ciBsZXMgbWFuZGF0cyBu4oCZZXN0IGFjY29tcGFnbsOpZSBuaSBkdSBub20gZHUgc2lnbmF0YWlyZSwgbmkgZGUgbOKAmWlkZW50aWZpY2F0aW9uIGR1IGTDqWzDqWdhdGFpcmUsIG5pIGRlIGxhIG1lbnRpb24gwqvCoGVuIGzigJlhYnNlbmNlIGR1IGRpcmVjdGV1csKgwrsgY29uZm9ybcOpbWVudCDDoCBs4oCZYXJyw6p0w6kgZGUgZMOpbMOpZ2F0aW9uIGRlIHNpZ25hdHVyZSBkdSBwcsOpZmV0IGRlIGzigJlBbGxpZXIgZHUgMjPCoGp1aW7CoDIwMDggOwpDb25zaWTDqXJhbnQgcXVlIHNpIGxlIGNvbXB0YWJsZSBzZSByw6lmw6hyZSDDoCBs4oCZaW5zdHJ1Y3Rpb24gY29kaWZpY2F0cmljZSBuwrDCoDAzLTA2MC1CLCBj4oCZZXN0IGRlIGZhw6dvbiBpbmNvbXBsw6h0ZcKgOyBxdeKAmWVuIGVmZmV0IGNldHRlIGluc3RydWN0aW9uIHByw6ljaXNlIHF1ZSBsYSBjZXJ0aWZpY2F0aW9uIGR1IHNlcnZpY2UgZmFpdCBkb2l0IMOqdHJlIG1hdMOpcmlhbGlzw6llLCBzb2l0IHBhciBsYSBtZW50aW9uIGR1IHNlcnZpY2UgZmFpdCBzdXIgbGEgZmFjdHVyZSBhdmVjIHNpZ25hdHVyZSBkZSBs4oCZb3Jkb25uYXRldXIsIHNhdWYgc2kgY2VsbGUtY2kgZXN0IHBvcnTDqWUgc3VyIGzigJlvcmRvbm5hbmNlIG91IGxlIG1hbmRhdCBkZSBwYWllbWVudCwgc29pdCBwYXIgdW4gY2VydGlmaWNhdCBkZSBzZXJ2aWNlIGZhaXQgw6l0YWJsaSBwYXIgbOKAmW9yZG9ubmF0ZXVywqA7IHF1ZSBsYSB0cmFuc21pc3Npb24gwqvCoGTigJnDqWzDqW1lbnRzIGRlIG5hdHVyZSDDoCBzZSBzdWJzdGl0dWVyIMOgIGzigJlhYnNlbmNlIGRlIG1lbnRpb24gZHUgc2VydmljZSBmYWl0wqDCuyBuZSBjb21wZW5zZSBs4oCZYWJzZW5jZSBkZSBsYSBtZW50aW9uIGV4cGxpY2l0ZSDCq8Kgc2VydmljZSBmYWl0wqDCuyBzdXIgbGUgbWFuZGF0IGRlIHBhaWVtZW50wqA7IHF1ZSBzaSB0ZWwgw6l0YWl0IGxlIGNhcywgY2VzIHBpw6hjZXMgZmlndXJlcmFpZW50IGRhbnMgbGEgbGlzdGUgZGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgw6Agam9pbmRyZSBhdSBjb21wdGUgZGUgZ2VzdGlvbsKgOwpDb25zaWTDqXJhbnQgcXXigJlhdXggdGVybWVzIGR1IHBhcmFncmFwaGUgVklJSSBkZSBsYSBsb2kgZHUgMjTCoGbDqXZyaWVywqAxOTYzIG1vZGlmacOpZSwgbGVzIGludMOpcsOqdHMgYXUgdGF1eCBsw6lnYWwgY291cmVudCDCq8Kgw6AgY29tcHRlciBkdSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBjb21wdGFibGVzIHB1YmxpY3PCoMK7wqA7CkF0dGVuZHUgcXXigJllbiBs4oCZZXNww6hjZSwgbGUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBlc3QgbGEgbm90aWZpY2F0aW9uIGR1IHLDqXF1aXNpdG9pcmUgZG9udCBNLsKgWCBhwqBhY2N1c8OpIHLDqWNlcHRpb24gbGUgNcKganVpbsKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoCBjb21wdGVyIGRlIGNldHRlIGRhdGXCoDsKClBhciBjZXMgbW90aWZzLApNLsKgWCBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIDM2wqAxMTUsMzDCoOKCrCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOSwgYXVnbWVudMOpZSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1IDXCoGp1aW7CoDIwMTIuClRyb2lzacOobWUgY2hhcmdlIGR1IHLDqXF1aXNpdG9pcmUKQXR0ZW5kdSBxdWUgbGUgUHJvY3VyZXVyIGfDqW7DqXJhbCBhIHJlbGV2w6kgcXVlIGxlIGNvbXB0YWJsZSBhdmFpdCBwYXnDqSBlbiAyMDA5LCDDoCBoYXV0ZXVyIGRlIDEzMsKgOTgxLDc2wqDigqwsIHN1ciBsZXMgcHJvZ3JhbW1lcyBkdSBtaW5pc3TDqHJlIGR1IGJ1ZGdldCBuwrBzwqAxNTYgwqvCoEdlc3Rpb24gZmlzY2FsZSBldCBmaW5hbmNpw6hyZSBkZSBs4oCZRXRhdCBldCBkdSBzZWN0ZXVyIHB1YmxpYyBsb2NhbMKgwrsgY29kZSBvcmRvbm5hdGV1ciAwNzAwMDMsIDIxOCDCq8KgQ29uZHVpdGUgZXQgcGlsb3RhZ2UgZGVzIHBvbGl0aXF1ZXMgw6ljb25vbWlxdWUgZXQgZmluYW5jacOocmXCoMK7IGNvZGUgb3Jkb25uYXRldXIgMDcxMDAzIGV0wqA3MjIgwqvCoENvbnRyaWJ1dGlvbiBhdXggZMOpcGVuc2VzIGltbW9iaWxpw6hyZXPCoMK7IGNvZGUgb3Jkb25uYXRldXIgNzMwMDAzLCBjaW5xdWFudGUgZXQgdW4gbWFuZGF0cyByw6lwZXJ0b3Jpw6lzIGF1IHRhYmxlYXUgc3VpdmFudCA6CgoKCgoKKiBTaWduYXR1cmUgZGUgbOKAmW9yZG9ubmF0ZXVyIHNlY29uZGFpcmUgcGFyIGTDqWzDqWdhdGlvbiBzdXIgbGEvbGVzIGZhY3R1cmUocykKQXR0ZW5kdSBxdWUgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCuyBu4oCZZXN0IGFwcG9zw6llIG5pIHN1ciBsZXMgbWFuZGF0cyBwcsOpY2l0w6lzIG5pIHN1ciBsZXMgcGnDqGNlcyDDoCBs4oCZYXBwdWkgOwpBdHRlbmR1IHF14oCZaW50ZXJyb2fDqSBzdXIgY2UgcG9pbnQsIGxlIGNvbXB0YWJsZSBhIHLDqXBvbmR1IHF1ZSDCq8KgbGVzIG1hbmRhdHMgY2l0w6lzIGRhbnMgY2V0dGUgbGlzdGUgYXlhbnQgw6l0w6kgZWZmZWN0aXZlbWVudCB2w6lyaWZpw6lzIChjb25mb3Jtw6ltZW50IGF1IENIRCksIHNvbnQgbGVzIG7CsHPCoDE4MSwgMjAxLCAyMjggKHByb2dyYW1tZSAxNTYpIGFpbnNpIHF1ZSBsZXMgMDUsIDMxIGV0IDM0IChwcm9ncmFtbWUgMjE4KSBb4oCmXS4gIHF14oCZZW4gYXZhbCwgbGUgc2VydmljZSBkZSBsYSBkw6lwZW5zZSAgY2hhcmfDqSBkZXMgcGFpZW1lbnRzIMOgIGxhIHRyw6lzb3JlcmllIGfDqW7DqXJhbGUsIG5lIGJsb3F1YWl0IHBhcyBsZXMgbWFuZGF0cyBhcHB1ecOpcyBkZSBwacOoY2VzIG5lIGNvbXBvcnRhbnQgcGFzIGxhIG1lbnRpb24gZHUgc2VydmljZSBmYWl0wqA7IHF14oCZZW4gZWZmZXQsIGxhIGNpcmN1bGFpcmUgTk9SwqA6wqBFQ09aMDMwMDAyMUMgZHUgMzAvMDkvMjAwMyBwb3J0YW50IHLDqWZvcm1lIGRlIGxhIG5vbWVuY2xhdHVyZSBkZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBkZXMgZMOpcGVuc2VzIGRlIGzigJlFdGF0LCDDqW5vbmNlLCBwYXIgc29uIGFubmV4ZSBkw6lub21tw6llIMKrwqBjYWRyZSBnw6luw6lyYWwgZGUgbGEgbm9tZW5jbGF0dXJlwqDCuywgbGEgZGlzcG9zaXRpb24gc3VpdmFudGXCoDogwqvCoOKApmlsIGVzdCByYXBwZWzDqSBxdWUgbOKAmW9yZG9ubmF0ZXVyIHPigJllbiB0aWVudCwgc2F1ZiBleGNlcHRpb25zIFvigKZdLCDDoCBsYSBzZXVsZSBzaWduYXR1cmUgZHUgbWFuZGF0IG91IGRlIGzigJlvcmRvbm5hbmNlIGV0IGVuIGF1Y3VuIGNhcyBkZSBs4oCZw6l2ZW50dWVsIGJvcmRlcmVhdSBkZSBtYW5kYXRzIGV0IGRlcyBmYWN0dXJlcyBqb2ludGVzIGF1eCBtYW5kYXRzLCBhdXggZmlucyBkZSBjZXJ0aWZpY2F0aW9uIGR1IHNlcnZpY2UgZmFpdMKgwrvCoDsKQXR0ZW5kdSBxdWUgbGUgY29tcHRhYmxlIGZhaXQgYXVzc2kgc2F2b2lyIHF1ZSDCq8KgbGVzIGFwcGxpY2F0aW9ucyBpbmZvcm1hdGlxdWVzIHV0aWxpc8OpZXMgYXUgbml2ZWF1IGxvY2FsIChOREwpLCBuZSBwZXJtZXR0ZW50IHBhcyBs4oCZaW1wcmVzc2lvbiBzdXIgbGUgbWFuZGF0IGTigJl1bmUgbWVudGlvbiB0ZWxsZSBxdWUgwqvCoHBvdXIgdmFsb2lyIGF0dGVzdGF0aW9uIGR1IHNlcnZpY2UgZmFpdMKgwrsuIElsIG7igJlhIHBhcyDDqXTDqSBleGlnw6kgZGUgbGEgcG9ydGVyIG1hbnVlbGxlbWVudCwgbGEgc2lnbmF0dXJlIGR1IG1hbmRhdCDDqXRhbnQgY29uc2lkw6lyw6llLCBzZWxvbiBsZXMgZGlzcG9zaXRpb25zIHN1c3Zpc8OpZXMsIGNvbW1lIGzigJlhdHRlc3RhbnQgZWZmZWN0aXZlbWVudCBzb3VzIGxhIHJlc3BvbnNhYmlsaXTDqSBkZSBs4oCZb3Jkb25uYXRldXIuIFBvdXIgY2hhcXVlIG1hbmRhdCwgbGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgZHUgc2VydmljZSBmYWl0IGFzc2V6IHNvdXZlbnQgdHJhbnNtaXNlcyBsb3JzIGRlIGxhIGRlbWFuZGUgZGUgcGFpZW1lbnQgb3UgY29uc2VydsOpZXMgZGFucyBsZXMgZG9zc2llcnMgZGVzIHNlcnZpY2VzIGdlc3Rpb25uYWlyZXMsIHNvbnQgdHJhbnNtaXNlcyBwYXIgY291cnJpZXLCoMK7wqA7CkF0dGVuZHUgcXXigJllbiBvdXRyZSwgbG9ycyBkZSBs4oCZaW5zdHJ1Y3Rpb24sIGxlIGNvbXB0YWJsZSBhIHRyYW5zbWlzIMOgIGxhIENvdXIsIGRvbmMgYSBwb3N0ZXJpb3JpLCBkZXMgwqvCoMOpbMOpbWVudHMgZGUgbmF0dXJlIMOgIHNlIHN1YnN0aXR1ZXIgw6AgbOKAmWFic2VuY2UgZGUgbWVudGlvbiBkdSBzZXJ2aWNlIGZhaXTCoMK7LCB0ZWxsZXMgc2Vsb24gbHVpLCBsZXMgY29waWVzIGRlIGJvbiBkZSBjb21tYW5kZSBvdSBkZSBsaXZyYWlzb24sIGRlIGNvbnRyYXRzLCBkZSBmZXVpbGxlcyBkZSBwcsOpc2VuY2XCoDsKQXR0ZW5kdSB0b3V0ZWZvaXMgcXVlIGxhIHJlc3BvbnNhYmlsaXTDqSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzIHPigJlhcHByw6ljaWUgYXUgbW9tZW50IGR1IHBhaWVtZW50wqA7IHF14oCZw6AgY2V0dGUgZGF0ZSwgbGVzIHBpw6hjZXMgcHJvZHVpdGVzIGVuIGp1c3RpZmljYXRpb24gZGVzIG1hbmRhdHMgbmUgcGVybWV0dGFpZW50IHBhcyBhdSBjb21wdGFibGUgZGUgdsOpcmlmaWVyIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSA7IHF1ZSBsYSBjaXJjb25zdGFuY2UgcXVlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGR1IHNlcnZpY2UgZmFpdCBhaWVudCDDqXTDqSBkw6l0ZW51ZXMgcGFyIGxlcyBzZXJ2aWNlcyBnZXN0aW9ubmFpcmVzIGRlIGxhIHRyw6lzb3JlcmllIGfDqW7DqXJhbGUgbmUgY29tcGVuc2UgcGFzIGxlIGTDqWZhdXQgZGVzIGp1c3RpZmljYXRpb25zIGV4aWfDqWVzIHBhciBsZXMgcsOoZ2xlbWVudHPCoDsgCkF0dGVuZHUgcXVlIGxlIGNvbXB0YWJsZSBhdXJhaXQgZMO7IHNlIGNvbmZvcm1lciBhdXggZGlzcG9zaXRpb25zIHByw6l2dWVzIGF1eCBhcnRpY2xlcyAxMiBldCAxMyBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyIHN1c3Zpc8OpLCBzZWxvbiBsZXNxdWVsbGVzIGxlcyBjb250csO0bGVzIHF14oCZaWwgZG9pdCBlZmZlY3R1ZXIgcG9ydGVudCBub3RhbW1lbnQgc3VyIGxhIMKrwqBqdXN0aWZpY2F0aW9uIGR1IHNlcnZpY2UgZmFpdCDCuyA7CkF0dGVuZHUgcXXigJnDoCBkw6lmYXV0IGTigJlhdHRlc3RhdGlvbiBkZSBzZXJ2aWNlIGZhaXQsIGxlIGNvbXB0YWJsZSBhdXJhaXQgZMO7IHN1c3BlbmRyZSBsZXMgcGFpZW1lbnRzIGRlcyBtYW5kYXRzIHLDqXBlcnRvcmnDqXMgY2ktZGVzc3VzIGV0IGVuIGluZm9ybWVyIGzigJlvcmRvbm5hdGV1ciBlbiBhcHBsaWNhdGlvbiBkZSBsJ2FydGljbGUgMzcgZHUgZMOpY3JldCBkdSAyOSBkw6ljZW1icmUgMTk2MiBwcsOpY2l0w6nCoDsKQXR0ZW5kdSBxdeKAmWVuIGFwcGxpY2F0aW9uIGRlIGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkdSAyMyBmw6l2cmllciAxOTYzIHN1c3Zpc8OpZSwgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBzZSB0cm91dmUgZW5nYWfDqWUgZMOocyBsb3JzIHF1J3VuZSBkw6lwZW5zZSBhIMOpdMOpIGlycsOpZ3VsacOocmVtZW50IHBhecOpZcKgOwpBdHRlbmR1IHF1ZSwgcGFyIGxlIHLDqXF1aXNpdG9pcmUgc3Vzdmlzw6ksIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSBlc3RpbcOpIHF1ZSBsZXMgcGFpZW1lbnRzIHN1c21lbnRpb25uw6lzIMOpdGFpZW50IHByw6lzb21wdGlmcyBk4oCZaXJyw6lndWxhcml0w6lzIHN1c2NlcHRpYmxlcyBkZSBmb25kZXIgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlIE0uwqBYLCDDoCBoYXV0ZXVyIGRlIDEzMsKgOTgxLDc2wqDigqwsIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA5IDsKCkNvbnNpZMOpcmFudCBxdWUgZGFucyBzZXMgb2JzZXJ2YXRpb25zIGVuIHLDqXBvbnNlLCBkdSA1wqBqdWlsbGV0wqAyMDEyLCBNLsKgWCBpbnZvcXVlIGzigJllbmpldSBpbXBvcnRhbnQgcXXigJnDqXRhaXQgbGUgZMOpbGFpIGdsb2JhbCBkZSBwYWllbWVudMKgOyBxdeKAmWlsIGZhaXQgcsOpZsOpcmVuY2Ugw6AgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy0wNjAtQiBkdSAxN8Kgbm92ZW1icmXCoDIwMDMgcG91ciBqdXN0aWZpZXIgbOKAmWFic2VuY2UgZGUgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCu8KgOyBxdeKAmWlsIGZhaXQgw6l0YXQgZOKAmcOpbMOpbWVudHMgZGUgbmF0dXJlIMOgIHNlIHN1YnN0aXR1ZXIgw6AgbOKAmWFic2VuY2UgZGUgbWVudGlvbiBkdSBzZXJ2aWNlIGZhaXTCoDsKQ29uc2lkw6lyYW50IHRvdXRlZm9pcyBxdWUgY2VzIGFyZ3VtZW50cyBuZSBwZXV2ZW50IMOqdHJlIHJldGVudXPCoDsgcXXigJllbiBlZmZldCwgZW4gcHJlbWllciBsaWV1LCBsZSBjb21wdGFibGUgc2UgcsOpZsOocmUgZGUgbWFuacOocmUgaW5jb21wbMOodGUgw6AgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy0wNjAtQsKgOyBxdWUgY2V0dGUgaW5zdHJ1Y3Rpb24gcHLDqWNpc2UgcXVlIGxhIGNlcnRpZmljYXRpb24gZHUgc2VydmljZSBmYWl0IGRvaXQgw6p0cmUgbWF0w6lyaWFsaXPDqWUsIHNvaXQgcGFyIGxhIG1lbnRpb24gZHUgc2VydmljZSBmYWl0IHN1ciBsYSBmYWN0dXJlIGF2ZWMgc2lnbmF0dXJlIGRlIGzigJlvcmRvbm5hdGV1ciwgc2F1ZiBzaSBjZWxsZS1jaSBlc3QgcG9ydMOpZSBzdXIgbOKAmW9yZG9ubmFuY2Ugb3UgbGUgbWFuZGF0IGRlIHBhaWVtZW50LCBzb2l0IHBhciB1biBjZXJ0aWZpY2F0IGRlIHNlcnZpY2UgZmFpdCDDqXRhYmxpIHBhciBs4oCZb3Jkb25uYXRldXLCoDsgCkNvbnNpZMOpcmFudCBlbiBzZWNvbmQgbGlldSwgcXVlIGxhIHRyYW5zbWlzc2lvbiBwYXIgbGUgY29tcHRhYmxlIGTigJnDqWzDqW1lbnRzIHF1aSBzZXJhaWVudCBkZSBuYXR1cmUgw6Agc2Ugc3Vic3RpdHVlciDDoCBs4oCZYWJzZW5jZSBkZSBtZW50aW9uIGR1IHNlcnZpY2UgZmFpdCBuZSBjb21wZW5zZSBwYXMgbOKAmWFic2VuY2UgZGUgbGEgbWVudGlvbiBleHBsaWNpdGUgwqvCoHNlcnZpY2UgZmFpdMKgwrsgc3VyIGxlIG1hbmRhdCBkZSBwYWllbWVudMKgOyBxdWUgc2kgdGVsIMOpdGFpdCBsZSBjYXMsIGNlcyBwacOoY2VzIGZpZ3VyZXJhaWVudCBkYW5zIGxhIGxpc3RlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIMOgIGpvaW5kcmUgYXUgY29tcHRlIGRlIGdlc3Rpb27CoDsKQ29uc2lkw6lyYW50IHBhciBhaWxsZXVycyBxdWUgcG91ciBsZSBtYW5kYXQgbsKwwqAxODEsIGxlIG1vbnRhbnQgcGF5w6kgbuKAmWVzdCBxdWUgZGUgMTTCoDE3MCwyMMKg4oKsIGF1IGxpZXUgZGVzIDE5wqAxMzIsNDDCoOKCrCBtYW5kYXTDqXMsIHN1aXRlIGF1IG5vbi1wYWllbWVudCBk4oCZdW5lIGZhY3R1cmUgZGUgNMKgOTYyLDIwwqDigqwgbm9uIGpvaW50ZSBhdSBtYW5kYXTCoDsgcXXigJlpbCBz4oCZZW5zdWl0IHF1ZSBsZSBtb250YW50IGRlIGxhIGNoYXJnZSBlc3QgY29ycmlnw6kgZGUgNMKgOTYyLDIwwqDigqwgZXQgc+KAmcOpdGFibGl0IGRvbmMgw6AgaGF1dGV1ciBkZSAxMjjCoDAxOSw1NsKg4oKswqA7CkNvbnNpZMOpcmFudCBxdeKAmWF1eCB0ZXJtZXMgZHUgcGFyYWdyYXBoZSBWSUlJLCBsZXMgaW50w6lyw6p0cyBhdSB0YXV4IGzDqWdhbCBjb3VyZW50IMKrwqDDoCBjb21wdGVyIGR1IHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZGVzIGNvbXB0YWJsZXMgcHVibGljc8KgwrvCoDsKQXR0ZW5kdSBxdeKAmWVuIGzigJllc3DDqGNlLCBsZSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIGVzdCBsYSBub3RpZmljYXRpb24gZHUgcsOpcXVpc2l0b2lyZSBkb250IE0uwqBYIGEgYWNjdXPDqSByw6ljZXB0aW9uIGxlIDXCoGp1aW7CoDIwMTLCoDsgcXVlIGxlcyBpbnTDqXLDqnRzIGRvaXZlbnQgZG9uYyBjb3VyaXIgw6AgY29tcHRlciBkZSBjZXR0ZSBkYXRlwqA7ClBhciBjZXMgbW90aWZzLApNLsKgWCBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIDEyOMKgMDE5LDU2wqDigqwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDksIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgw6AgY29tcHRlciBkdSA1wqBqdWluwqAyMDEyLgpJbCBu4oCZeSBhIHBhcyBsaWV1IGRlIHByb25vbmNlciBkZSBjaGFyZ2Ugw6AgbOKAmWVuY29udHJlIGRlIE0uwqBYIMOgIGhhdXRldXIgZGUgNMKgOTYyLDIwwqDigqwuCgpRdWF0cmnDqG1lIGNoYXJnZSBkdSByw6lxdWlzaXRvaXJlCkF0dGVuZHUgcXVlIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSByZWxldsOpIHF1ZSBkZXMgZnJhaXMgZGUgZMOpcGxhY2VtZW50IGV0IGRlcyBhdmFuY2VzIHN1ciBmcmFpcyBkZSBkw6lwbGFjZW1lbnQgYXZhaWVudCBmYWl0IGzigJlvYmpldCBkZSBwYWllbWVudHMgw6AgZGVzIGFnZW50cyBkZSBsYSBkaXJlY3Rpb24gZGVzIHNlcnZpY2VzIGZpc2NhdXggZGUgbOKAmUFsbGllciwgw6AgaGF1dGV1ciBkZSAyMsKgNDc0LDE1wqDigqwsIGVuIGV4w6ljdXRpb24gZGVzIG1hbmRhdHMgcsOpcGVydG9yacOpcyBhdSB0YWJsZWF1IHN1aXZhbnQgOgoKQXR0ZW5kdSBxdWUgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCuyBu4oCZZXN0IHBhcyBhcHBvc8OpZSBzdXIgbGVzIG1hbmRhdHMgbsKwc8KgNSwgNDIsIDg3LCAxMDksIDI3MywgMjgzLCAyOTYsIDMxMCwgMzMwIGV0IDMzNSBwcsOpY2l0w6lzIChwacOoY2VzIDRhLiAxLCA0YS4gNCDDoCA0YS7CoDEyKSA7IHF14oCZw6AgY2VzIG1hbmRhdHMgc29udCBqb2ludHMgZGVzIMOpdGF0cyBkZSBmcmFpcyBkZSBkw6lwbGFjZW1lbnQsIG91IGRlcyBkZW1hbmRlcyBk4oCZYXZhbmNlcywgbm9uIHJldsOqdHVzIGRlIGxhIHNpZ25hdHVyZSBkZXMgYsOpbsOpZmljaWFpcmVzIChwacOoY2VzIDRhLiAxIMOgIDRhLsKgMTIpwqA7CgpBdHRlbmR1LCBlbiBvdXRyZSwgcXVlIGRlcyBmcmFpcyBkZSBkw6lwbGFjZW1lbnQgZXQgZGVzIGF2YW5jZXMgc3VyIGZyYWlzIGRlIGTDqXBsYWNlbWVudCBvbnQgZmFpdCBs4oCZb2JqZXQgZGUgcGFpZW1lbnRzIMOgIGRlcyBhZ2VudHMgZGUgbGEgZGlyZWN0aW9uIGRlcyBzZXJ2aWNlcyBmaXNjYXV4IGRlIGzigJlBbGxpZXIsIMOgIGhhdXRldXIgZGUgMjXCoDc4OSwwNsKg4oKsLCBlbiBleMOpY3V0aW9uIGRlcyBtYW5kYXRzIHLDqXBlcnRvcmnDqXMgYXUgdGFibGVhdSBzdWl2YW50IDoKCkF0dGVuZHUgcXXigJlhdXggbWFuZGF0cyA0YS4gMTMgw6AgNGEuIDMxLCDDqXRhaWVudCBqb2ludHMgZGVzIMOpdGF0cyBkZSBmcmFpcyBkZSBkw6lwbGFjZW1lbnQsIG91IGRlcyBkZW1hbmRlcyBk4oCZYXZhbmNlcywgbm9uIHJldsOqdHVzIGRlIGxhIHNpZ25hdHVyZSBkZXMgYsOpbsOpZmljaWFpcmVzwqA7IHF14oCZYXUgc3VycGx1cyBjZXMgw6l0YXRzIG5vbiBkYXTDqXMgbuKAmW9udCDDqXTDqSBuaSBhcnLDqnTDqXMgbmkgbGlxdWlkw6lzIHBhciBs4oCZb3Jkb25uYXRldXLCoDsKQXR0ZW5kdSBxdWUgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy0wNjAtQiBkdSAxNyBub3ZlbWJyZSAyMDAzIHN1c3Zpc8OpZSBwcsOpdm9pdCwgZW4gc2VzIHBhcmFncmFwaGVzIDIuMS4xLjEgwqvCoE1pc3Npb24gwrsgZXQgMi4xLjMuMSDCq8KgVXRpbGlzYXRpb24gZHUgdsOpaGljdWxlIHBlcnNvbm5lbMKgwrssIHF1ZSBkb2l0IMOqdHJlIGZvdXJuaSBhdSBjb21wdGFibGUsIGVuIHN1cyDCq8KgZGUgbOKAmW9yZHJlIGRlIG1pc3Npb24gKG91IGFzc2ltaWzDqSnCoMK7LCDCq8KgdW4gw6l0YXQgZGUgZnJhaXMgc2lnbsOpIHBhciBsZSBiw6luw6lmaWNpYWlyZSBldCBjZXJ0aWZpw6kgcGFyIGxhIHBlcnNvbm5lIGhhYmlsaXTDqWUgw6AgbGUgZmFpcmUsIHNhdWYgw6AgY2UgcXVlIGxlIG1hbmRhdCBhdXF1ZWwgaWwgZXN0IGpvaW50IGNvbXBvcnRlIGxhIG1lbnRpb24gwqvCoHNlcnZpY2UgZmFpdMKgwrsgYXBwb3PDqWUgcGFyIGzigJlvcmRvbm5hdGV1csKgwrvCoDsKQXR0ZW5kdSwgcG91ciBsZXMgYXZhbmNlcywgcXVlIGzigJlpbnN0cnVjdGlvbiBjb2RpZmljYXRyaWNlIG7CsMKgMDMtMDYwLUIgZHUgMTfCoG5vdmVtYnJlwqAyMDAzIHN1c3Zpc8OpZSBwcsOpdm9pdCwgZW4gc29uIHBhcmFncmFwaGUgMi4xLjguIMKrIFBhaWVtZW50IGF1eCBhZ2VudHMgYsOpbsOpZmljaWFpcmVzIGTigJl1bmUgYXZhbmNlIHN1ciBmcmFpcyBkZSBkw6lwbGFjZW1lbnQgdGVtcG9yYWlyZcKgwrsgcXVlIGRvaXQgw6p0cmUgZm91cm5pZSBhdSBjb21wdGFibGUsIMKrwqBvdXRyZSBs4oCZb3JkcmUgZGUgbWlzc2lvbiBvdSBkZSBkw6lwbGFjZW1lbnQgb3UgbGEgZMOpY2lzaW9uIGTigJlpbnTDqXJpbSBldCBs4oCZw6l0YXQgZGUgZnJhaXPCoMK7LCDCq8KgbGEgZGVtYW5kZSBkZSBs4oCZYWdlbnTCoMK7wqA7CgpBdHRlbmR1IHF14oCZw6AgZMOpZmF1dCwgbGUgY29tcHRhYmxlIGF1cmFpdCBkw7sgc2UgY29uZm9ybWVyIGF1eCBkaXNwb3NpdGlvbnMgZGVzIGFydGljbGVzIDEyIGV0IDEzIGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIgc3Vzdmlzw6ksIHNlbG9uIGxlc3F1ZWxsZXMgbGVzIGNvbnRyw7RsZXMgcXVlIGxlIGNvbXB0YWJsZSBkb2l0IGVmZmVjdHVlciBlbiBtYXRpw6hyZSBkZSBkw6lwZW5zZXMgcG9ydGVudCBub3RhbW1lbnQgc3VyIGxhIMKrwqBqdXN0aWZpY2F0aW9uIGR1IHNlcnZpY2UgZmFpdCDCuyBldCDCq8KgbGEgcHJvZHVjdGlvbiBkZXMganVzdGlmaWNhdGlvbnPCoMK7wqA7CkF0dGVuZHUgcXXigJnDoCBkw6lmYXV0IGTigJlhcHBvc2l0aW9uIGRlIGxhIG1lbnRpb24gwqvCoHNlcnZpY2UgZmFpdMKgwrssIGRlIHNpZ25hdHVyZSBkZXMgYsOpbsOpZmljaWFpcmVzIGRlIHJlbWJvdXJzZW1lbnQgZGUgZnJhaXMgZGUgZMOpcGxhY2VtZW50LCBkZSBjZXJ0aWZpY2F0aW9uIGRlIGxldXJzIMOpdGF0cyBkZSBmcmFpcyBwYXIgbOKAmWF1dG9yaXTDqSBoYWJpbGl0w6llLCBkZSBkZW1hbmRlcyBk4oCZYXZhbmNlcyBqdXN0aWZpw6llcyBwYXIgbGVzIHBpw6hjZXMgcHLDqXZ1ZXMgw6AgbGEgbm9tZW5jbGF0dXJlLCBsZSBjb21wdGFibGUgYXVyYWl0IGTDuyBzdXNwZW5kcmUgbGVzIHBhaWVtZW50cyBkZXMgbWFuZGF0cyBlbiBjYXVzZSwgZXQgZW4gaW5mb3JtZXIgbOKAmW9yZG9ubmF0ZXVyIGVuIGFwcGxpY2F0aW9uIGRlIGwnYXJ0aWNsZSAzNyBkdSBkw6ljcmV0IGR1IDI5wqBkw6ljZW1icmUgcHLDqWNpdMOpwqA7CkF0dGVuZHUgcXXigJllbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZHUgMjPCoGbDqXZyaWVywqAxOTYzIHN1c3Zpc8OpZSwgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGR1IGNvbXB0YWJsZSBzZSB0cm91dmUgZW5nYWfDqWUgZMOocyBsb3JzIHF1J3VuZSBkw6lwZW5zZSBhIMOpdMOpIGlycsOpZ3VsacOocmVtZW50IHBhecOpZcKgOwpBdHRlbmR1IHF1ZSBwYXIgbGUgcsOpcXVpc2l0b2lyZSBzdXN2aXPDqSwgbGUgUHJvY3VyZXVyIGfDqW7DqXJhbCBhIGVzdGltw6kgcXVlIGxlcyBwYWllbWVudHMgc3VzbWVudGlvbm7DqXMgw6l0YWllbnQgcHLDqXNvbXB0aWZzIGTigJlpcnLDqWd1bGFyaXTDqXMgcG91dmFudCBmb25kZXIgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlIE0uwqBYLCDDoCBoYXV0ZXVyIGRlIDQ4wqAyNjMsMjHCoOKCrCwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDnCoDsKQ29uc2lkw6lyYW50IHF1ZSBkYW5zIHNlcyBvYnNlcnZhdGlvbnMgZW4gcsOpcG9uc2UgZHUgNcKganVpbGxldMKgMjAxMiwgTS7CoFggdHJhbnNtZXQgbGEgbGV0dHJlIGR1IGRpcmVjdGV1ciBnw6luw6lyYWwgZGUgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSBkdSAzwqBhb8O7dMKgMjAwNyBxdWkgcHLDqWNpc2UgcXVlIGxlcyBzaWduYXR1cmVzIGRlcyBiw6luw6lmaWNpYWlyZXMgc3VyIGxlcyDDqXRhdHMgZGUgZnJhaXMgbmUgc29udCBwbHVzIGV4aWdpYmxlcyBkYW5zIGxlIGNhZHJlIGRlIGxldXIgdHJhaXRlbWVudCBhdXRvbWF0aXPDqSBkYW5zIGzigJlhcHBsaWNhdGlvbiBBR09SQcKgOwpDb25zaWTDqXJhbnQgdG91dGVmb2lzIHF1ZSwgbmkgbGVzIGVmZmV0cyBkZSBsYSBkw6ltYXTDqXJpYWxpc2F0aW9uIGRlcyBmcmFpcyBkZSBtaXNzaW9uIHBhciBs4oCZYXBwbGljYXRpb24gQUdPUkEsIG5pIGxhIGxldHRyZSBkdSBkaXJlY3RldXIgZ8OpbsOpcmFsIGRlIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUgbmUgc2F1cmFpZW50IMOqdHJlIGNvbnRyYWlyZXMgYXV4IGRpc3Bvc2l0aW9ucyByw6lnbGVtZW50YWlyZXMsIG5vdGFtbWVudCAgw6AgIGxhIGNpcmN1bGFpcmUgcmVsYXRpdmUgw6AgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGR1IDMwIHNlcHRlbWJyZcKgMjAwMyBldCBuZSBzb250IHBhcyAgb3Bwb3NhYmxlcyBhdSBqdWdlIGRlcyBjb21wdGVzwqA7IApDb25zaWTDqXJhbnQgcXVlIE0uwqBYIGZhaXQgdmFsb2lyICBxdWUgbGVzIHBpw6hjZXMgYWNjb21wYWduYW50IGxlcyDDqXRhdHMgZGUgZnJhaXMgY29uc3RpdHVlbnQsIMOgIHNvbiBzZW5zLCB1bmUgcHJldXZlIG1hdMOpcmllbGxlIGR1IHNlcnZpY2UgZmFpdCBxdWkgcGVybWV0dGFpdCBkZSBuZSBwYXMgcmVuZHJlIGV4cHJlc3PDqW1lbnQgbsOpY2Vzc2FpcmUgdW5lIGF1dHJlIG1lbnRpb24gc3VyIGxlcyBtYW5kYXRzwqA7IHF1ZSBsYSBzaWduYXR1cmUgZHUgbWFuZGF0IHZhdXQgw6AgZWxsZSBzZXVsZSBjZXJ0aWZpY2F0aW9uIGNvbmZvcm3DqW1lbnQgYXV4IHRlcm1lcyBkZSBs4oCZYW5uZXhlIDIgZGUgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy0wNjAtQiBkdSAxN8Kgbm92ZW1icmXCoDIwMDMgc3Vzdmlzw6llwqA7CkNvbnNpZMOpcmFudCBxdeKAmWlsIHLDqXN1bHRlIGRlcyBkaXNwb3NpdGlvbnMgZGUgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgCm7CsMKgMDMtMDYwLUIgcHLDqWNpdMOpZXMsIHF1ZSBsYSBzZXVsZSBzaWduYXR1cmUgZHUgbWFuZGF0LCBub24gc3VpdmllIGRlIGxhIG1lbnRpb24gZXhwbGljaXRlIGR1IHNlcnZpY2UgZmFpdCwgbmUgdmF1dCBwYXMganVzdGlmaWNhdGlvbsKgOwpDb25zaWTDqXJhbnQgZMOocyBsb3JzIHF1ZSBsYSByZXNwb25zYWJpbGl0w6kgZHUgY29tcHRhYmxlIGRvaXQgw6p0cmUgbWlzZSBlbiBqZXUgcG91ciBhdm9pciBlZmZlY3R1w6kgZGVzIHBhaWVtZW50cyBpcnLDqWd1bGllcnMgOyAKQ29uc2lkw6lyYW50IHF14oCZYXV4IHRlcm1lcyBkdSBwYXJhZ3JhcGhlIFZJSUksIGxlcyBpbnTDqXLDqnRzIGF1IHRhdXggbMOpZ2FsIGNvdXJlbnQgwqvCoMOgIGNvbXB0ZXIgZHUgcHJlbWllciBhY3RlIGRlIGxhIG1pc2UgZW4gamV1IGRlIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkZXMgY29tcHRhYmxlcyBwdWJsaWNzwqDCu8KgOwpBdHRlbmR1IHF14oCZZW4gbOKAmWVzcMOoY2UsIGxlIHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgZXN0IGxhIG5vdGlmaWNhdGlvbiBkdSByw6lxdWlzaXRvaXJlIGRvbnQgTS7CoFggYSBhY2N1c8OpIHLDqWNlcHRpb24gbGUgNcKganVpbsKgMjAxMsKgOyBxdWUgbGVzIGludMOpcsOqdHMgZG9pdmVudCBkb25jIGNvdXJpciDDoCBjb21wdGVyIGRlIGNldHRlIGRhdGXCoDsKUGFyIGNlcyBtb3RpZnMsCk0uwqBYIGVzdCBjb25zdGl0dcOpIGTDqWJpdGV1ciBlbnZlcnMgbOKAmUV0YXQgZGUgbGEgc29tbWUgZGXCoDQ4wqAyNjMsMjHCoOKCrCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOSwgYXVnbWVudMOpZSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCDDoCBjb21wdGVyIGR1wqA1wqBqdWluwqAyMDEyLgoKQ2lucXVpw6htZSBjaGFyZ2UgZHUgcsOpcXVpc2l0b2lyZQpBdHRlbmR1IHF1ZSBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGEgcmVsZXbDqSBxdWUsIHN1ciBtYW5kYXQgbsKwwqA5MyBkdSAyMMKgamFudmllcsKgMjAwOSwgbGUgY29tcHRhYmxlIGF2YWl0IHBhecOpIHN1ciBsZSBwcm9ncmFtbWUgbsKwwqAxNTYgwqvCoEdlc3Rpb24gZmlzY2FsZSBldCBmaW5hbmNpw6hyZSBkdSBzZWN0ZXVyIHB1YmxpYyBsb2NhbMKgwrssIGNvZGUgb3Jkb25uYXRldXIgMDc3MDAzLCBhdSBwcm9maXQgZGUgbGEgc29jacOpdMOpIMKrwqBBbGxpZXIgU3lzdMOobWXCoMK7LCBsYSBzb21tZSBkZSAxNDIsOTfCoOKCrMKgOyAKQXR0ZW5kdSBxdWUgbGEgbWVudGlvbiDCq8Kgc2VydmljZSBmYWl0wqDCuyBu4oCZZXN0IGFwcG9zw6llIG5pIHN1ciBsZSBtYW5kYXQgbmkgc3VyIGxhIGZhY3R1cmUgZGUgZm91cm5pdHVyZXMgam9pbnRlLCBwb3J0YW50IGxhIG1lbnRpb24gwqvCoGNvcGllwqDCu8KgOyBxdWUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uLCBsZSBjb21wdGFibGUgYSB0cmFuc21pcyB1biBjZXJ0aWZpY2F0IGFkbWluaXN0cmF0aWYsIMOpdGFibGkgbGUgMyBqYW52aWVyIDIwMTEsIGluZGlxdWFudCBxdWUgbOKAmW9yaWdpbmFsIGRlIGxhIGZhY3R1cmUgYXZhaXQgw6l0w6kgw6lnYXLDqSA7IApBdHRlbmR1IHF1ZSwgc3VyIG1hbmRhdCBuwrDCoDMxNSBkdSAyNSBqYW52aWVyIDIwMDksIGxlIGNvbXB0YWJsZSBhIHBhecOpIHN1ciBsZSBwcm9ncmFtbWUgbsKwwqAxNTYgwqvCoEdlc3Rpb24gZmlzY2FsZSBldCBmaW5hbmNpw6hyZSBkdSBzZWN0ZXVyIHB1YmxpYyBsb2NhbMKgwrssIGNvZGUgb3Jkb25uYXRldXIgMDcwMDAzLCBhdSBwcm9maXQgZGUgwqvCoExhIFBvc3RlwqDCuywgbGEgc29tbWUgZGUgNjHCoOKCrMKgOwpBdHRlbmR1IHF1ZSBsYSBtZW50aW9uIMKrwqBzZXJ2aWNlIGZhaXTCoMK7IG7igJllc3QgYXBwb3PDqWUgbmkgc3VyIGxlIG1hbmRhdCBuaSBzdXIgbGEgZmFjdHVyZSBhc3NvY2nDqWUsIGTDqXBvdXJ2dWUgZOKAmWVuLXTDqnRlIGV0IGRlIHNpZ25hdHVyZcKgOyBxdWUsIGxvcnMgZGUgbOKAmWluc3RydWN0aW9uLCBsZSBjb21wdGFibGUgYSBpbmRpcXXDqSBxdWUgbGUgwqvCoG1hbmRhdCBuwrDCoDMxNSBjb25jZXJuZSB1biByZW5vdXZlbGxlbWVudCBhbm51ZWwgZOKAmWFib25uZW1lbnQgZGUgYm/DrnRlIHBvc3RhbGXCoMK7wqA7IHF14oCZaWwgYSBhbG9ycyB0cmFuc21pcyDCq8KgbGEgY29waWUgZHUgcGFwaWxsb24gZGUgbGEgcG9zdGUgam9pbnTCoMK7IDsKQ29uc2lkw6lyYW50IHF14oCZw6AgbGEgZGF0ZSBkZXMgcGFpZW1lbnRzLCBsZXMgcGnDqGNlcyBwcm9kdWl0ZXMgbuKAmcOpdGFpZW50IHBhcyB2YWxpZGVzwqA7IHF1ZSBsZSBjb21wdGFibGUgbuKAmcOpdGFpdCBkb25jIHBhcyBlbiBtZXN1cmUgZOKAmWV4ZXJjZXIgbGVzIGNvbnRyw7RsZXMgcXVpLCBzZWxvbiBsZXMgZGlzcG9zaXRpb25zIGNvbWJpbsOpZXMgZGVzIGFydGljbGVzIDEyIGV0IDEzIGR1IGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIgc3Vzdmlzw6ksIHBvcnRlbnQgbm90YW1tZW50IHN1ciBsYSBqdXN0aWZpY2F0aW9uIGR1IHNlcnZpY2UgZmFpdCBldCBsYSBwcm9kdWN0aW9uIGRlcyBqdXN0aWZpY2F0aW9uc8KgOwpDb25zaWTDqXJhbnQgcXVlIGxlIGNvbXB0YWJsZSBhdXJhaXQgZG9uYyBkw7sgc3VzcGVuZHJlIGxlcyBwYWllbWVudHMgZGVzIG1hbmRhdHMgbsKwcyA5MyBldCAzMTUgZXQgZW4gaW5mb3JtZXIgbOKAmW9yZG9ubmF0ZXVyIGVuIGFwcGxpY2F0aW9uIGRlIGwnYXJ0aWNsZSAzNyBkdSBkw6ljcmV0IGR1IDI5wqBkw6ljZW1icmXCoDE5NjIgcHLDqWNpdMOpwqA7IAoKQ29uc2lkw6lyYW50IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGR1IDIzIGbDqXZyaWVyIDE5NjMgc3Vzdmlzw6llLCBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIHNlIHRyb3V2ZSBlbmdhZ8OpZSBkw6hzIGxvcnNxdSd1bmUgZMOpcGVuc2UgYSDDqXTDqSBpcnLDqWd1bGnDqHJlbWVudCBwYXnDqWXCoDsKQXR0ZW5kdSBxdWUgcGFyIGxlIHLDqXF1aXNpdG9pcmUgc3Vzdmlzw6ksIGxlIFByb2N1cmV1ciBnw6luw6lyYWwgYSBlc3RpbcOpIHF1ZSBsZXMgcGFpZW1lbnRzIHN1c21lbnRpb25uw6lzIMOpdGFpZW50IHByw6lzb21wdGlmcyBk4oCZaXJyw6lndWxhcml0w6lzIGZvbmRhbnQgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlIE0uwqBYLCDDoCBoYXV0ZXVyIGRlIDIwMyw5N8Kg4oKsLCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2XCoDIwMDkgOwpDb25zaWTDqXJhbnQgcXVlIGRhbnMgc2VzIG9ic2VydmF0aW9ucyBlbiByw6lwb25zZSBkYXTDqWVzIGR1IDXCoGp1aWxsZXTCoDIwMTIsIE0uwqBYIHByw6ljaXNlIHF1ZSBjZXMgbWFuZGF0cyBuZSBmYWlzYWllbnQgcGFzIHBhcnRpZSBkdSBwbGFuIGRlIGNvbnRyw7RsZSBoacOpcmFyY2hpc8OpIGRlIGxhIGTDqXBlbnNlIGV0IHF14oCZaWxzIG9udCBkb25jIMOpdMOpIHBhecOpcyBzYW5zIGV4YW1lbiBwcsOpYWxhYmxlwqA7IHF14oCZaWwgY29uZmlybWUgcXVlIGxlIG1hbmRhdCBuwrDCoDkzIGEgZmFpdCBs4oCZb2JqZXQgZOKAmXVuIHBhaWVtZW50IGF1IG1veWVuIGTigJl1bmUgcGhvdG9jb3BpZSBldCBxdWUgbGEgZmFjdHVyZXR0ZSBqb2ludGUgYXUgbWFuZGF0IG7CsMKgMzE1IG5lIGNvbXBvcnRlIHBhcyBsZSBjYWNoZXQgZHUgYnVyZWF1IGRlIHBvc3RlwqA7CkNvbnNpZMOpcmFudCBxdWUsIGNvbnRyYWlyZW1lbnQgYXV4IGRpc3Bvc2l0aW9ucyBkdSBwYXJhZ3JhcGhlIDQgZGUgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgcHLDqWNpdMOpZSBkdSAzMCBzZXB0ZW1icmUgMjAwMywgbGUgZHVwbGljYXRhIGpvaW50IGF1IG1hbmRhdCBuwrDCoDkzIG5lIGNvbXBvcnRlIHBhcyBsYSBtZW50aW9uIMKrwqBkZXN0aW7DqSBhdSBwYWllbWVudMKgwrvCoDsgcXVlIGxhIGZhY3R1cmV0dGUgam9pbnRlIGF1IG1hbmRhdCBuwrDCoDMxNSBuZSBjb21wb3J0ZSBwYXMgbGVzIG1lbnRpb25zIG9ibGlnYXRvaXJlcyBhdXggZmFjdHVyZXPCoDsgCkNvbnNpZMOpcmFudCBxdeKAmWF1eCB0ZXJtZXMgZHUgcGFyYWdyYXBoZSBWSUlJLCBsZXMgaW50w6lyw6p0cyBhdSB0YXV4IGzDqWdhbCBjb3VyZW50IMKrwqDDoCBjb21wdGVyIGR1IHByZW1pZXIgYWN0ZSBkZSBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZGVzIGNvbXB0YWJsZXMgcHVibGljc8KgwrvCoDsKQXR0ZW5kdSBxdeKAmWVuIGzigJllc3DDqGNlLCBsZSBwcmVtaWVyIGFjdGUgZGUgbGEgbWlzZSBlbiBqZXUgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZHUgY29tcHRhYmxlIGVzdCBsYSBub3RpZmljYXRpb24gZHUgcsOpcXVpc2l0b2lyZSBkb250IE0uwqBYIGEgYWNjdXPDqSByw6ljZXB0aW9uIGxlIDXCoGp1aW7CoDIwMTLCoDsgcXVlIGxlcyBpbnTDqXLDqnRzIGRvaXZlbnQgZG9uYyBjb3VyaXIgw6AgY29tcHRlciBkZSBjZXR0ZSBkYXRlwqA7ClBhciBjZXMgbW90aWZzLApNLsKgWCBlc3QgY29uc3RpdHXDqSBkw6liaXRldXIgZW52ZXJzIGzigJlFdGF0IGRlIGxhIHNvbW1lIGRlIDIwMyw5N8Kg4oKsIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA5LCBhdWdtZW50w6llIGRlcyBpbnTDqXLDqnRzIGRlIGRyb2l0IMOgIGNvbXB0ZXIgZHUgNcKganVpbsKgMjAxMi4KLS0tLS0tLS0tLS0tCgoKRmFpdCBldCBqdWfDqSBlbiBsYSBDb3VyIGRlcyBjb21wdGVzLCBQcmVtacOocmUgY2hhbWJyZSwgcHJlbWnDqHJlIHNlY3Rpb24sIGxlwqBxdWF0b3J6ZSBub3ZlbWJyZcKgZGV1eCBtaWwgZG91emUuIFByw6lzZW50c8KgOsKgTW1lwqBGcmFkaW4sIHByw6lzaWRlbnQgZGUgc2VjdGlvbiwgTU0uwqBEZcKgTW91cmd1ZXMsIEJydW4tQnVpc3NvbiwgTS7CoExhaXIsIE1tZSBEb3PCoFJlaXMgZXQgTS7CoENob3V2ZXQsIGNvbnNlaWxsZXJzIG1hw650cmVzLgpTaWduw6nCoDogRnJhZGluLCBwcsOpc2lkZW50IGRlIHNlY3Rpb24sIGV0IEbDqXJleiwgZ3JlZmZpZXIuCkNvbGxhdGlvbm7DqSwgY2VydGlmacOpIGNvbmZvcm1lIMOgIGxhIG1pbnV0ZSDDqXRhbnQgYXUgZ3JlZmZlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMuCkVuIGNvbnPDqXF1ZW5jZSwgbGEgUsOpcHVibGlxdWUgZnJhbsOnYWlzZSBtYW5kZSBldCBvcmRvbm5lIMOgIHRvdXMgaHVpc3NpZXJzIGRlIGp1c3RpY2UsIHN1ciBjZSByZXF1aXMsIGRlIG1ldHRyZSBsZWRpdCBhcnLDqnQgw6AgZXjDqWN1dGlvbiwgYXV4IHByb2N1cmV1cnMgZ8OpbsOpcmF1eCBldMKgYXV4IHByb2N1cmV1cnMgZGUgbGEgUsOpcHVibGlxdWUgcHLDqHMgbGVzIHRyaWJ1bmF1eCBkZSBncmFuZGUgaW5zdGFuY2UgZCd5IHRlbmlyIGxhIG1haW4sIMOgIHRvdXMgY29tbWFuZGFudHMgZXQgb2ZmaWNpZXJzIGRlIGxhIGZvcmNlIHB1YmxpcXVlIGRlIHByw6p0ZXIgbWFpbi1mb3J0ZSBsb3JzcXUnaWxzIGVuIHNlcm9udCBsw6lnYWxlbWVudCByZXF1aXMuCkTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuClBvdXIgbGUgU2VjcsOpdGFpcmUgZ8OpbsOpcmFsCmV0IHBhciBkw6lsw6lnYXRpb24sCmxlIENoZWYgZHUgR3JlZmZlIGNvbnRlbnRpZXV4CgoKCgoKCgoKRGFuaWVsIEZFUkVaCg==</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00132946">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00132946</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">66413</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GEOFFROY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GANSER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>14/03/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/03/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/03/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Ecole nationale supérieure des officiers de sapeurs-pompiers (ENSOSP) - Exercices 2004, du 1er août, et 2005.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00132946.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00132280">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00132280</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65899</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. PEHAU, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>17/01/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">28/02/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/02/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Département des Pyrénées-Orientales - Appel d'un jugement de la chambre régionale des comptes de Languedoc-Roussillon.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 30.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Département</DESCRIPTEUR>
<DESCRIPTEUR>Recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Acte interruptif de prescription</DESCRIPTEUR>
<DESCRIPTEUR>Annulation d'un titre de recettes</DESCRIPTEUR>
<DESCRIPTEUR>Prescription</DESCRIPTEUR>
<DESCRIPTEUR>Rejet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le comptable d'un département avait été constitué en débet pour avoir laissé se prescrire, faute d'avoir accompli les diligences requises, des créances sur une commune. Il faisait valoir, en appel, que le conseil général avait pris une délibération tendant à reporter l'exigibilité de la créance, ce qui avait empêché toute action en recouvrement, que la commune débitrice n'avait pas opposé la prescription et que, par une seconde délibération, le département avait ultérieurement décidé l'annulation des titres, ce qui était de nature à l'exonérer de sa responsabilité. La Cour a rejeté l'ensemble de ces moyens : elle a tout d'abord jugé que la délibération du conseil général accordant un délai de cinq ans à la commune débitrice pour régler sa dette s'était trouvée privée d'effet, dès lors qu'elle n'avait pas été suivie de la conclusion d'un avenant au contrat initial et de l'émission de titres de recettes modificatifs, actes qui étaient seuls de nature à retarder l'effet de la prescription en modifiant la date d'exigibilité des créances ; elle a également estimé que le comptable ne pouvait utilement invoquer à décharge la renonciation de la commune débitrice à opposer la prescription, une telle renonciation devant être explicite ; elle a enfin considéré que l'annulation par l'ordonnateur du titre de créance, postérieurement à la date d'acquisition de la prescription, n'était de nature à dégager la responsabilité du comptable chargé du recouvrement que si elle était accompagnée de pièces attestant de l'inexistence de la créance au moment où le titre avait été atteint par la prescription, ce qui n'était pas le cas en l'espèce. 
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision, commentée à &lt;I style="mso-bidi-font-style: normal"&gt;l'AJDA&lt;/I&gt; 2013, p. 2540, a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'obligation pour le comptable de poursuivre le recouvrement des créances qu'il a prises en charge, tant que les conditions lui permettant d'apprécier la validité de l'annulation ou de la réduction n'ont pas été réunies, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 20 novembre 1991, &lt;I style="mso-bidi-font-style: normal"&gt;trésorier-payeur général du Nord&lt;/I&gt;, Recueil p. 99 et CC, 17 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Saint-Denis de la Réunion&lt;/I&gt;, Recueil 2013, p. 20..
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le fait que l'absence de fondement d'une créance peut aboutir à l'annulation de l'ordre de recette afférent, alors que l'insolvabilité du débiteur se traduit par une admission en non-valeur, cf. CC, 7 juillet 1992, &lt;I style="mso-bidi-font-style: normal"&gt;chambre régionale d'agriculture de Normandie&lt;/I&gt;, Recueil 1992, p. 68. Sur les actes interruptifs de la prescription, cf. CC, 2 mai 2012, &lt;I style="mso-bidi-font-style: normal"&gt;lycée polyvalent Vauvenargues&lt;/I&gt;, Recueil 2012, p. 85 et CC, 1er février 2007, &lt;I style="mso-bidi-font-style: normal"&gt;centre hospitalier de La Rochelle&lt;/I&gt;, Recueil 2007, p. 16.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00132280.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00132278">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00132278</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65876</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. ROGUE, Auditeur</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>17/01/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">28/02/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/02/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Collège La Taillette, Menucourt (Val-d'Oise) - Appel d'un jugement de la chambre régionale des comptes d'Ile-de-France.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00132278.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00132276">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00132276</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65874</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. ROGUE, Auditeur</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. MAISTRE, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>17/01/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">28/02/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">28/02/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Collège Sainte-Apolline à Courdimanche (Val-d'Oise) - Appel d'un jugement de la chambre régionale des comptes d'Ile-de-France. </TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00132276.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">Q09VUiBERVMgQ09NUFRFUwogICAgICAgICAgICAgICAtLS0tLS0tLQpRVUFUUklFTUUgQ0hBTUJSRQogICAgICAgICAgICAgICAtLS0tLS0tLQpQUkVNSUVSRSBTRUNUSU9OCiAgICAgICAgICAgICAgIC0tLS0tLS0tCiAgICAgICAgICBBcnLDqnQgbsKwIDY1ODc0CgpDb2xsw6hnZSBTQUlOVEUtQVBPTExJTkUKw6AgQ09VUkRJTUFOQ0hFIChWYWwtZOKAmU9pc2UpCgpBcHBlbCBk4oCZdW4ganVnZW1lbnQgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGTigJlJbGUtZGUtRnJhbmNlCgoKUmFwcG9ydCBuwrAgMjAxMi03NTAtMAoKdWRpZW5jZSBldCBkw6lsaWLDqXLDqSBkdSAxNyBqYW52aWVyIDIwMTMKCkxlY3R1cmUgcHVibGlxdWUgZHUgMjggZsOpdnJpZXIgMjAxMwpMQSBDT1VSIERFUyBDT01QVEVTIGEgcmVuZHUgbOKAmWFycsOqdCBzdWl2YW50wqA6CkxBIENPVVIsIApWdSBsYSByZXF1w6p0ZSwgZW5yZWdpc3Ryw6llIGxlIDI2IGFvw7t0IDIwMTEgYXUgZ3JlZmZlIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBk4oCZSWxlLWRlLUZyYW5jZSwgcGFyIGxhcXVlbGxlIE1tZSBYLCBjb21wdGFibGUgZHUgY29sbMOoZ2UgU2FpbnRlLUFwb2xsaW5lIMOgIENvdXJkaW1hbmNoZSAoOTUpLCBhIMOpbGV2w6kgYXBwZWwgZHUganVnZW1lbnQgbsKwwqAyMDExLTAwMTfCoEogZHUgNyBhdnJpbCAyMDExIHBhciBsZXF1ZWwgbGFkaXRlIGNoYW1icmUgbOKAmWEgY29uc3RpdHXDqWUgZMOpYml0cmljZSBkZXMgZGVuaWVycyBkZSBjZXQgw6l0YWJsaXNzZW1lbnQgcG91ciBsYSBzb21tZSB0b3RhbGUgZGUgMjPCoDg0OSw1McKg4oKsLCBhdWdtZW50w6llIGRlcyBpbnTDqXLDqnRzIGRlIGRyb2l0IMOgIGNvbXB0ZXIgZHUgNSBqdWlsbGV0IDIwMTDCoDsKVnUgbGUgcsOpcXVpc2l0b2lyZSBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIHByw6hzIGxhIENvdXIgZGVzIGNvbXB0ZXMgZHUgOcKgbm92ZW1icmXCoDIwMTEgdHJhbnNtZXR0YW50IGxhIHJlcXXDqnRlIHByw6ljaXTDqWUgw6AgbGEgQ291ciA7ClZ1IGxlcyBwacOoY2VzIGRlIGxhIHByb2PDqWR1cmUgc3VpdmllIGVuIHByZW1pw6hyZSBpbnN0YW5jZSA7ClZ1IGxlcyBvYnNlcnZhdGlvbnMgcHJvZHVpdGVzIHBhciBNbWUgWCBwYXIgbGV0dHJlcyBkZXMgMTDCoGphbnZpZXIgZXQgMjAgZMOpY2VtYnJlIDIwMTLCoDsKCgoKVnUgbGUgY29kZSBnw6luw6lyYWwgZGVzIGNvbGxlY3Rpdml0w6lzIHRlcnJpdG9yaWFsZXPCoDsKVnUgbGUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlc8KgOwpWdSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZGUgZmluYW5jZXMgbsKwwqA2My0xNTYgZHUgMjMgZsOpdnJpZXIgMTk2MyBtb2RpZmnDqWUgOwpWdSBsZSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOSBkw6ljZW1icmUgMTk2MiBtb2RpZmnDqSBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBlbiB2aWd1ZXVyIGF1IG1vbWVudCBkZXMgZmFpdHMgOwpWdSBsZSBkw6ljcmV0IG7CsMKgMjAwOC0yMjggZHUgNSBtYXJzIDIwMDggcmVsYXRpZiDDoCBsYSBjb25zdGF0YXRpb24gZXQgw6AgbCdhcHVyZW1lbnQgZGVzIGTDqWJldHMgZGVzIGNvbXB0YWJsZXMgcHVibGljcyBldCBhc3NpbWlsw6lzwqA7ClZ1IGxlIHJhcHBvcnQgZGUgTS7CoENocmlzdG9waGUgUm9ndWUsIGF1ZGl0ZXVyIDsKVnUgbGVzIGNvbmNsdXNpb25zIG7CsMKgOTEyIGVuIGRhdGUgZHUgMjYgZMOpY2VtYnJlIDIwMTIgZHUgUHJvY3VyZXVyIGfDqW7DqXJhbMKgOwpFbnRlbmR1LCBsb3JzIGRlIGzigJlhdWRpZW5jZSBwdWJsaXF1ZSBkZSBjZSBqb3VyLCBNLsKgQ2hyaXN0b3BoZSBSb2d1ZSwgZW4gc29uIHJhcHBvcnQsIE0uwqBZdmVzIFBlcnJpbiwgYXZvY2F0IGfDqW7DqXJhbCwgZW4gbGVzIGNvbmNsdXNpb25zIGR1IHBhcnF1ZXQgZ8OpbsOpcmFsLCBs4oCZYXBwZWxhbnRlLCBpbmZvcm3DqWUgZGUgbOKAmWF1ZGllbmNlLCBu4oCZw6l0YW50IG5pIHByw6lzZW50ZSBuaSByZXByw6lzZW50w6llwqA7CkVudGVuZHUsIGVuIGTDqWxpYsOpcsOpLCBob3JzIGxhIHByw6lzZW5jZSBkdSBwdWJsaWMsIGR1IHJhcHBvcnRldXIgZXQgZHUgbWluaXN0w6hyZSBwdWJsaWMsIE0uwqBSb2NoLU9saXZpZXIgTWFpc3RyZSwgY29uc2VpbGxlciBtYcOudHJlLCBlbiBzZXMgb2JzZXJ2YXRpb25zwqA7CkF0dGVuZHUgcXVlLCBwYXIgbGUganVnZW1lbnQgZW50cmVwcmlzLCBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZOKAmUlsZS1kZS1GcmFuY2UgYSBjb25zdGl0dcOpIE1tZcKgWCBkw6liaXRyaWNlIGR1IGNvbGzDqGdlIFNhaW50ZS1BcG9sbGluZSDDoCBDb3VyZGltYW5jaGUgcG91ciBhdm9pciBpbnNjcml0LCBhdSAzMSBkw6ljZW1icmUgMjAwNiwgdW4gc29sZGUgYW5vcm1hbGVtZW50IGTDqWJpdGV1ciBkZSAywqA2MTgsMDDCoOKCrCBhdSBjb21wdGUgNDA4MSDCq8KgZm91cm5pdHVyZXMg4oCTIGZhY3R1cmVzIG5vbiBwYXJ2ZW51ZXPCoMK7LCBzYW5zIGVuIGZvdXJuaXIgZGUganVzdGlmaWNhdGlvbsKgOyBpbnNjcml0LCBhdSBjb3VycyBkZSBs4oCZZXhlcmNpY2UgMjAwNywgY2lucSBvcMOpcmF0aW9ucyBkw6lwb3VydnVlcyBkZSBqdXN0aWZpY2F0aW9ucyBhdSBjb21wdGUgNjcxODIgwqvCoGNoYXJnZXMgZXhjZXB0aW9ubmVsbGVzIHN1ciBvcMOpcmF0aW9ucyBkZSBnZXN0aW9uwqDCuywgcG91ciB1biBtb250YW50IHRvdGFsIGRlIDIxwqAyMzEsNTHCoOKCrMKgOwpTdXIgbGEgbmF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzCkF0dGVuZHUgcXVlIGzigJlhcHBlbGFudGUgZmFpdCB2YWxvaXIgw6AgbOKAmWFwcHVpIGRlIHNhIHJlcXXDqnRlIHNvbiBpbnRlbnRpb24gZGUgZm91cm5pciDDoCBsYSBDb3VyIGRlcyBhdHRlc3RhdGlvbnMgc3VyIGzigJlob25uZXVyIGNvbnN0aXR1YW50IGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGVuIHLDqXBvbnNlIGF1eCBkw6liZXRzIHByb25vbmPDqXMgw6Agc29uIGVuY29udHJlwqA7CkNvbnNpZMOpcmFudCBk4oCZdW5lIHBhcnQsIHF14oCZYXUgdGl0cmUgZGUgbOKAmWFydGljbGUgNDcgZHUgZMOpY3JldCBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyIHN1c3Zpc8OpLCDCq8KgbGVzIG9ww6lyYXRpb25zICjigKYpIGRvaXZlbnQgw6p0cmUgYXBwdXnDqWVzIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIHByw6l2dWVzIGRhbnMgZGVzIG5vbWVuY2xhdHVyZXMgw6l0YWJsaWVzIHBhciBsZSBtaW5pc3RyZSBkZXMgZmluYW5jZXMgYXZlYywgbGUgY2FzIMOpY2jDqWFudCwgbOKAmWFjY29yZCBkdSBtaW5pc3RyZSBpbnTDqXJlc3PDqcKgwrvCoDsKCkNvbnNpZMOpcmFudCBk4oCZYXV0cmUgcGFydCwgcXVlIGzigJlhbm5leGUgMSBkdSBjb2RlIGfDqW7DqXJhbCBkZXMgY29sbGVjdGl2aXTDqXMgdGVycml0b3JpYWxlcyBkw6l0YWlsbGUgbGEgbGlzdGUgZGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgcmVjZXZhYmxlc8KgOyBxdWUgbOKAmWFubmV4ZSBCLiAyIGRlIGxhIGNpcmN1bGFpcmUgbsKwwqA5MS0xMzIgZHUgMTAganVpbiAxOTkxLCBhbm5leGUgdGVjaG5pcXVlIMOgIGxhIGNpcmN1bGFpcmUgbsKwIDg4LTA3OSBkdSAyOMKgbWFyc8KgMTk4OCBwb3J0YW50IHN1ciBs4oCZb3JnYW5pc2F0aW9uIMOpY29ub21pcXVlIGV0IGZpbmFuY2nDqHJlIGRlcyDDqXRhYmxpc3NlbWVudHMgcHVibGljcyBsb2NhdXggZOKAmWVuc2VpZ25lbWVudCwgZGlzcG9zZSBxdWUgwqvCoHRvdXRlIG9ww6lyYXRpb24gZG9ubmUgbGlldSDDoCB1bmUgw6ljcml0dXJlIGNvbXB0YWJsZSwganVzdGlmacOpZSBwYXIgbGVzIHBpw6hjZXMgYWTDqXF1YXRlc8KgKOKApikgwrvCoDsgcXXigJllbiBzYSBxdWFsaXTDqSBk4oCZYWdlbnQgY29tcHRhYmxlIHB1YmxpYyBNbWXCoFggbmUgcG91dmFpdCBpZ25vcmVyIGNlcyBkaXNwb3NpdGlvbnMgbmkgbGVzIG9ibGlnYXRpb25zIHF1aSBsdWkgaW5jb21iYWllbnTCoDsKQ29uc2lkw6lyYW50IHF14oCZaWwgcsOpc3VsdGUgZGVzIMOpbMOpbWVudHMgYWluc2kgcmFwcGVsw6lzIHF1ZSBsZXMgwqvCoGF0dGVzdGF0aW9ucyBzdXIgbOKAmWhvbm5ldXLCoMK7IHF1ZSBNbWXCoFggc2UgcHJvcG9zYWl0IGRlIGZvdXJuaXIgw6AgbGEgQ291ciBuZSBzYXVyYWllbnQgdGVuaXIgbGlldSBkZSBwacOoY2VzIGp1c3RpZmljYXRpdmVzLCBhdSBzZW5zIGRlIGxhIHLDqWdsZW1lbnRhdGlvbiBwcsOpY2l0w6llLCBkZSBuYXR1cmUgw6AgZMOpZ2FnZXIgbGEgcmVzcG9uc2FiaWxpdMOpIGR1IGNvbXB0YWJsZSA7IHF14oCZYXUgc3VycGx1cyBsZXMgZGl0ZXMgYXR0ZXN0YXRpb25zIG7igJlvbnQgcGFzIMOpdMOpIHByb2R1aXRlc8KgOwpTdXIgbGEgdGVudWUgZHUgcG9zdGUgY29tcHRhYmxlCkF0dGVuZHUgcXVlIGxhIHJlcXXDqXJhbnRlIGNvbnRlc3RlIHBsdXNpZXVycyBkw6liZXRzIMOgIHJhaXNvbiBkdSBjb250ZXh0ZSBkZSBsYSB0ZW51ZSBkdSBwb3N0ZSBjb21wdGFibGUgZG9udCBlbGxlIGF2YWl0IGxhIGNoYXJnZcKgOwpDb25zaWTDqXJhbnQgcXXigJlhdXggdGVybWVzIGR1IEkgZGUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIG7CsMKgNjMtMTU2IGR1IDIzwqBmw6l2cmllcsKgMTk2MyBzdXN2aXPDqWUsIGxlcyBjb21wdGFibGVzIHB1YmxpY3MgwqvCoHNvbnQgcmVzcG9uc2FibGVzIGRlIGxhIHRlbnVlIGRlIGxhIGNvbXB0YWJpbGl0w6kgZHUgcG9zdGUgY29tcHRhYmxlIHF14oCZaWxzIGRpcmlnZW50wqDCu8KgOyBxdeKAmWlsIHLDqXN1bHRlIGRlIGNlIHRleHRlIHF1ZSBsZXMgYXJndW1lbnRzIGRlIGNpcmNvbnN0YW5jZSBhdmFuY8OpcyBwYXIgbOKAmWFwcGVsYW50IG5lIHNvbnQgcGFzIGRlIG5hdHVyZSDDoCBkw6lnYWdlciBzYSByZXNwb25zYWJpbGl0w6nCoDsKUGFyIGNlcyBtb3RpZnMsCkRFQ0lERcKgOgpBcnRpY2xlIHVuaXF1ZS4gTGEgcmVxdcOqdGUgZGUgTW1lIFggZXN0IHJlamV0w6llLiAKLS0tLS0tLS0tLS0tCkZhaXQgZXQganVnw6kgZW4gbGEgQ291ciBkZXMgY29tcHRlcywgcXVhdHJpw6htZSBjaGFtYnJlLCBwcmVtacOocmUgc2VjdGlvbi4gUHLDqXNlbnRzwqA6IE1NLsKgQmF5bGUsIHByw6lzaWRlbnQsIE1haXN0cmUsIHByw6lzaWRlbnQgZGUgc2VjdGlvbiwgTGFmYXVyZSwgVmVybWV1bGVuLCBWYWNoaWEsIE1tZXMgR2FkcmlvdC1SZW5hcmQsIETDqW1pZXIgZXQgTS7CoEdlb2Zmcm95LCBjb25zZWlsbGVycyBtYcOudHJlcy4KClNpZ27DqcKgOiBCYXlsZSwgcHLDqXNpZGVudCwgZXQgTGUgQmFyb24sIGdyZWZmaWVyLgpDb2xsYXRpb25uw6ksIGNlcnRpZmnDqSBjb25mb3JtZSDDoCBsYSBtaW51dGUgw6l0YW50IGF1IGdyZWZmZSBkZSBsYSBDb3VyIGRlcyBjb21wdGVzIGV0IGTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuCgpQb3VyIGxlIFNlY3LDqXRhaXJlIGfDqW7DqXJhbApldCBwYXIgZMOpbMOpZ2F0aW9uLApsZSBDaGVmIGR1IGdyZWZmZSBjb250ZW50aWV1eAoKCgoKCgoKCgpEYW5pZWwgRkVSRVoK</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00136606">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00136606</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65085</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. JOURDAIN, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. CHOUVET, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>13/06/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">13/02/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">13/02/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Trésorier-payeur général (TPG) du Cantal - Exercice 2008.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00136606.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131545">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>7ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131545</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65907</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme BIGAS-REBOUL, Conseillere referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. AULIN, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>23/01/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">29/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">29/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Office national interprofessionnel des viandes, de l'élevage et de l'aviculture (OFIVAL) - Exercices 2003 et 2005.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131545.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131543">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>7ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131543</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65861</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. ANGERMANN, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. ORTIZ, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>18/01/2013</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">29/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">29/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Conservatoire de l'espace littoral et des rivages lacustres (CELRL) - Exercices 2006 à 2010.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Décharge</SOLUTION>
<SOLUTION>Somme irrémissible</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 29.
</ALINEA></PARAGRAPHE></PUBLICATION>
<COMMENTAIRES FIELDNAME="DOC_COMMENT" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cet arrêt a donné lieu à un commentaire de Stéphanie Damarey dans &lt;EM&gt;La semaine juridique&lt;/EM&gt;. Administrations et CL, n°9, 25/2/2013 .Pour le visualiser, cliquer ici.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public administratif</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Manquement</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Somme non rémissible</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable avait effectué plusieurs paiements irréguliers n'ayant pas causé de préjudice. Au regard des différentes charges qui pesaient sur le comptable, la Cour a arrêté plusieurs sommes non rémissibles sur un même exercice, leur montant cumulé n'étant pas affecté par le niveau de plafonnement prévu par le législateur.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le nouveau régime de responsabilité personnelle et pécuniaire des comptables publics, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. &lt;I style="mso-bidi-font-style: normal"&gt;Gestion et finances publiques 2013&lt;/I&gt; n° 8, p. 4 et &lt;I style="mso-bidi-font-style: normal"&gt;AJDA 2013&lt;/I&gt; p. 681.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
La Cour déduit du singulier utilisé pour désigner « &lt;I style="mso-bidi-font-style: normal"&gt;le manquement du comptable&lt;/I&gt; » que le plafonnement par exercice de la sanction financière s'applique à chaque manquement et non à l'ensemble des manquements commis au cours d'un exercice. Saisi d'un pourvoi par le ministre chargé du budget, le Conseil d'Etat a validé l'interprétation de la Cour, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CE, 21 mai 2014, n° &lt;I style="mso-bidi-font-style: normal"&gt;367254&lt;/I&gt;, que l'on peut consulter sur le site &lt;I style="mso-bidi-font-style: normal"&gt;légifrance.fr.&lt;/I&gt;
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131543.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131459">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>2ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131459</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65614</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. SITBON, Conseiller referendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. REMOND, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>12/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">25/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">25/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Agence comptable des services industriels de l'armement (ACSIA) - Exercices 2006 à 2009.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 27.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Ministère</DESCRIPTEUR>
<DESCRIPTEUR>Service facturier</DESCRIPTEUR>
<DESCRIPTEUR>Service fait</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Dématérialisation</DESCRIPTEUR>
<DESCRIPTEUR>Délégation de signature</DESCRIPTEUR>
<DESCRIPTEUR>Procédure collective</DESCRIPTEUR>
<DESCRIPTEUR>Ordonnance de paiement</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable avait effectué des paiements pour lesquels il a fourni des captures d'écran présentant la date de certification du service fait et l'identité des fonctionnaires ayant procédé à cette certification. La Cour constate que la certification du service fait effectuée par voie électronique a été réalisée par des agents ayant une délégation de signature régulière de l'ordonnateur publiée au Journal officiel. La Cour rappelle que la dématérialisation des procédures via une chaîne informatique entre l'ordonnateur et le comptable doit permettre la réalisation effective et tracée des contrôles qui incombent au comptable.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Par ailleurs, la Cour rappelle que le comptable doit effectuer toutes diligences en cas de procédure collective sans préjuger des chances de recouvrement. L'insuffisance des moyens du poste comptable n'exonère pas le comptable de sa responsabilité. Sur ce point, saisie par un réquisitoire antérieur à l'entrée en vigueur de la loi du 28 décembre 2011, la Cour a prononcé un débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.Sur les positions de la Cour vis-à-vis des services facturiers et du respect des procédures dématérialisées en matière de délégation de signature, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 9 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM de l'écologie, &lt;/I&gt;Recueil 2013, p. 13.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131459.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">IENPVVIgREVTIENPTVBURVMKICAgICAgICAgICAgICAtLS0tLS0tLS0KREVVWElFTUUgQ0hBTUJSRQogICAgICAgICAgICAgIC0tLS0tLS0tLQogUFJFTUlFUkUgU0VDVElPTgogICAgICAgICAgICAgIC0tLS0tLS0tLQogICAgICAgICAgQXJyw6p0IG7CsCA2NTYxNApBR0VOQ0UgQ09NUFRBQkxFIERFUyBTRVJWSUNFUwpJTkRVU1RSSUVMUyBERSBM4oCZQVJNRU1FTlQgKEFDU0lBKQoKCkV4ZXJjaWNlcyAyMDA2IMOgIDIwMDkKClJhcHBvcnQgbsKwwqAyMDEyLTY5MC0wCgpBdWRpZW5jZSBwdWJsaXF1ZSBkdSAxMiBkw6ljZW1icmUgMjAxMgoKTGVjdHVyZSBwdWJsaXF1ZSBkdSAyNSBqYW52aWVyIDIwMTMKUkVQVUJMSVFVRSBGUkFOw4dBSVNFCkFVIE5PTSBEVSBQRVVQTEUgRlJBTsOHQUlTCkxBIENPVVIgREVTIENPTVBURVMgYSByZW5kdSBs4oCZYXJyw6p0IHN1aXZhbnTCoDoKTEEgQ09VUiwKVnUgbGUgcsOpcXVpc2l0b2lyZSBuwrDCoDIwMTItNDIgUlEtREIgZHUgMjgganVpbiAyMDEyLCBldCBsZSByw6lxdWlzaXRvaXJlIHN1cHBsw6l0aWYgbsKwwqAyMDEyLTYywqBSUS1EQiBkdSA4wqBvY3RvYnJlwqAyMDEyIHBhciBsZXNxdWVscyBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIHByw6hzIGxhIENvdXIgZGVzIGNvbXB0ZXMgYSBzYWlzaSBsYSBDb3VyIGQnw6lsw6ltZW50cyBzdXNjZXB0aWJsZXMgZGUgY29uZHVpcmUgw6AgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlcyBwZXJzb25uZXMgcXVpIHNlIHNvbnQgc3VjY8OpZMOpIGRhbnMgbGVzIGZvbmN0aW9ucyBkZSBjb250csO0bGV1ciBidWRnw6l0YWlyZSBldCBjb21wdGFibGUgbWluaXN0w6lyaWVsIChDQkNNKSBhdXByw6hzIGR1IG1pbmlzdMOocmUgZGUgbGEgZMOpZmVuc2UsIGFnZW5jZSBjb21wdGFibGUgZGVzIHNlcnZpY2VzIGluZHVzdHJpZWxzIGRlIGzigJlhcm1lbWVudCAoQUNTSUEpLCBhdSBjb3VycyBkZXMgZXhlcmNpY2VzIDIwMDYgw6AgMjAwOSwgc29pdCBNLsKgWCBhdSAxMsKgbWFyc8KgMjAwOSwgTW1lIFkgZHUgMTMgbWFycyBhdSAxNMKgc2VwdGVtYnJlwqAyMDA5IGV0IE0uwqBaLCBkdcKgMTUgc2VwdGVtYnJlIDIwMDkgOwpWdSBsZSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzLCBub3RhbW1lbnQgc2VzIGFydGljbGVzIEwuwqAxMTEtMSwgTC7CoDE0Mi0xLCBSLsKgMTEyLTggZXQgUi7CoDE0MS0xMCDDoCBSLsKgMTQxLTEyIDsKVnUgbGUgY29kZSBkZSBjb21tZXJjZSA7ClZ1IGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBuwrDCoDYzLTE1NiBkdSAyMyBmw6l2cmllciAxOTYzIGRlIGZpbmFuY2VzIHBvdXIgMTk2MyBtb2RpZmnDqWUgOwpWdSBsZSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOSBkw6ljZW1icmUgMTk2MiBtb2RpZmnDqSBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlIDsKCgpWdSBsZSBkw6ljcmV0IG7CsMKgOTItMTM2OSBkdSAyOSBkw6ljZW1icmUgMTk5MiBtb2RpZmlhbnQgbGUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHXCoDI5wqBkw6ljZW1icmXCoDE5NjIsIG5vdGFtbWVudCBzb24gYXJ0aWNsZSAxMCA7ClZ1IGxlIGTDqWNyZXQgbsKwwqA5Mi0xNTkgZHUgMjEgZsOpdnJpZXIgMTk5MiBmaXhhbnQgbGVzIGNvbmRpdGlvbnMgZXQgbGVzIG1vZGFsaXTDqXMgZGUgcsOoZ2xlbWVudCBkZXMgZnJhaXMgb2NjYXNpb25uw6lzIHBhciBsZXMgZMOpcGxhY2VtZW50cyBkZXMgcGVyc29ubmVscyBtaWxpdGFpcmVzIHN1ciBsZSB0ZXJyaXRvaXJlIG3DqXRyb3BvbGl0YWluIGRlIGxhIEZyYW5jZcKgOwpWdSBsZSBkw6ljcmV0IG7CsMKgMjAwMC0xMTc4IGR1IDQgZMOpY2VtYnJlIDIwMDAgcG9ydGFudCBvcmdhbmlzYXRpb24gZGUgbCdhZG1pbmlzdHJhdGlvbiBjZW50cmFsZSBkdSBtaW5pc3TDqHJlIGRlIGxhIGTDqWZlbnNlIDsKVnUgbGUgZMOpY3JldCBuwrDCoDIwMDUtODUwIGR1IDI3IGp1aWxsZXQgMjAwNSByZWxhdGlmIGF1eCBkw6lsw6lnYXRpb25zIGRlIHNpZ25hdHVyZSBkZXMgbWVtYnJlcyBkdSBHb3V2ZXJuZW1lbnQgOwpWdSBsZSBkw6ljcmV0IG7CsMKgMjAwNS0xNDI5IGR1IDE4IG5vdmVtYnJlIDIwMDUgbW9kaWZpw6kgcmVsYXRpZiBhdXggbWlzc2lvbnMsIMOgIGzigJlvcmdhbmlzYXRpb24gZXQgYXV4IGVtcGxvaXMgZGUgZGlyZWN0aW9uIGRlcyBzZXJ2aWNlcyBkZSBjb250csO0bGUgYnVkZ8OpdGFpcmUgZXQgY29tcHRhYmxlIG1pbmlzdMOpcmllbCAoQ0JDTSkgOwpWdSBsZXMgZMOpY3JldHMgbsKwwqAyMDA2LTE3MDIgZXQgbsKwwqAyMDA2LTE3MDMgZHUgMjMgZMOpY2VtYnJlIDIwMDYsIHJlbGF0aWZzIGF1eCB0cmFuc2ZlcnRzIGTigJlhc3NpZ25hdGlvbiBkdSBwYXlldXIgZ8OpbsOpcmFsIGR1IHRyw6lzb3IgKFBHVCkgZXQgZGUgbOKAmWFnZW50IGNvbXB0YWJsZSBjZW50cmFsIGR1wqBUcsOpc29yIHZlcnMgbGVzIENCQ00gcGxhY8OpcyBhdXByw6hzIGRlcyBtaW5pc3TDqHJlcyBldCBsZSByZWNldmV1ciBnw6luw6lyYWwgZGVzIGZpbmFuY2VzIDsKVnUgbCdpbnN0cnVjdGlvbiBjb2RpZmljYXRyaWNlIG7CsMKgOTgtMTM0LUE3IGR1IDE2IG5vdmVtYnJlIDE5OTggcmVsYXRpdmUgYXUgcmVjb3V2cmVtZW50IGRlcyBjcsOpYW5jZXMgw6l0cmFuZ8OocmVzIMOgIGwnaW1ww7R0IGV0IGF1IGRvbWFpbmXCoDsKVnUgbOKAmWluc3RydWN0aW9uIGR1IGRpcmVjdGV1ciBnw6luw6lyYWwgZGUgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSAoREdDUCkgbsKwwqAwMi0wMjUtQjEgZHUgMjEgbWFycyAyMDAyIHJlbGF0aXZlIMOgIGxhIHNpbXBsaWZpY2F0aW9uIGRlIGxhIHByb2PDqWR1cmUgZOKAmW9yZG9ubmFuY2VtZW50IGV0IGRlIG1hbmRhdGVtZW50IDsKVnUgbOKAmWluc3RydWN0aW9uIG7CsMKgMDMtMDQzLU05IGR1IDI1IGp1aWxsZXQgMjAwMyByZWxhdGl2ZSDDoCBsYSByw6lub3ZhdGlvbiBkZXMgcHJvY8OpZHVyZXMgZGUgY2VydGlmaWNhdGlvbiBkdSBzZXJ2aWNlIGZhaXQgZXQgZOKAmW9yZG9ubmFuY2VtZW50IDsKVnUgbGEgY2lyY3VsYWlyZSBtaW5pc3TDqXJpZWxsZSBkdSAzMCBzZXB0ZW1icmUgMjAwMyBwb3J0YW50IG5vbWVuY2xhdHVyZSBkZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBkZXMgZMOpcGVuc2VzIGRlIGwnw4l0YXQgOwpWdSBsZXMgY29tcHRlcyBkdSBDQkNNIHBsYWPDqSBhdXByw6hzIGR1IG1pbmlzdMOocmUgZGUgbGEgZMOpZmVuc2UgcG91ciBsZXMgZXhlcmNpY2VzIDIwMDYgw6AgMjAwOSA7ClZ1IGxlcyBwacOoY2VzIGF0dGVzdGFudCBxdWUgc2Ugc29udCBzdWNjw6lkw6kgZGFucyBsZXMgZm9uY3Rpb25zIGTigJlhZ2VudCBjb21wdGFibGUgZGUgbOKAmWFnZW5jZSBjb21wdGFibGUgZGVzIHNlcnZpY2VzIGluZHVzdHJpZWxzIGRlIGzigJlhcm1lbWVudCwgYXUgY291cnMgZGVzIGV4ZXJjaWNlc8KgMjAwNiDDoMKgMjAwOSwgTS7CoFgsIGp1c3F14oCZYXUgMTIgbWFycyAyMDA5LCBNbWUgWSBkdSAxM8KgbWFyc8KgMjAwOSBhdSAxNCBzZXB0ZW1icmUgMjAwOSBldCBNLsKgWiDDoCBjb21wdGVyIGR1IDE1IHNlcHRlbWJyZSAyMDA5IDsKClZ1IGxlcyBsZXR0cmVzIGR1IDIganVpbGxldCBldCBkdSA4IG9jdG9icmUgMjAxMiwgcGFyIGxlc3F1ZWxsZXMgbGUgZ3JlZmZlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMgYSBub3RpZmnDqSBhdXggaW50w6lyZXNzw6lzLCBhaW5zaSBxdeKAmWF1eCBtaW5pc3RyZXMgZGUgbGEgZMOpZmVuc2UgZXQgZHUgYnVkZ2V0LCBsZXMgcsOpcXVpc2l0b2lyZXMgZHUgbWluaXN0w6hyZSBwdWJsaWMsIGV0IGxlcyBhIGluZm9ybcOpcyBkZSBjZSBxdWUgTS7CoFBhdHJpY2sgU2l0Ym9uLCBjb25zZWlsbGVyIHLDqWbDqXJlbmRhaXJlLCDDqXRhaXQgZMOpc2lnbsOpIHBvdXIgaW5zdHJ1aXJlIGxlIGRvc3NpZXIgOwpWdSBsZXMgYWNjdXPDqXMgZGUgcsOpY2VwdGlvbiBkZXMgcsOpcXVpc2l0b2lyZXMgZW4gZGF0ZSBkZXMgMyBqdWlsbGV0LCA5wqBqdWlsbGV0IGV0IDEwwqBvY3RvYnJlwqAyMDEyIHJlc3BlY3RpdmVtZW50IHNpZ27DqXMgcGFyIE1tZSBZLCBNLsKgWCBldCBNLsKgWjsKVnUgbGVzIGxldHRyZXMgZHUgMTQgc2VwdGVtYnJlIGV0IGR1IDEwIG9jdG9icmUgMjAxMiBwYXIgbGVzcXVlbGxlcyBsZSBjb250csO0bGV1ciBidWRnw6l0YWlyZSBldCBjb21wdGFibGUgbWluaXN0w6lyaWVsLCBhZ2VudCBjb21wdGFibGUgZGVzIHNlcnZpY2VzIGluZHVzdHJpZWxzIGRlIGzigJlhcm1lbWVudCwgYSB0cmFuc21pcyBhdSBtYWdpc3RyYXQgZW4gY2hhcmdlIGRlIGzigJlpbnN0cnVjdGlvbiBsZXMgcsOpcG9uc2VzIGF1eCByw6lxdWlzaXRvaXJlcyBzdXN2aXPDqXMsIGVuc2VtYmxlIGxlcyBwacOoY2VzIMOgIGzigJlhcHB1aSA7ClZ1IGxlcyBwacOoY2VzIGRlIGxhIHByb2PDqWR1cmUsIHkgaW5jbHVzZXMgbGVzIHBpw6hjZXMgY29tbXVuaXF1w6llcyBwZW5kYW50IGwnaW5zdHJ1Y3Rpb24gZXQgdmVyc8OpZXMgYXUgZG9zc2llciBkZSBsYSBjYXVzZSA7ClZ1IGxlIHJhcHBvcnQgZGUgTS7CoFBhdHJpY2sgU2l0Ym9uLCBjb25zZWlsbGVyIHLDqWbDqXJlbmRhaXJlIDsKVnUgbGVzIGNvbmNsdXNpb25zIG7CsMKgODQ5IGR1IFByb2N1cmV1ciBnw6luw6lyYWwgZW4gZGF0ZSBkdcKgNyBkw6ljZW1icmUgMjAxMiA7CkVudGVuZHUsIGxvcnMgZGUgbCdhdWRpZW5jZSBwdWJsaXF1ZSBkZSBjZSBqb3VyLCBNLsKgU2l0Ym9uLCBlbiBzb24gcmFwcG9ydCwgTW1lwqBNYXJpZS1BaW3DqWUgR2FzcGFyaSwgY2hhcmfDqWUgZGUgbWlzc2lvbiBhdSBQYXJxdWV0IGfDqW7DqXJhbCwgZW4gbGVzIGNvbmNsdXNpb25zIGR1IG1pbmlzdMOocmUgcHVibGljLCBNTS7CoFggZXQgWiwgTW1lIFkgYXlhbnQgw6l0w6kgaW5mb3Jtw6lzIGRlIGwnYXVkaWVuY2UsIGV0IE0uwqBaIMOpdGFudCBwcsOpc2VudCBldCBheWFudCBldSBsYSBwYXJvbGUgZW4gZGVybmllciA7IApBeWFudCBkw6lsaWLDqXLDqSBob3JzIGxhIHByw6lzZW5jZSBkdSByYXBwb3J0ZXVyIGV0IGR1IG1pbmlzdMOocmUgcHVibGljLCBldCBhcHLDqHMgYXZvaXIgZW50ZW5kdSBNLsKgQnJ1bm8gUsOpbW9uZCwgY29uc2VpbGxlciBtYcOudHJlLCByw6l2aXNldXIsIGVuIHNlcyBvYnNlcnZhdGlvbnMgOwpQcsOpc29tcHRpb25zIGRlIGNoYXJnZXMgbsKwwqAxIGV0IG7CsMKgNApBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBkZSBsYSAxw6hyZSBjaGFyZ2UgZHUgcsOpcXVpc2l0b2lyZSwgTS7CoFggYSBwcm9jw6lkw6ksIGF1IGNvdXJzIGRlcyBleGVyY2ljZXMgMjAwOCBldCAyMDA5IMOgIGRlcyBwYWllbWVudHMgZOKAmXVuIG1vbnRhbnQgdG90YWwgZGUgMjHCoDYxNCw5NcKg4oKsLCBhbG9ycyBxdWUgbGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgYXNzb2Npw6llcyBhdSBkb3NzaWVyIGRlIGxpcXVpZGF0aW9uIG5lIGNvbXBvcnRhaWVudCBhdWN1bmUgbWVudGlvbiBkdSBzZXJ2aWNlIGZhaXTCoDsKQXR0ZW5kdSBxdWUsIHN1aXZhbnQgbGEgNMOobWXCoGNoYXJnZSBkdSByw6lxdWlzaXRvaXJlLCBNbWUgWSBhLCBkZSBmw6l2cmllciDDoCBhdnJpbMKgMjAwOSwgZWZmZWN0dcOpIGRlcyBkw6lwZW5zZXMgZG9udCBsZSBtb250YW50IGN1bXVsw6kgc+KAmcOpbMOodmUgw6AgbGEgc29tbWUgZGUgMTI5wqAxNTIsNDXCoOKCrCwgYWxvcnMgcXVlIGxlcyBwacOoY2VzIGpvaW50ZXMgYXUgZG9zc2llciBkZSBsaXF1aWRhdGlvbiBuZSBjb21wb3J0YWllbnQgbmkgdGFtcG9uLCBuaSBzaWduYXR1cmUsIG5pIHBhcmFwaGUgcGVybWV0dGFudCBkZSB2w6lyaWZpZXIgcXVlIGzigJlvcmRvbm5hdGV1ciBhdmFpdCBjZXJ0aWZpw6kgbGUgc2VydmljZSBmYWl0wqA7CgpBdHRlbmR1IHF14oCZZW4gcsOpcG9uc2UgYXUgcsOpcXVpc2l0b2lyZSwgbGVzIGNvbXB0YWJsZXMgY29uY2VybsOpcyBwYXIgbGVzIDHDqHJlIGV0IDTDqG1lwqBjaGFyZ2VzIGZvbnQgbWVudGlvbiBkZSBs4oCZaW5zdHJ1Y3Rpb24gREdDUCBuwrDCoDAyLTAyNS1CMSBkdSAyMSBtYXJzIDIwMDIgYXV4IHRlcm1lcyBkZSBsYXF1ZWxsZSDCq8KgKOKApikgZGFucyBsZSBjYWRyZSBkZSBsJ2FwcGxpY2F0aW9uIEFDQ09SRCBlbiBjb3VycyBkZSBkw6lwbG9pZW1lbnQgYXVwcsOocyBkZXMgZGlmZsOpcmVudHMgZMOpcGFydGVtZW50cyBtaW5pc3TDqXJpZWxzLCBsJ29yZG9ubmFuY2UgZGUgcGFpZW1lbnQgZXN0IHVuIGRvY3VtZW50IGTDqW1hdMOpcmlhbGlzw6kgcmVncm91cGFudCBwbHVzaWV1cnMgZG9zc2llcnMgZGUgbGlxdWlkYXRpb24uIENoYWN1biBkZSBjZXMgZG9zc2llcnMgZGUgbGlxdWlkYXRpb24gcG9ydGUgbWVudGlvbiBkZSBsYSBkYXRlIGRlIHNlcnZpY2UgZmFpdC4gTGEgY2VydGlmaWNhdGlvbiBkdSBzZXJ2aWNlIGZhaXQgcsOpc3VsdGUgZG9uYyBkZSBsYSBzaWduYXR1cmUgw6lsZWN0cm9uaXF1ZSBkZSBsJ29yZG9ubmFuY2UgZGUgcGFpZW1lbnQgcGFyIGwnb3Jkb25uYXRldXIgcHJpbmNpcGFswqDCu8KgOwpBdHRlbmR1IHF1ZSBNLsKgWCBldCBNbWUgWSAgZXhwb3NlbnQgcGFyIGFpbGxldXJzIHF1ZSBsZXMgYWdlbnRzIGF5YW50IGNlcnRpZmnDqSBsZSBzZXJ2aWNlIGZhaXQgc3VyIHVuIHN1cHBvcnQgZMOpbWF0w6lyaWFsaXPDqSBkaXNwb3NhaWVudCBwb3VyIGNlbGEgZOKAmXVuZSBkw6lsw6lnYXRpb24gZGUgc2lnbmF0dXJlIGRlIGzigJlvcmRvbm5hdGV1csKgOyAKQXR0ZW5kdSBxdeKAmWVuIHZlcnR1IGRlcyBhcnRpY2xlcyAxMyBldCA0OCBkdSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyIG1vZGlmacOpLCBsZSBjb21wdGFibGUgcHVibGljIGVzdCB0ZW51IGRlIGNvbnRyw7RsZXIgwqvCoGxhIGp1c3RpZmljYXRpb24gZHUgc2VydmljZSBmYWl0IGV0IGwnZXhhY3RpdHVkZSBkZXMgY2FsY3VscyBkZSBsaXF1aWRhdGlvbsKgwrsgZXQgcXXigJlpbCBkb2l0IGNvbnNlcnZlciBsZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBkZXMgcGFpZW1lbnRzIGFmaW4gZOKAmWVuIHBlcm1ldHRyZSBsZSBjb250csO0bGUgcGFyIGxlIGp1Z2UgZGVzIGNvbXB0ZXPCoDsgcXXigJlhdXggdGVybWVzIGRlcyBkaXNwb3NpdGlvbnMgZGUgbCdhcnRpY2xlIDcgZHVkaXQgZMOpY3JldCwgwqsgTGVzIG9yZG9ubmF0ZXVycyBzb250IHJlc3BvbnNhYmxlcyBkZXMgY2VydGlmaWNhdGlvbnMgcXUnaWxzIGTDqWxpdnJlbnQgwrvCoDsKQXR0ZW5kdSBxdeKAmWVuIGzigJllc3DDqGNlLCBsZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBkZXMgcGFpZW1lbnRzIHN1ciBzdXBwb3J0IHBhcGllciBzb250IGpvaW50ZXMgw6AgbOKAmWFwcHVpIGRlcyBjb21wdGVzIGR1IGNvbXB0YWJsZSBtYWlzIG5lIGNvbXBvcnRlbnQgYXVjdW5lIG1lbnRpb24gbWFudXNjcml0ZSDDqW1hbmFudCBkZSBs4oCZb3Jkb25uYXRldXIgZXQgY2VydGlmaWFudCBsZSBzZXJ2aWNlIGZhaXQgOwpBdHRlbmR1ICwgYWluc2kgcXXigJlpbCBlc3Qgc291dGVudSBwYXIgbGVzIGNvbXB0YWJsZXMsIHF1ZSBzZWxvbiBs4oCZaW5zdHJ1Y3Rpb24gREdDUCBuwrDCoDAyLTAyNS1CMSBkdSAyMSBtYXJzIDIwMDIsIGxhIGNlcnRpZmljYXRpb24gZHUgc2VydmljZSBmYWl0IHBldXQsIGRhbnMgbGUgY2FkcmUgZGUgbOKAmWFwcGxpY2F0aW9uIEFDQ09SRCwgcsOpc3VsdGVyIGTigJl1bmUgc2lnbmF0dXJlIMOpbGVjdHJvbmlxdWUgZGUgbOKAmW9yZG9ubmFuY2UgZGUgcGFpZW1lbnQgcGFyIGzigJlvcmRvbm5hdGV1csKgOyBxdWUgY2hhcXVlIG9yZG9ubmFuY2UgZGUgcGFpZW1lbnQgcmVncm91cGUgcGx1c2lldXJzIGRvc3NpZXJzIGRlIGxpcXVpZGF0aW9uIGNvbXBvcnRhbnQgY2hhY3VuIGxhIGRhdGUgZHUgc2VydmljZSBmYWl0wqA7CkF0dGVuZHUgcXVlIGxlc2RpdGVzIG1vZGFsaXTDqXMgZGUgY2VydGlmaWNhdGlvbiDDqWxlY3Ryb25pcXVlIGR1IHNlcnZpY2UgZmFpdCBuZSBjb250cmV2aWVubmVudCBwYXMgYXV4ICBkaXNwb3NpdGlvbnMgZHUgZMOpY3JldCBzdXN2aXPDqSBkdSAyOSBkw6ljZW1icmUgMTk2Miwgc291cyByw6lzZXJ2ZSBxdWUgbGVzIGZvbmN0aW9ubmFpcmVzIGVuIGNoYXJnZSBkZSBjZXR0ZSBjZXJ0aWZpY2F0aW9uIHNvaWVudCBhdHRyaWJ1dGFpcmVzIGTigJl1bmUgZMOpbMOpZ2F0aW9uIHLDqWd1bGnDqHJlIGRlIGzigJlvcmRvbm5hdGV1ciwgZXQgcXVlIGxldXIgaW50ZXJ2ZW50aW9uIGRhbnMgbOKAmWFwcGxpY2F0aW9uIEFDQ09SRCBwdWlzc2Ugw6p0cmUgYXV0aGVudGlmacOpZSwgYWZpbiBxdWUgbGUgY29tcHRhYmxlIHB1YmxpYyBzb2l0IMOgIG3Dqm1lIGTigJllZmZlY3R1ZXIgbGVzIGNvbnRyw7RsZXMgbWlzIMOgIHNhIGNoYXJnZSBwYXIgbGVzIGFydGljbGVzIDcsIDEzIGV0IDQ4IGR1IGTDqWNyZXQgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSA7CkF0dGVuZHUgcXVlLCBkYW5zIGxhIHByw6lzZW50ZSBlc3DDqGNlLCBsYSBjb25zdWx0YXRpb24gZGVzIMKrwqBjYXB0dXJlcyBk4oCZw6ljcmFuwqDCuyBkZSBs4oCZYXBwbGljYXRpb24gQUNDT1JEIHBlcm1ldHRlbnQgYXUgY29tcHRhYmxlIHB1YmxpYyBhaW5zaSBxdeKAmWF1IGp1Z2UgZGVzIGNvbXB0ZXMgZGUgc+KAmWFzc3VyZXIgZGUgbGEgZGF0ZSBkZSBsYSBjZXJ0aWZpY2F0aW9uIGR1IHNlcnZpY2UgZmFpdCBhaW5zaSBxdWUgZGUgbOKAmWlkZW50aXTDqSBkZXMgZm9uY3Rpb25uYWlyZXMgY2l2aWxzIGV0IG1pbGl0YWlyZXMgYXlhbnQgcHJvY8OpZMOpIMOgIGxhZGl0ZSBjZXJ0aWZpY2F0aW9uwqA7CgpBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBkZSBs4oCZYXJ0aWNsZSAxZXIgZHUgZMOpY3JldCBuwrDCoDIwMDUtODUwIGR1IDI3IGp1aWxsZXQgMjAwNSByZWxhdGlmIGF1eCBkw6lsw6lnYXRpb25zIGRlIHNpZ25hdHVyZSBkZXMgbWVtYnJlcyBkdSBnb3V2ZXJuZW1lbnQsIGxlcyBzZWNyw6l0YWlyZXMgZ8OpbsOpcmF1eCBkZXMgbWluaXN0w6hyZXMsIGxlcyBkaXJlY3RldXJzIGQnYWRtaW5pc3RyYXRpb24gY2VudHJhbGUsIGxlcyBjaGVmcyBkZXMgc2VydmljZXMgw6AgY29tcMOpdGVuY2UgbmF0aW9uYWxlIG1lbnRpb25uw6lzIGF1IHByZW1pZXIgYWxpbsOpYSBkZSBsJ2FydGljbGUgMiBkdSBkw6ljcmV0IGR1IDkgbWFpIDE5OTcgc3Vzdmlzw6kgZXQgbGVzIGNoZWZzIGRlcyBzZXJ2aWNlcyBxdWUgbGUgZMOpY3JldCBkJ29yZ2FuaXNhdGlvbiBkdSBtaW5pc3TDqHJlIHJhdHRhY2hlIGRpcmVjdGVtZW50IGF1IG1pbmlzdHJlIG91IGF1IHNlY3LDqXRhaXJlIGQnRXRhdCDCq8KgcGV1dmVudCBzaWduZXIsIGF1IG5vbSBkdSBtaW5pc3RyZSBvdSBkdSBzZWNyw6l0YWlyZSBkJ0V0YXQgZXQgcGFyIGTDqWzDqWdhdGlvbiwgbCdlbnNlbWJsZSBkZXMgYWN0ZXMsIMOgIGwnZXhjZXB0aW9uIGRlcyBkw6ljcmV0cywgcmVsYXRpZnMgYXV4IGFmZmFpcmVzIGRlcyBzZXJ2aWNlcyBwbGFjw6lzIHNvdXMgbGV1ciBhdXRvcml0w6nCoMK7wqA7CkF0dGVuZHUgcXVlLCBzdWl2YW50IGzigJlhcnRpY2xlIDMgZHUgZMOpY3JldCBkdSAyNyBqdWlsbGV0IDIwMDUsIGxlc2RpdHMgZMOpbMOpZ2F0YWlyZXMgcGV1dmVudCBldXgtbcOqbWVzIGTDqWzDqWd1ZXIgY2V0dGUgc2lnbmF0dXJlwqDCq8KgMsKwIEF1eCBvZmZpY2llcnMgYWluc2kgcXUnYXV4IG1lbWJyZXMgZHUgY29ycHMgZHUgY29udHLDtGxlIGfDqW7DqXJhbCBkZXMgYXJtw6llcywgcXVpIG4nZW4gZGlzcG9zZW50IHBhcyBhdSB0aXRyZSBkZSBsJ2FydGljbGUgMWVywqDCuyBldCDCq8KgKOKApinCoHBldXZlbnQgZW4gb3V0cmUgZG9ubmVyIGTDqWzDqWdhdGlvbiBhdXggZm9uY3Rpb25uYWlyZXMgZGUgY2F0w6lnb3JpZXMgQiBldCBDLCBhdXggYWdlbnRzIGNvbnRyYWN0dWVscyBjaGFyZ8OpcyBkZSBmb25jdGlvbnMgZCd1biBuaXZlYXUgw6lxdWl2YWxlbnQgZXQgYXV4IHNvdXMtb2ZmaWNpZXJzIHBsYWPDqXMgc291cyBsZXVyIGF1dG9yaXTDqSwgcG91ciBzaWduZXIsIGRhbnMgbGVzIG3Dqm1lcyBhZmZhaXJlcywgdG91dGVzIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMgcmVsYXRpdmVzIGF1eCBkw6lwZW5zZXMgZXQgYXV4IG9ww6lyYXRpb25zIGRlIHLDqWd1bGFyaXNhdGlvbiwgbm90YW1tZW50IHRvdXMgZG9jdW1lbnRzIGNvbXB0YWJsZXMgcmVsYXRpZnMgw6AgbCdlbmdhZ2VtZW50LCDDoCBsYSBsaXF1aWRhdGlvbiBldCDDoCBsJ29yZG9ubmFuY2VtZW50IGRlIGxhIGTDqXBlbnNlIGV0IHRvdXMgb3JkcmVzIGRlIHJlY2V0dGVzLsKgwrvCoDsKQXR0ZW5kdSBxdWUsIHPigJlhZ2lzc2FudCBkZXMgcGFpZW1lbnRzIHJldGVudXMgcGFyIGxlcyAxw6hyZSBldCA0w6htZSBjaGFyZ2VzIGR1IHLDqXF1aXNpdG9pcmUsIGxlcyBmb25jdGlvbm5haXJlcyBheWFudCBjZXJ0aWZpw6kgbGUgc2VydmljZSBmYWl0IHBhciB2b2llIMOpbGVjdHJvbmlxdWUgw6l0YWllbnQgdGl0dWxhaXJlcywgc2Vsb24gbGV1ciBhZmZlY3RhdGlvbiwgZGUgZMOpbMOpZ2F0aW9ucyBkZSBzaWduYXR1cmUgZMO7bWVudCBwdWJsacOpZXMgYXUgSm91cm5hbCBvZmZpY2llbCBkZSBsYSBSw6lwdWJsaXF1ZSBmcmFuw6dhaXNlLCBhY2NvcmTDqWVzIHBhciBsZSBkaXJlY3RldXIgY2VudHJhbCBkdSBzZXJ2aWNlIGRlcyBlc3NlbmNlcyBkZXMgYXJtw6llcyBvdSBwYXIgbGUgZGlyZWN0ZXVyIGNlbnRyYWwgZGUgbGEgZGlyZWN0aW9uIGludGVyYXJtw6llcyBkZXMgcsOpc2VhdXggZCdpbmZyYXN0cnVjdHVyZSBldCBkZXMgc3lzdMOobWVzIGQnaW5mb3JtYXRpb24gZGUgbGEgZMOpZmVuc2XCoDsgcXVlIGxlIGNvbXB0YWJsZSBu4oCZYSBkb25jIHBhcyBtYW5xdcOpIMOgIHNlcyBvYmxpZ2F0aW9ucyByw6lnbGVtZW50YWlyZXMgZGUgY29udHLDtGxlIGRlIGxhIHZhbGlkaXTDqSBkZSBsYSBjcsOpYW5jZSBldCBkZSBsYSBxdWFsaXTDqSBkZSBsJ29yZG9ubmF0ZXVyLCBvdSBkZSBzb24gZMOpbMOpZ3XDqSA7CkF0dGVuZHUgYWluc2kgcXXigJlpbCBu4oCZeSBhIHBhcyBsaWV1LCBlbiBjb25zw6lxdWVuY2UsIMOgIGTDqWJldCBlbiBjZSBxdWkgY29uY2VybmUgbGVzwqAxw6hyZSBldCA0w6htZcKgY2hhcmdlcyBkdSByw6lxdWlzaXRvaXJlIDsKUHLDqXNvbXB0aW9uIGRlIGNoYXJnZSBuwrAgMgpBdHRlbmR1IHF14oCZYXV4IHRlcm1lcyBkdSByw6lxdWlzaXRvaXJlLCBwbHVzaWV1cnMgY3LDqWFuY2VzIGRvbnQgY2VydGFpbmVzIG9udCBmYWl0IGzigJlvYmpldCBk4oCZYWRtaXNzaW9ucyBlbiBub24tdmFsZXVyIHNvbnQgZGV2ZW51ZXMgaXJyw6ljb3V2cmFibGVzIMOgIGTDqWZhdXQgZGUgZGlsaWdlbmNlcyBhcHByb3ByacOpZXMgOyAKQXR0ZW5kdSBhaW5zaSBxdeKAmXVuZSBjcsOpYW5jZSBzdXIgbGEgc29jacOpdMOpIENoYW1wYWduZSBBaXJsaW5lcywgZOKAmXVuIG1vbnRhbnQgZGUgMTPCoDg1NywwMMKg4oKsIGEgw6l0w6kgYWRtaXNlIGVuIG5vbi12YWxldXIgbGUgN8KganVpbGxldCAyMDA2IGFsb3JzIHF1ZSBwYXIganVnZW1lbnQgZOKAmW91dmVydHVyZSBkdSA0IG9jdG9icmUgMjAwNSwgcHVibGnDqSBsZSA4wqBub3ZlbWJyZcKgMjAwNSwgbGEgc29jacOpdMOpIGTDqWJpdHJpY2UgYSDDqXTDqSBwbGFjw6llIGVuIGxpcXVpZGF0aW9uIGp1ZGljaWFpcmUgc2FucyBxdWUgbGUgY29tcHRhYmxlIGFpdCBwcm9kdWl0IHNhIGNyw6lhbmNlIGF1IHBhc3NpZsKgOyBxdWUgZGVzIGNyw6lhbmNlcyBzdXIgbGEgc29jacOpdMOpIEJHViBJbm5vdmF0aW9uLCBjb3JyZXNwb25kYW50IGF1eCB0aXRyZXMgbsKwIDI3LCAyOCwgMTA3IGV0IDEwOCwgw6ltaXMgZW50cmUgYXZyaWwgZXQgc2VwdGVtYnJlIDIwMDYsIGRlIG1vbnRhbnRzIHJlc3BlY3RpZnMgZGUgNMKgMDAwwqDigqwsIDHCoDAwMMKg4oKsLCA2M8KgNTAwwqDigqwgZXQgMjDCoDAwMMKg4oKsLCBvbnQgw6l0w6kgYWRtaXNlcyBlbiBub24tdmFsZXVyIGVuIGTDqWNlbWJyZSAyMDA5IGFsb3JzIHF14oCZdW5lIHByb2PDqWR1cmUgZGUgcmVkcmVzc2VtZW50IGp1ZGljaWFpcmUgYXZhaXQgw6l0w6kgb3V2ZXJ0ZSBsZSAyNCBhdnJpbCAyMDA4LCBldCBxdWUgbGUgZMOpbGFpIGRlIGZvcmNsdXNpb24gZGUgbGEgY3LDqWFuY2Ugw6l0YWl0IGV4cGlyw6ksIGxlIDE5wqBqdWluwqAyMDA5LMKgc2FucyBxdWUgbGEgY3LDqWFuY2UgYWl0IMOpdMOpIHByb2R1aXRlIGF1IHBhc3NpZsKgOyBxdeKAmXVuZSBjcsOpYW5jZSBzdXIgbGEgc29jacOpdMOpIEVkaXRpb25zIFNjYWxhLCBk4oCZdW4gbW9udGFudCBkZSA3wqA0ODAsNjDCoOKCrCwgY29ycmVzcG9uZGFudCBhdSB0aXRyZSBkZSBwZXJjZXB0aW9uIG7CsMKgNDkwNiDDqW1pcyBsZSAxNSBtYWkgMjAwOCwgbuKAmWEgcHUgw6p0cmUgcmVjb3V2csOpZSBlbiBs4oCZYWJzZW5jZSBkZSBkw6ljbGFyYXRpb24gZGUgY3LDqWFuY2UgYXUgcGFzc2lmLCBhbG9ycyBxdeKAmXVuZSBwcm9jw6lkdXJlIGRlIGxpcXVpZGF0aW9uIGEgw6l0w6kgb3V2ZXJ0ZSBwYXIganVnZW1lbnQgZHUgMjkgbWFpIDIwMDggYXZlYyBwdWJsaWNhdGlvbiBhdSBCT0RBQ0MgbGUgMWVywqBqdWlsbGV0IDIwMDjCoDsKQXR0ZW5kdSBxdWUsIHNlbG9uIGxlIG1pbmlzdMOocmUgcHVibGljLCBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZGUgTS7CoFgsIGNvbXB0YWJsZSBlbiBmb25jdGlvbiBqdXNxdeKAmWF1IDEyIG1hcnMgMjAwOSwgcG91cnJhaXQgZMOocyBsb3JzIMOqdHJlIG1pc2UgZW4gamV1IMOgIGhhdXRldXIgZGUgMTA5wqA4MzcsNjDCoOKCrCwgYXUgdGl0cmUgZGVzIGV4ZXJjaWNlcyAyMDA2LCAyMDA4IGV0IDIwMDnCoDsKQXR0ZW5kdSBxdWUgZGFucyBzYSByw6lwb25zZSBhdSByw6lxdWlzaXRvaXJlLCBs4oCZYWdlbnQgY29tcHRhYmxlIHByw6ljaXNlLCBz4oCZYWdpc3NhbnQgZGUgbGEgY3LDqWFuY2UgZMOpdGVudWUgc3VyIGxhIHNvY2nDqXTDqSBDaGFtcGFnbmUgQWlybGluZXMgYXZvaXIgdGVudMOpIHNhbnMgc3VjY8OocyBkZSBub3RpZmllciBsZSB0aXRyZSBhdSBkw6liaXRldXIgZXQgbuKAmWF2b2lyIHBhcyDDqXTDqSBlbiBtZXN1cmUgZGUgZMOpY2xhcmVyIHNhIGNyw6lhbmNlIGRhbnMgbGVzIGTDqWxhaXMgaW1wYXJ0aXMsIGNldXgtY2kgw6l0YW50IGZvcmNsb3MgbG9yc3F14oCZaWwgYSBldSBjb25uYWlzc2FuY2UgZGUgbGEgcHJvY8OpZHVyZSBjb2xsZWN0aXZlwqA7CkF0dGVuZHUgcGFyIGFpbGxldXJzIHF1ZSwgc2Vsb24gbGUgY29tcHRhYmxlLCBkZXMgcG91cnN1aXRlcyBvbnQgw6l0w6kgZW5nYWfDqWVzIHBhciB2b2llIGTigJlodWlzc2llciBlbiB2dWUgZGUgcHJvY8OpZGVyIGF1IHJlY291dnJlbWVudCBkZXMgY3LDqWFuY2VzIGTDqXRlbnVlcyBzdXIgbGEgc29jacOpdMOpIEJHViBpbm5vdmF0aW9uwqA7IHF1ZSBjZWx1aS1jaSBhIGluZGlxdcOpIGxlIDI0IGF2cmlsIDIwMDggbuKAmWF2b2lyIHB1IGNvbnRhY3RlciBsZSBkw6liaXRldXIgYXByw6hzIGF2b2lyIHRlbnTDqSBkZSBwcm9jw6lkZXIgw6AgdW5lIHNhaXNpZSB2ZW50ZSA7IHF14oCZdW5lIGRlbWFuZGUgZGUgY29tcGVuc2F0aW9uIGzDqWdhbGUgbuKAmWEgcHUgYWJvdXRpciBlbiBtYXJzIDIwMDcgZW4gbOKAmWFic2VuY2UgZGUgcGFpZW1lbnRzIGR1cyDDoCBsYSBzb2Npw6l0w6kgZMOpYml0cmljZcKgOyBxdWUgbGVzIGNyw6lhbmNlcyBkw6ljbGFyw6llcyBwYXIgbGUgY29tcHRhYmxlIGxlIDE5IGp1aW4gMjAwOSBvbnQgw6l0w6kgcmVqZXTDqWVzIHBvdXIgZm9yY2x1c2lvbiBtYWlzIHF1ZSBsZXMgY3LDqWFuY2VzIGNvbmNlcm7DqWVzIMOpdGFpZW50IGlycsOpY291dnJhYmxlcyBwcsOpYWxhYmxlbWVudCDDoCBs4oCZb3V2ZXJ0dXJlIGRlIGxhIHByb2PDqWR1cmUgaW50ZXJ2ZW51ZSBsZSAyM8KgYXZyaWzCoDIwMDggOwpBdHRlbmR1IHF14oCZaWwgZXN0IHNvdXRlbnUsIHPigJlhZ2lzc2FudCBkdSB0aXRyZSBkZSBwZXJjZXB0aW9uIGVuIG1haSAyMDA4IHN1ciBsYSBzb2Npw6l0w6kgU2NhbGEsIHF1ZSBkZXMgbm90aWZpY2F0aW9ucyBvbnQgw6l0w6kgZWZmZWN0dcOpZXMgc2FucyBzdWNjw6hzIGV0IHF1ZSByaWVuIG5lIGxhaXNzYWl0IGVudmlzYWdlciBs4oCZZXhpc3RlbmNlIGTigJl1bmUgcHJvY8OpZHVyZSBjb2xsZWN0aXZlLCBwb3VydGFudCBpbnRlcnZlbnVlIGxlIDI5IG1haSAyMDA4wqA7CkF0dGVuZHUgcXVlIGxlIGNvbXB0YWJsZSBleHBvc2UgcXXigJllbiB0b3V0ZSBoeXBvdGjDqHNlIGxlcyBwcm9jw6lkdXJlcyBjb2xsZWN0aXZlcyBk4oCZYXB1cmVtZW50IG7igJlhdXJhaWVudCBwYXMgcGVybWlzIGRlIHJlY291dnJlciBsZXMgY3LDqWFuY2VzIGNoaXJvZ3JhcGhhaXJlcyB2aXPDqWVzIGF1IHLDqXF1aXNpdG9pcmXCoDsgCkF0dGVuZHUgZW5maW4gcXVlIGxlIGNvbXB0YWJsZSDDqW5vbmNlIHF1ZSBs4oCZQUNTSUEgbuKAmWVzdCBwYXMgdW4gcG9zdGUgY29tcHRhYmxlIGNsYXNzaXF1ZSBldCBxdWUgc2EgY29tcMOpdGVuY2UgbmUgc2UgbGltaXRlIHBhcyDDoCBzb24gdGVycml0b2lyZSBk4oCZaW1wbGFudGF0aW9uwqA7IHF1ZSBjZXR0ZSBhZ2VuY2UgbmUgYsOpbsOpZmljaWUgZG9uYyBwYXMgZHUgcHJvdG9jb2xlIG5hdGlvbmFsIHF1aSBhc3N1cmUgYXV4IHBvc3RlcyBjb21wdGFibGVzLCDDoCBww6lyaW9kaWNpdMOpIHLDqWd1bGnDqHJlLCBsZXMgcmVzdGl0dXRpb25zIGTDqW1hdMOpcmlhbGlzw6llcyByZWxhdGl2ZXMgYXV4IGFubm9uY2VzIGzDqWdhbGVzIHB1Ymxpw6llcyBhdSBCT0RBQ0MgcG91ciBsZXVyIGTDqXBhcnRlbWVudCBkZSBjb21ww6l0ZW5jZcKgOwpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGVzIGFydGljbGVzIDYwLUkgZXQgNjAtSVYgZGUgbGEgbG9pIGR1IDIzIGbDqXZyaWVyIDE5NjMsIGxhIHJlc3BvbnNhYmlsaXTDqSBk4oCZdW4gY29tcHRhYmxlIHNlIHRyb3V2ZSBlbmdhZ8OpZSBkw6hzIGxvcnMgcXXigJl1bmUgcmVjZXR0ZSBu4oCZYSBwYXMgw6l0w6kgcmVjb3V2csOpZSBldCBxdeKAmWlsIGFwcGFydGllbnQgYXUgY29tcHRhYmxlIHB1YmxpYyBk4oCZw6l0YWJsaXIgcXVlIHNlcyBkaWxpZ2VuY2VzIG9udCDDqXTDqSByYXBpZGVzLCBjb21wbMOodGVzIGV0IGFkw6lxdWF0ZXMgZW4gdnVlIGRlIHJlY291dnJlciBsZXMgdGl0cmVzIHF14oCZaWwgYSBwcmlzIGVuIGNoYXJnZcKgOyBxdWUgY2V0dGUgb2JsaWdhdGlvbiB0cm91dmUgw6Agc+KAmWFwcGxpcXVlciBkYW5zIGzigJloeXBvdGjDqHNlIGRlIHByb2PDqWR1cmVzIGNvbGxlY3RpdmVzIDsKQXR0ZW5kdSBxdeKAmWF1eCB0ZXJtZXMgZGUgbOKAmWFydGljbGUgUi7CoDYyMi0yNCBkdSBjb2RlIGRlIGNvbW1lcmNlIDogwqsgTGUgZMOpbGFpIGRlIGTDqWNsYXJhdGlvbiBmaXjDqSBlbiBhcHBsaWNhdGlvbiBkZSBsJ2FydGljbGUgTC7CoDYyMi0yNiBlc3QgZGUgZGV1eCBtb2lzIMOgIGNvbXB0ZXIgZGUgbGEgcHVibGljYXRpb24gZHUganVnZW1lbnQgZCdvdXZlcnR1cmUgYXUgQnVsbGV0aW4gb2ZmaWNpZWwgZGVzIGFubm9uY2VzIGNpdmlsZXMgZXQgY29tbWVyY2lhbGVzwqAo4oCmKcKgwrvCoDsgcXXigJllbiBhcHBsaWNhdGlvbiBkZSBs4oCZYXJ0aWNsZSBMLsKgNjIyLTI2IGFsaW7DqWEgMWVyIGR1ZGl0IGNvZGUsIGxlIGNyw6lhbmNpZXIgcXVpIGF1cmFpdCBvbWlzIGRlIGTDqWNsYXJlciBzYSBjcsOpYW5jZSBhIGxhIHBvc3NpYmlsaXTDqSBkZSBzZSBmYWlyZSByZWxldmVyIGRlIGxhIGZvcmNsdXNpb24gZW4gcHLDqXNlbnRhbnQgdW5lIHJlcXXDqnRlIGF1IGp1Z2UgY29tbWlzc2FpcmUgZGFucyBsZSBkw6lsYWkgZGUgc2l4IG1vaXMgw6AgY29tcHRlciBkZSBsYSBwdWJsaWNhdGlvbiBkdSBqdWdlbWVudCBkJ291dmVydHVyZSA7CkF0dGVuZHUgcXVlIGxlIGNvbXB0YWJsZSBkb2l0IGVmZmVjdHVlciB0b3V0ZXMgZGlsaWdlbmNlcyByw6lnbGVtZW50YWlyZXMgc2FucyBwcsOpanVnZXIgZGVzIGNoYW5jZXMgZGUgcmVjb3V2cmVtZW50wqA7IHF1ZSBzYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZXN0IGVuZ2Fnw6llIMOgIHJhaXNvbiBkdSBkw6lmYXV0IGRlIHByb2R1Y3Rpb24gZOKAmXVuZSBjcsOpYW5jZSBhdSBwYXNzaWYgZOKAmXVuZSBwcm9jw6lkdXJlIGNvbGxlY3RpdmUsIG91IGRlIGTDqXDDtHQgZOKAmXVuIHJlbGV2w6kgZGUgZm9yY2x1c2lvbiwgeSBjb21wcmlzIGxvcnNxdeKAmWlsIHPigJlhZ2l0IGTigJl1bmUgY3LDqWFuY2UgY2hpcm9ncmFwaGFpcmUgZXQgcXVlIGxhIHByb2PDqWR1cmUgYSDDqXTDqSBjbMO0dHVyw6llIHBvdXIgaW5zdWZmaXNhbmNlIGTigJlhY3RpZiA7CkF0dGVuZHUgcGFyIGFpbGxldXJzIHF14oCZaWwgcmVsw6h2ZSBkZSBsYSByZXNwb25zYWJpbGl0w6kgZHUgY29tcHRhYmxlIGRlIHPigJlhc3N1cmVyIGRlIGxhIG1pc2UgZW4gxZN1dnJlIHBhciBs4oCZaHVpc3NpZXIgZGUgbOKAmWFkbWluaXN0cmF0aW9uIGRlcyBkaWxpZ2VuY2VzIGFkw6lxdWF0ZXMgZW4gdnVlIGR1IHJlY291dnJlbWVudMKgOyAKQXR0ZW5kdSBlbmZpbiBxdWUgbCdhYnNlbmNlIGQnYWNjw6hzIGF1IEJPREFDQywgZXQgcGx1cyBnw6luw6lyYWxlbWVudCBs4oCZaW5zdWZmaXNhbmNlIGRlcyBtb3llbnMgYWNjb3Jkw6lzIGF1IHBvc3RlIGNvbXB0YWJsZSwgc29udCBkZSBudWwgZWZmZXQgc3VyIGxhIHJlc3BvbnNhYmlsaXTDqSBww6ljdW5pYWlyZSBldCBwZXJzb25uZWxsZSBkZXMgY29tcHRhYmxlcywgdGVsbGUgcXUnZWxsZSByw6lzdWx0ZSBkZXMgbG9pcyBldCByw6hnbGVtZW50IHN1c3Zpc8Opc8KgOyAKUXUnaWwgeSBhIGxpZXUsIGVuIGNvbnPDqXF1ZW5jZSwgZGUgY29uc3RpdHVlciBNLsKgWCBkw6liaXRldXIgZGVzIGRlbmllcnMgZGUgbCfDiXRhdCBwb3VyIDEzwqA4NTcsMDDCoOKCrCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2XCoDIwMDYsIGRlIDfCoDQ4MCw2MMKg4oKsIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA4IGV0IGRlIDg4wqA1MDDCoOKCrCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOSA7ClByw6lzb21wdGlvbiBkZSBjaGFyZ2UgbsKwwqAzCkF0dGVuZHUgcXVlIGxlIGNvbXB0YWJsZSBwdWJsaWMgYSBhY2NvcmTDqSByZW1pc2UgZ3JhY2lldXNlLCBzdXIgbGUgZm9uZGVtZW50IGRlIGzigJlhcnRpY2xlIDEwIGR1IGTDqWNyZXQgbsKwwqA5Mi0xMzY5IGR1IDI5IGTDqWNlbWJyZSAxOTkyLCDDoCBNLsKgQSwgbGUgMiBmw6l2cmllciAyMDA5ICh0aXRyZSBkZSBwZXJjZXB0aW9uIGR1IDI0IGp1aWxsZXQgMjAwOCkgcG91ciB1biBtb250YW50IGRlIDHCoDg5MCwzNMKg4oKsLCDDoCBNLsKgQiwgbGUgNCBqdWlsbGV0IDIwMDggKHRpdHJlIGRlIHBlcmNlcHRpb24gZHUgbGUgMjYganVpbiAyMDA3KSBwb3VyIHVuIG1vbnRhbnQgZGUgMcKgNDAwLDAwwqDigqwgZXQgw6AgbGEgc29jacOpdMOpIG5hdGlvbmFsZSBkZSBzYXV2ZXRhZ2UgZW4gbWVyLCBsZSAzMCBub3ZlbWJyZSAyMDA5LCBwb3VyIGRlcyBtb250YW50cyByZXNwZWN0aWZzIGRlIDLCoDYyMiwxNMKg4oKsIGV0IGRlIDTCoDAyNywzM8Kg4oKsICh0aXRyZXMgZGUgcGVyY2VwdGlvbiBkdSAxMMKgb2N0b2JyZcKgMjAwOCnCoDsKQXR0ZW5kdSBxdeKAmWF1eCB0ZXJtZXMgZHUgcsOpcXVpc2l0b2lyZSwgbm9ub2JzdGFudCBs4oCZb2N0cm9pIGRlIHJlbWlzZXMgZ3JhY2lldXNlcyBwYXIgbGUgY29tcHRhYmxlIHB1YmxpYywgZW4gYXBwbGljYXRpb24gZGVzIHByw6lyb2dhdGl2ZXMgcXVpIGx1aSBzb250IGNvbmbDqXLDqWVzIHBhciBsZSBkw6ljcmV0IG7CsMKgOTItMTM2OSBkdSAyOSBkw6ljZW1icmUgMTk5MiwgaWwgcmV2aWVudCBhdSBqdWdlIGRlcyBjb21wdGVzLCBzYW5zIHNlIHByb25vbmNlciBzdXIgbGEgbGljw6lpdMOpIGRlcyBkw6ljaXNpb25zIGRlIHJlbWlzZSBncmFjaWV1c2UsIGTigJlhcHByw6ljaWVyLCBk4oCZdW5lIHBhcnQgc2kgbGVzIG9ww6lyYXRpb25zIHNvbnQgY29uZm9ybWVzIGF1eCByw6hnbGVzIGRlIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUsIGTigJlhdXRyZSBwYXJ0IHNpIGxlIGNvbXB0YWJsZSBhdmFpdCDDqXB1aXPDqSBs4oCZZW5zZW1ibGUgZGVzIGRpbGlnZW5jZXMgcXXigJlpbCBsdWkgYXBwYXJ0ZW5haXQgZGUgbWV0dHJlIGVuIMWTdXZyZSBhdmFudCBsYSBjb25zdGF0YXRpb24gZGUgbOKAmWlycsOpY291dnJhYmlsaXTDqSBkZSBsYSBjcsOpYW5jZcKgOyAKQXR0ZW5kdSBxdWUgbGVzIGNvbXB0YWJsZXMgcHVibGljcyBjb25jZXJuw6lzIHBhciBsYSAzw6htZSBjaGFyZ2UgZXhwb3NlbnQgcXVlIGxlcyBkw6ljaXNpb25zIGRlIHJlbWlzZSBncmFjaWV1c2UgcHJpc2VzIHN1ciBsZSBmb25kZW1lbnQgZHUgZMOpY3JldCBuwrDCoDkyLTEzNjkgZHUgMjnCoGTDqWNlbWJyZcKgMTk2MiBuZSBzb250IHBhcyBkZSBzaW1wbGVzIG1lc3VyZXMgY29tcHRhYmxlcyBldCwgZHUgZmFpdCBkZSBsZXVyIG5hdHVyZSwgY29uc3RpdHVlbnQgZGVzIGFjdGVzIG9wcG9zYWJsZXMgYXUganVnZSBkZXMgY29tcHRlc8KgOyBxdeKAmWVuIHZlcnR1IGRlIGzigJlhcnRpY2xlIDEyMzQgZHUgY29kZSBjaXZpbCwgZWxsZXMgcHJvdm9xdWVudCBs4oCZZXh0aW5jdGlvbiBkZSBsYSBjcsOpYW5jZSBldCBkw6ljaGFyZ2VudCBsZSBjb21wdGFibGUgZGUgc2EgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlwqA7CgpBdHRlbmR1IHF1ZSBsZXMgY29tcHRhYmxlcyBwdWJsaWNzIMOpbm9uY2VudCBxdWUgbGUganVnZSBkZXMgY29tcHRlcyBwZXV0IGV4ZXJjZXIgdW4gY29udHLDtGxlIHN1ciBsZSByZWNvdXZyZW1lbnQgc2FucyBwb3VyIGF1dGFudCDDqWNhcnRlciBsZXMgZMOpY2lzaW9ucyBkZSByZW1pc2UgZ3JhY2lldXNlIHByaXNlcyBlbiB2ZXJ0dSBkdSBkw6ljcmV0IG7CsMKgOTItMTM2OSBkdSAyOSBkw6ljZW1icmUgMTk2MsKgOyBxdeKAmcOgIGNldCDDqWdhcmQsIHRvdXQgcmFpc29ubmVtZW50IGZvbmTDqSBzdXIgdW5lIGFuYWxvZ2llIGF2ZWMgbGEganVyaXNwcnVkZW5jZSByZWxhdGl2ZSBhdXggYWRtaXNzaW9ucyBlbiBub24tdmFsZXVyIHNlcmFpdCBlcnJvbsOpLCBkdSBmYWl0IGRlIGxhIGRpZmbDqXJlbmNlIGRlIG5hdHVyZSBlbnRyZSBjZXMgZGVybmnDqHJlcyBldCBsZXMgcmVtaXNlcyBncmFjaWV1c2VzIGRvbnQgZMOpY291bGUgdW5lIGV4dGluY3Rpb24gZGUgbGEgY3LDqWFuY2XCoDsKQXR0ZW5kdSBlbmZpbiBxdWUgZGFucyBsZXVyIHLDqXBvbnNlIGF1IHLDqXF1aXNpdG9pcmUsIGxlcyBjb21wdGFibGVzIHB1YmxpY3MgZXhwb3NlbnQgcXVlIGxhIHJlbWlzZSBncmFjaWV1c2UgYWNjb3Jkw6llIMOgIE1NLsKgQSBldCDDoCBNLsKgQiBu4oCZb250IGVuIHJpZW4gY29tcHJvbWlzIGxlIHJlY291dnJlbWVudCBkZXMgY3LDqWFuY2VzIGV0IG7igJnDqXRhaWVudCBudWxsZW1lbnQgcHLDqW1hdHVyw6llcyBwdWlzcXVlIGxlcyBkw6liaXRldXJzIMOpdGFpZW50IGltcMOpY3VuaWV1eMKgOyBxdWUgbGVzIHJlbWlzZXMgZ3JhY2lldXNlcyBhY2NvcmTDqWVzIMOgIGxhIFNOU00gc2UgcmFwcG9ydGVudCDDoCBkZXMgc29tbWVzIGR1ZXMgcGFyIGNldHRlIGFzc29jaWF0aW9uIGF1IHRpdHJlIGRlIGzigJl1dGlsaXNhdGlvbiBkZSBwaXNjaW5lcyBtaWxpdGFpcmVzIGVuIDIwMDQgZXQgMjAwNSBhdmFudCBxdWUgbGUgbWluaXN0cmUgcHJlbm5lLCBlbiBtYXJzIDIwMDcsIHVuZSBkw6ljaXNpb24gZOKAmWV4b27DqXJhdGlvbiBkZSBjZSB0eXBlIGRlIGNoYXJnZXPCoDsgbWFpcyBxdWUgbGVzIGNvbXB0YWJsZXMgYWZmaXJtZW50IGF2b2lyIHJlc3BlY3TDqSBsYSBsZXR0cmUgZXQgbOKAmWVzcHJpdCBkdSBkw6ljcmV0IGR1IDI5IGTDqWNlbWJyZSAxOTkyIGVuIGFjY29yZGFudCDDoCBsYSBTTlNNIHF1aSBlc3QgdW5lIHBlcnNvbm5lIG1vcmFsZSBzYW5zIGJ1dCBsdWNyYXRpZiwgbGUgYsOpbsOpZmljZSBkZSBsYSByZW1pc2UgZ3JhY2lldXNlwqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGRlIGzigJlhcnRpY2xlIDEwIGR1IGTDqWNyZXQgbsKwwqA5Mi0xMzY5IGR1IDI5IGTDqWNlbWJyZSAxOTkyIGRhbnMgc2EgdmVyc2lvbiBlbiB2aWd1ZXVyIGF1IG1vbWVudCBkZXMgZmFpdHMsIMKrIENoYXF1ZSBjb21wdGFibGUgcGV1dCwgcG91ciBsZXMgb3JkcmVzIGRlIHJlY2V0dGVzIHF1J2lsIHByZW5kIGVuIGNoYXJnZSBlbiBhcHBsaWNhdGlvbiBkZSBsJ2FydGljbGUgODYgZHUgZMOpY3JldCBzdXN2aXPDqSBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyLCBjb25zZW50aXIgZGVzIHJlbWlzZXMgZW4gcHJpbmNpcGFsLCBtYWpvcmF0aW9ucywgZnJhaXMgZGUgcG91cnN1aXRlcyBldCBpbnTDqXLDqnRzLCBkb250IGxlIG1vbnRhbnQgcG91ciB1bmUgbcOqbWUgZGV0dGUgbidleGPDqGRlIHBhcyA3NsKgMDAwwqDigqwuIExlcyBkw6ljaXNpb25zIGR1IGNvbXB0YWJsZSBwZXV2ZW50IGZhaXJlIGwnb2JqZXQgZCd1biByZWNvdXJzIGRldmFudCBsZSBtaW5pc3RyZSBjaGFyZ8OpIGR1IGJ1ZGdldC4gwrvCoDsKQXR0ZW5kdSBxdeKAmWVuIGzigJllc3DDqGNlLCBsYSBjaGFyZ2UgbmUgc2UgZm9uZGUgbmkgc3VyIGzigJlpbmNvbXDDqXRlbmNlIGRlcyBjb21wdGFibGVzIGF5YW50IGFjY29yZMOpIGxlcyByZW1pc2VzIGdyYWNpZXVzZXMsIG5pIHN1ciB1bmUgbcOpY29ubmFpc3NhbmNlIGRlIGxhIHByb2PDqWR1cmUgZOKAmWF0dHJpYnV0aW9uIGRlc2RpdGVzIHJlbWlzZXPCoDsgcXVlIGxlIHLDqXF1aXNpdG9pcmUgw6l2b3F1ZSBlbiByZXZhbmNoZSBsZSBkw6lmYXV0IGRlIG1pc2UgZW4gxZN1dnJlIGRlIGRpbGlnZW5jZXMgYXBwcm9wcmnDqWVzIGVuIHZ1ZSBkdSByZWNvdXZyZW1lbnQsIHByw6lhbGFibGVtZW50IMOgIGzigJlvY3Ryb2kgZGVzIHJlbWlzZXMgZ3JhY2lldXNlcyBwYXIgbGUgY29tcHRhYmxlIHB1YmxpYyA7CkF0dGVuZHUgcXVlLCBz4oCZaWwgbuKAmWVzdCBwYXMgY29udGVzdMOpIHF1ZSBsZXMgZMOpY2lzaW9ucyBkZSByZW1pc2UgZ3JhY2lldXNlIHByaXNlcyBlbiBhcHBsaWNhdGlvbiBkZXMgZGlzcG9zaXRpb25zIHN1c21lbnRpb25uw6llcyBkdSBkw6ljcmV0IG7CsMKgOTItMTM2OSBkdSAyOcKgZMOpY2VtYnJlwqAxOTkyIG9udCB1bmUgbmF0dXJlIGp1cmlkaXF1ZSBkaXN0aW5jdGUgZGUgY2VsbGVzIGRlcyBhZG1pc3Npb25zIGVuIG5vbi12YWxldXIsIGlsIGVzdCBjb25zdGFudCBxdWUgbOKAmW9jdHJvaSBk4oCZdW5lIHJlbWlzZSBncmFjaWV1c2UgbmUgbGllIHBhcyBsZSBqdWdlIGRlcyBjb21wdGVzIGRhbnMgbCdhcHByw6ljaWF0aW9uIHF1J2lsIGRvaXQgcG9ydGVyIHN1ciBsYSByYXBpZGl0w6ksIGxlIGNhcmFjdMOocmUgY29tcGxldCBldCBsJ2Fkw6lxdWF0aW9uIGRlcyBkaWxpZ2VuY2VzIGZhaXRlcyBwYXIgbGUgcmVjZXZldXIgZW4gdnVlIGR1IHJlY291dnJlbWVudCBkZSBsYSBjcsOpYW5jZSBjb25jZXJuw6llwqA7CkF0dGVuZHUsIHPigJlhZ2lzc2FudCBkZSBsYSBjcsOpYW5jZSBkw6l0ZW51ZSBzdXIgTS7CoEEsIHF1ZSBsYSBkw6ljaXNpb24gZGUgcmVtaXNlIGdyYWNpZXVzZSwgY29ow6lyZW50ZSBhdmVjIGzigJnDqXRhdCBkZSBs4oCZaW50w6lyZXNzw6ksIHNhbnMgcmVzc291cmNlcywgYSBiaWVuIMOpdMOpIHByw6ljw6lkw6llIGRlIGRpbGlnZW5jZXMgcXVpLCBjb21wdGUtdGVudSBkdSBjb250ZXh0ZSDigJPCoGFwcsOocyBhdm9pciDDqXTDqSDDqWxldsOpIGF1IHByeXRhbsOpZSBtaWxpdGFpcmUgZGUgTGHCoEZsw6hjaGUsIGxlIGTDqWJpdGV1ciDDqXRhaXQgZW50csOpIGRpcmVjdGVtZW50IGRhbnMgdW4gbW9uYXN0w6hyZSBldCBuZSBiw6luw6lmaWNpYWl0IGTigJlhdWN1bmUgcsOpbXVuw6lyYXRpb27CoOKAkywgbmUgc29udCBwYXMgaW5zdWZmaXNhbnRlcyBldCBxdeKAmWlsIGVzdCBkaWZmaWNpbGUsIGVuIHRvdXQgw6l0YXQgZGUgY2F1c2UsIGTigJllbnZpc2FnZXIgbGVzIGF1dHJlcyBkaWxpZ2VuY2VzIHF1aSBhdXJhaWVudCBwdSDDqnRyZSB1dGlsZW1lbnQgbWVuw6llc8KgOwoKQXR0ZW5kdSwgc+KAmWFnaXNzYW50IGRlIGxhIGNyw6lhbmNlIGTDqXRlbnVlIHN1ciBNLsKgQiBxdWUgbGVzIGRpbGlnZW5jZXMgcHLDqWFsYWJsZXMgZW4gdnVlIGR1IHJlY3JvdXZyZW1lbnQgb250IGJpZW4gw6l0w6kgbWVuw6llcywgcXVlLCBncsOiY2UgYXV4IHJlY2hlcmNoZXMgZW50cmVwcmlzZXMgcGFyIGxlIGNvbXB0YWJsZSwgdW5lIGxldHRyZSBkZSByYXBwZWwgYSDDqXTDqSBhZHJlc3PDqWUgYXUgZMOpYml0ZXVyLCBhcHLDqHMgdW5lIHByZW1pw6hyZSBub3RpZmljYXRpb24gcmV0b3VybsOpZSBwYXIgbGEgcG9zdGUsIGV0IHF14oCZZW4gcsOpcG9uc2Ugw6AgY2V0dGUgbGV0dHJlIGRlIHJhcHBlbCBs4oCZaW50w6lyZXNzw6kgYSBwcsOpc2VudMOpIHVuZSBkZW1hbmRlIGRlIHJlbWlzZSBncmFjaWV1c2UgYXBwdXnDqWUgZOKAmXVuIGV4dHJhaXQgZHUgcmVnaXN0cmUgZHUgY29tbWVyY2UgZXQgZGVzIHNvY2nDqXTDqXMgcmVsYXRpZiDDoCBs4oCZb3V2ZXJ0dXJlIGRlIGxhIGxpcXVpZGF0aW9uIGp1ZGljaWFpcmUgZGUgc29uIGZvbmRzIGRlIGNvbW1lcmNlIGV0IGRlIGzigJlhdHRlc3RhdGlvbiBkdSBwYWllbWVudCBwYXIgbGEgQ2Fpc3NlIGTigJlhbGxvY2F0aW9ucyBmYW1pbGlhbGVzIChDQUYpIGR1IHJldmVudSBtaW5pbXVtIGTigJlpbnNlcnRpb24gZG9udCBsZSBtb250YW50IGVzdCBk4oCZYWlsbGV1cnMgaW5mw6lyaWV1ciDDoCBjZWx1aSBkdSBsb3llciBtZW5zdWVsIGTDuyBwYXIgbOKAmWludMOpcmVzc8OpwqA7CkF0dGVuZHUsIHPigJlhZ2lzc2FudCBkZXMgcmVtaXNlcyBncmFjaWV1c2VzIGFjY29yZMOpZXMgw6AgbOKAmWFzc29jaWF0aW9uIFNOU00sIHF1ZSBjZXR0ZSBwZXJzb25uZSBtb3JhbGUgYSBjb250ZXN0w6kgbGEgcsOpYWxpdMOpIGRlcyBkZXV4IGNyw6lhbmNlcyBlbiBjYXVzZSBzaXTDtHQgYXByw6hzIGF2b2lyIHJlw6d1IGxlcyB0aXRyZXMgZGUgcGVyY2VwdGlvbiwgcXXigJlhcHLDqHMgY2V0dGUgY29udGVzdGF0aW9uIGxlIGNvbXB0YWJsZSBhIHNhaXNpIGzigJlvcmRvbm5hdGV1csKgOyBxdWUgY2VsdWktY2ksIHRvdXQgZW4gcmVqZXRhbnQgbGEgcsOpY2xhbWF0aW9uIGZvcm11bMOpZSBwYXIgbGEgU05TTSB0ZW5kYW50IMOgIGzigJlhbm51bGF0aW9uIGRlcyB0aXRyZXMgZW4gY2F1c2UgYXUgbW90aWYgcXVlIGxhIGTDqWNpc2lvbiBtaW5pc3TDqXJpZWxsZSBkZSBtaXNlIMOgIGRpc3Bvc2l0aW9uIMOgIHRpdHJlIGdyYXR1aXQgZGVzIGluc3RhbGxhdGlvbnMgc3BvcnRpdmVzIHByaXNlIGVuIG1hcnMgMjAwNyBuZSBwb3V2YWl0IMOqdHJlIHLDqXRyb2FjdGl2ZSwgbuKAmWVuIMOpdGFpdCBlbiByZXZhbmNoZSBwYXMgbW9pbnMgZmF2b3JhYmxlIMOgIGzigJlvY3Ryb2kgZOKAmXVuZSByZW1pc2UgZ3JhY2lldXNlIHRvdGFsZcKgOyBxdeKAmWVuc3VpdGUgbOKAmW9yZG9ubmF0ZXVyIGEgZG9ubsOpIHNvbiBhY2NvcmQgw6AgbGEgZGVtYW5kZSBkZSByZW1pc2UgZ3JhY2lldXNlIGZvcm11bMOpZSBwYXIgbGEgU05TTSwgZW4gcHLDqWNpc2FudCBxdeKAmWVsbGUgc2UganVzdGlmaWUgZGFucyBsYSBtZXN1cmUgb8O5IGxhIFNOU00gbWV0dGFpdCBzZXMgdmVkZXR0ZXMgZ3JhY2lldXNlbWVudCDDoCBkaXNwb3NpdGlvbiBkZSBsYSBtYXJpbmUgbmF0aW9uYWxlwqA7CkF0dGVuZHUgcXXigJlpbCBu4oCZeSBhIHBhcyBsaWV1LCBjb21wdGUgdGVudSBkZXMgZmFpdHMgZGUgbOKAmWVzcMOoY2UsIMOgIGTDqWJldCDDoCBs4oCZZW5jb250cmUgZGUgTU0uIFggZXQgWiBlbiBjZSBxdWkgY29uY2VybmUgbGEgY2hhcmdlIG7CsMKgM8KgOwpQcsOpc29tcHRpb24gZGUgY2hhcmdlIG7CsMKgNQpBdHRlbmR1IHF1ZSBsYSBjaW5xdWnDqG1lIGNoYXJnZSByZXRlbnVlIHBhciBsZSBQcm9jdXJldXIgZ8OpbsOpcmFsIGVuIHNvbiByw6lxdWlzaXRvaXJlIHNlIHJhcHBvcnRlIGF1IHBhaWVtZW50IHBhciBs4oCZYWdlbnQgY29tcHRhYmxlIGRlIGzigJlBQ1NJQSBkZSBzb21tZXMgZm9yZmFpdGFpcmVzIGF1IHByb2ZpdCBkZSA2OSBmb25jdGlvbm5haXJlcyBtaWxpdGFpcmVzIGFmZmVjdMOpcyDDoCBsYSBkaXJlY3Rpb24gZHUgcGVyc29ubmVsIG1pbGl0YWlyZSBkZSBsYSBtYXJpbmUsIGF1IGNvdXJzIGRlcyBtb2lzIGRlIGphbnZpZXIgZXQgZGUgZsOpdnJpZXLCoDIwMDksIHBvdXIgdW4gbW9udGFudCB0b3RhbCBkZSAxNMKgNDAwwqBldXJvc8KgOyBxdWUgY2VzIGTDqXBlbnNlcywgZGl0ZXMgwqvCoGTDqXBlbnNlcyBmb3J0dWl0ZXMgwrsgb250IMOpdMOpIHLDqWdsw6llcyBwYXIgbGUgcsOpZ2lzc2V1ciBk4oCZYXZhbmNlcyBldCBkZSByZWNldHRlcyBkZSBsYSBkaXJlY3Rpb24gZHUgY29tbWlzc2FyaWF0IGRlIGxhIG1hcmluZSDDoCBQYXJpc8KgOyAKQXR0ZW5kdSBxdWUsIHN1aXZhbnQgbGUgcsOpcXVpc2l0b2lyZSwgY2VzIGTDqXBlbnNlcyBmb3JmYWl0YWlyZXMgb250IMOpdMOpIHBhecOpZXMgZW4gbOKAmWFic2VuY2UgZGUgdG91dGUgcHJvZHVjdGlvbiBk4oCZw6l0YXRzIGRlIGp1c3RpZmljYXRpZnMgZXhhY3RzIGV0IGNvbXBsZXRzIHNpIGVsbGVzIGNvcnJlc3BvbmRlbnQgw6AgZGVzIHJlbWJvdXJzZW1lbnRzIGRlIGZyYWlzIHLDqWVscywgZXQgZW4gbOKAmWFic2VuY2UgZGUgdGV4dGUgbMOpZ2FsIG91IHLDqWdsZW1lbnRhaXJlIGxlcyBpbnN0aXR1YW50IHNpIGxlc2RpdGVzIGTDqXBlbnNlcyBmb3J0dWl0ZXMgY29uc3RpdHVlbnQgZGVzIGluZGVtbml0w6lzwqA7CkF0dGVuZHUgcXXigJlhdXggdGVybWVzIGR1IHLDqXF1aXNpdG9pcmUsIGxlcyBvcMOpcmF0aW9ucyBzdXNtZW50aW9ubsOpZXMgc29udCBwcsOpc29tcHRpdmVzIGTigJlpcnLDqWd1bGFyaXTDqXMgc3VzY2VwdGlibGVzIGRlIGZvbmRlciBsYSBtaXNlIGVuIGpldSBkZSBsYSByZXNwb25zYWJpbGl0w6kgcGVyc29ubmVsbGUgZXQgcMOpY3VuaWFpcmUgZGUgTW1lIFksIMOgIGhhdXRldXIgZGUgMTTCoDQwMMKg4oKsLCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOcKgOwpBdHRlbmR1IHF1ZSBkYW5zIHNhIHLDqXBvbnNlLCBs4oCZYWdlbnQgY29tcHRhYmxlIGZhaXQgdmFsb2lyIHF1ZSBsZXMgZMOpcGVuc2VzIHByw6lzb21wdGl2ZXMgZOKAmWlycsOpZ3VsYXJpdMOpcyBlbnRyZW50IGRhbnMgbGUgcMOpcmltw6h0cmUgZHUgcGxhbiBkZSBjb250csO0bGUgaGnDqXJhcmNoaXPDqSBkZSBsYSBkw6lwZW5zZSBldCBxdWUsIGRlIGNlIGZhaXQgZWxsZXMgbuKAmW9udCBwYXMgZmFpdCBs4oCZb2JqZXQgZOKAmXVuIHZpc2EgZXhoYXVzdGlmwqA7IHF1ZSBjZXMgcGFpZW1lbnRzIHNvbnQgYXV0b3Jpc8OpcyBwYXIgdW5lIGTDqWNpc2lvbiBkdSAyMiBhdnJpbCAyMDAyIGRlIGxhIGRpcmVjdGlvbiBkdSBwZXJzb25uZWwgbWlsaXRhaXJlIGV0IHBhciB1bmUgY2lyY3VsYWlyZSBuwrDCoDEzMyBERUYvRFBNTS9GSU4vTlAgZHUgNsKgZsOpdnJpZXLCoDE5OTUgdHJhbnNtaXNlcyDDoCBsYSBDb3VyIGRlcyBjb21wdGVzwqA7IHF1ZSBjZXBlbmRhbnQgbGVzIHRleHRlcyByw6lnbGVtZW50YWlyZXMgY29uc3RpdHVhbnQgbGEgYmFzZSBkZXNkaXRzIHBhaWVtZW50cyBu4oCZb250IHB1IMOpdMOpIHJldHJvdXbDqXMgcGFyIGzigJlhZG1pbmlzdHJhdGlvbiBkdSBtaW5pc3TDqHJlIGRlIGxhIGTDqWZlbnNlwqA7CkF0dGVuZHUgcXVlIGxlcyByw6lwb25zZXMgYXBwb3J0w6llcyBhdSByw6lxdWlzaXRvaXJlIG5lIHNvbnQgcGFzIGRlIG5hdHVyZSDDoCBkw6ljaGFyZ2VyIGxhIHJlc3BvbnNhYmlsaXTDqSBkZSBs4oCZYWdlbnQgY29tcHRhYmxlwqA7CkF0dGVuZHUsIGVuIGVmZmV0LCBxdWUgbCdvcmdhbmlzYXRpb24gcsOpc3VsdGFudCBkdSBjb250csO0bGUgaGnDqXJhcmNoaXPDqSBkZSBsYSBkw6lwZW5zZSBuZSBzYXVyYWl0IGVuIGwnw6l0YXQgYWN0dWVsIGR1IGRyb2l0IGTDqWdhZ2VyIGxhIHJlc3BvbnNhYmlsaXTDqSBwZXJzb25uZWxsZSBldCBww6ljdW5pYWlyZSBkdSBjb21wdGFibGUgOwpBdHRlbmR1IHF1ZSBsZXMgbW9udGFudHMgdW5pdGFpcmVzIHZlcnPDqXMgc+KAmcOpdGFibGlzc2VudCBzeXN0w6ltYXRpcXVlbWVudCDDoCAxMDDCoOKCrCBvdSDDoCAxNTDCoOKCrCBzdWl2YW50IGxlIGdyYWRlIGV0IGxhIGZvbmN0aW9uIGRlcyBiw6luw6lmaWNpYWlyZXPCoDsgcXVlIGRhbnMgbOKAmWh5cG90aMOoc2Ugb8O5IGNlcyBwYWllbWVudHMgb250IGNvcnJlc3BvbmR1IMOgIHVuZSBpbmRlbW5pdMOpLCBpbHMgYXVyYWllbnQgZMO7IMOqdHJlIGZvbmTDqXMgc3VyIHVuIHRleHRlIHLDqWdsZW1lbnRhaXJlLCBjZSBxdWkgbuKAmWVzdCBwYXMgw6l0YWJsaSBlbiBs4oCZZXNww6hjZcKgOyBxdWUgc2kgbGVzIGTDqXBlbnNlcyBsaXRpZ2lldXNlcyBjb25zdGl0dWVudCBkZXMgcmVtYm91cnNlbWVudHMgZGUgZnJhaXMgZGUgbWlzc2lvbiwgZWxsZXMgbmUgcG91dmFpZW50IMOqdHJlIHBhecOpZXMgZW4gbOKAmWFic2VuY2UgZOKAmcOpdGF0cyBkZSBmcmFpcyBkw6l0YWlsbMOpcyBldCBkZSBqdXN0aWZpY2F0aWZzLCBjb25mb3Jtw6ltZW50IGF1eCBkaXNwb3NpdGlvbnMgZHUgZMOpY3JldCBuwrDCoDkyLTE1OSBkdSAyMcKgZsOpdnJpZXLCoDE5OTIgZml4YW50IGxlcyBjb25kaXRpb25zIGV0IGxlcyBtb2RhbGl0w6lzIGRlIHLDqGdsZW1lbnQgZGVzIGZyYWlzIG9jY2FzaW9ubsOpcyBwYXIgbGVzIGTDqXBsYWNlbWVudHMgZGVzIHBlcnNvbm5lbHMgbWlsaXRhaXJlcyBzdXIgbGUgdGVycml0b2lyZSBtw6l0cm9wb2xpdGFpbiBkZSBsYSBGcmFuY2XCoDsKQXR0ZW5kdSBkw6hzIGxvcnMgcXVlIGxlcyB2ZXJzZW1lbnRzIHJlbGV2w6lzIHBhciBsYSA1w6htZSBjaGFyZ2UgY29uc3RpdHVlbnQgZGVzIGTDqXBlbnNlcyBpcnLDqWd1bGnDqHJlc8KgOyBxdWUgY2VzIGTDqXBlbnNlcyBvbnQgw6l0w6kgZWZmZWN0dcOpZXMgYXUgbW9pcyBk4oCZYXZyaWwgMjAwOSBzb3VzIGxhIGdlc3Rpb24gZGUgTW1lIFkgOwpRdSdpbCB5IGEgbGlldSBlbiBjb25zw6lxdWVuY2UgZGUgY29uc3RpdHVlciBNbWUgWSBkw6liaXRyaWNlIGRlcyBkZW5pZXJzIGRlIGwnw4l0YXQsIHBvdXIgMTTCoDQwMMKg4oKsIGF1IHRpdHJlIGRlIGzigJlleGVyY2ljZSAyMDA5wqA7ClByw6lzb21wdGlvbiBkZSBjaGFyZ2UgbsKwIDYKQXR0ZW5kdSBxdWUgbGEgc2l4acOobWUgY2hhcmdlIGR1IHLDqXF1aXNpdG9pcmUgc2UgcmFwcG9ydGUgw6AgdW5lIHByw6lzb21wdGlvbiBkZSBkw6lwZW5zZSBpcnLDqWd1bGnDqHJlIGF1IHRpdHJlIGRlcyBwYWllbWVudHMgZOKAmXVuIG1hcmNow6kgbsKwwqA5Mjg3MjI0IERHQSBub3RpZmnDqSBsZSAyM8KgZMOpY2VtYnJlwqAxOTkyIGF1eCBzb2Npw6l0w6lzIEFsY2F0ZWwgZGV2ZW51ZSBUaGFsw6hzIENvbW11bmljYXRpb24gZXQgSTJFIGRldmVudWUgQW3DqXN5cywgZXQgcmVsYXRpZiDDoCBs4oCZw6l0dWRlIGV0IGxhIHLDqWFsaXNhdGlvbiBk4oCZdW4gY2VudHJlIG9ww6lyYXRpb25uZWwgZGUgcmVjaGVyY2hlIGV0IGRlIHN1cnZlaWxsYW5jZSBhdXRvbWF0aXF1ZSBpbnTDqWdyw6kgZW4gcsOpc2VhdXgsIGRlc3RpbsOpIMOgIGxhIHN1cnZlaWxsYW5jZSBldCDDoCBsYSBwcm90ZWN0aW9uIGRlcyByw6lzZWF1eCByYWRpb8OpbGVjdHJpcXVlcyBkZSB0cmFuc21pc3Npb24gZXQgZGVzIGJhbmRlcyBkZSBmcsOpcXVlbmNlcyBhdHRyaWJ1w6llcyDDoCBs4oCZYXJtw6llIGRlIGzigJlhaXLCoDsKQXR0ZW5kdSBxdWUgbGUgcsOpcXVpc2l0b2lyZSByZWzDqHZlIHF1ZSBkZXMgcHJlc3RhdGlvbnMgZOKAmXVuIG1vbnRhbnQgZGUgMjkxwqA4OTbCoOKCrCBwb3VyIFRoYWzDqHMgZXQgZGUgMTc1wqA4OTksNjDCoOKCrCBwb3VyIEFtw6lzeXMgb250IMOpdMOpIHBhecOpZXMgc2FucyBxdWUgbGVzIG9yZHJlcyBkZSBzZXJ2aWNlIG91IGTDqWNpc2lvbnMgZGUgcG91cnN1aXZyZSBhaWVudCDDqXTDqSBwcm9kdWl0cywgZXQgYWxvcnMgbcOqbWUgcXVlIGxlIG1hcmNow6kgaW5pdGlhbCBuZSBs4oCZYXZhaXQgcGFzIHByw6l2dcKgOyBxdWUgbGUgY29tcHRhYmxlIGEgcGF5w6kgZW4gbOKAmWFic2VuY2UgZGVzIHBpw6hjZXMgcHLDqXZ1ZXMgcGFyIGxhIG5vbWVuY2xhdHVyZSBkZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBkZXMgZMOpcGVuc2VzIGRlIGzigJlFdGF0wqA7IHF1ZSwgZMOocyBsb3JzLCBsZSBjb21wdGFibGUgbmUgcG91dmFpdCBleGVyY2VyIGxlcyBjb250csO0bGVzIHByw6l2dXMgYXV4IGFydGljbGVzIDEyIGV0IDEzIGR1IGTDqWNyZXQgZHUgMjkgZMOpY2VtYnJlIDE5NjIgcHLDqWNpdMOpIGV0IGF1cmFpdCBkw7sgc3VzcGVuZHJlIGNlcyBwYWllbWVudHMgZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgMzcgZHUgcsOoZ2xlbWVudCBnw6luw6lyYWwgc3VyIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUgZXQgZW4gaW5mb3JtZXIgbOKAmW9yZG9ubmF0ZXVywqA7CgpBdHRlbmR1IGFpbnNpIHF1ZSwgc2Vsb24gbGUgbWluaXN0w6hyZSBwdWJsaWMsIGxlc2RpdHMgcGFpZW1lbnRzIHNlcmFpZW50IHByw6lzb21wdGlmcyBk4oCZaXJyw6lndWxhcml0w6lzIGV0IHN1c2NlcHRpYmxlcyBkZSBmb25kZXIgbGEgbWlzZSBlbiBqZXUgZGUgbGEgcmVzcG9uc2FiaWxpdMOpIHBlcnNvbm5lbGxlIGV0IHDDqWN1bmlhaXJlIGRlIE1tZSBZLCBjb21wdGFibGUgZW4gZXhlcmNpY2UgZHUgMTMgbWFycyAyMDA5IGF1IDE0wqBzZXB0ZW1icmXCoDIwMDksIHN1ciBsZSBtb250YW50IHRvdGFsIGRlcyBtYW5kYXRzIGVuIGNhdXNlLCBzb2l0IDI5McKgODk2wqDigqwgZXTCoDE3NcKgODk5LDYwwqDigqzCoDsKQXR0ZW5kdSBxdWUgZGFucyBzYSByw6lwb25zZSwgbOKAmWFnZW50IGNvbXB0YWJsZSBzb3V0aWVudCBxdWUgbGVzIGTDqXBlbnNlcyBlbiBjYXVzZSBzb250IGNvbmZvcm1lcyBhdXggc3RpcHVsYXRpb25zIGR1IG1hcmNow6kgZXQgYXNzb3J0aWVzIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIG7DqWNlc3NhaXJlcyA7CkF0dGVuZHUgcXVlIHN1aXZhbnQgbGVzIHLDqXBvbnNlcyBwcm9kdWl0ZXMgw6AgbGEgQ291ciBkZXMgY29tcHRlcywgbGUgbWFyY2jDqSBzdXNtZW50aW9ubsOpIG7CsMKgOTIgODcyMjQgREdBIGZhaXQgZXhwbGljaXRlbWVudCByw6lmw6lyZW5jZSBhdSBjYWhpZXIgZGVzIGNsYXVzZXMgYWRtaW5pc3RyYXRpdmVzIGfDqW7DqXJhbGVzIGFwcGxpY2FibGVzIGF1eCBtYXJjaMOpcyBpbmR1c3RyaWVscyAoQ0NBRy9NSSksIGxlcXVlbCBzdGlwdWxlIGVuIHNlcyBhcnRpY2xlcyAzNS0zIGV0IDM2LTIgbGVzIG1vZGFsaXTDqXMgZOKAmWV4w6ljdXRpb24gZXQgZGUgcGFpZW1lbnQgZGUgbWVzdXJlcyBjb25zZXJ2YXRvaXJlcyBkYW5zIGzigJloeXBvdGjDqHNlIGTigJl1bmUgcsOpc2lsaWF0aW9uIGR1IG1hcmNow6nCoDsgcXVlIGxlcyBkw6lwZW5zZXMgcHLDqXN1bcOpZXMgaXJyw6lndWxpw6hyZXMgc2UgcmFwcG9ydGVudCDDoCBkZXMgbWVzdXJlcyBjb25zZXJ2YXRvaXJlcyBkw6ljaWTDqWVzIHN1aXRlIMOgIGRldXggZMOpY2lzaW9ucyBkZSByw6lzaWxpYXRpb24gcGFydGllbGxlIGludGVydmVudWVzIGVuIG1hcnMgMjAwMiBldCBwb3J0w6llcyBkYW5zIHVuIGTDqWNvbXB0ZSBnbG9iYWwgZMOpZmluaXRpZiDDqXRhYmxpIGxlIDkgYXZyaWwgMjAwOcKgOwpBdHRlbmR1IHF1ZSBsZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBwcm9kdWl0ZXMgw6AgbOKAmWFwcHVpIGRlcyBtYW5kYXRzIGxpdGlnaWV1eCBzZXJhaWVudCBjb25mb3JtZXMgw6AgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzIGRlcyBkw6lwZW5zZXMgZGUgbOKAmUV0YXQgcG9ydMOpZSBwYXIgbOKAmWluc3RydWN0aW9uIGNvZGlmaWNhdHJpY2UgbsKwwqAwMy4wNjBCIGR1IDE3IG5vdmVtYnJlIDIwMDPCoDsgcXVlIGNlcyBwacOoY2VzIGNvbXBvcnRlcmFpZW50IG5vdGFtbWVudCB1biBkw6ljb21wdGUgZGUgcsOpc2lsaWF0aW9uIHBhcnRpZWxsZSBhZHJlc3PDqSBhdXggY29jb250cmFjdGFudHMgZGUgbOKAmWFkbWluaXN0cmF0aW9uIGV0IGluY2x1YW50IGxlcyBkw6lwZW5zZXMgcHLDqXN1bcOpZXMgaXJyw6lndWxpw6hyZXPCoDsgcXXigJlhaW5zaSBsZSBjb21wdGFibGUgYSDDqXTDqSBlbiBtZXN1cmUgZGUgY29udHLDtGxlciBsYSByw6lndWxhcml0w6kgZGUgbGEgZMOpcGVuc2UgZXQgZGUgdsOpcmlmaWVyIGzigJlleGFjdGl0dWRlIGRlcyBjYWxjdWxzIGRlIGxpcXVpZGF0aW9uwqA7CkF0dGVuZHUgcXVlIGxlcyByw6lwb25zZXMgZGUgbOKAmWFnZW50IGNvbXB0YWJsZSwgZW5zZW1ibGUgbGVzIHBpw6hjZXMgdmVyc8OpZXMgYXUgZG9zc2llciwgY29uZHVpc2VudCDDoCDDqWNhcnRlciBsYSBwcsOpc29tcHRpb24gZOKAmWlycsOpZ3VsYXJpdMOpIGRlIGxhIGTDqXBlbnNlwqA7CkF0dGVuZHUsIGVuIGVmZmV0LCBxdWUgbGUgbWFyY2jDqSBzdXNtZW50aW9ubsOpIG7CsMKgOTIgODcyMjQgREdBIGluY2x1YWl0IHBhcm1pIHNlcyBwacOoY2VzIGNvbnN0aXR1dGl2ZXMgbGUgQ0NBRy9NSSwgbGVxdWVsIHN0aXB1bGUgZW4gc29uIGFydGljbGUgMzUtMyBxdWUsIGRhbnMgbGUgY2FzIGTigJl1bmUgcsOpc2lsaWF0aW9uLCBsYSBwZXJzb25uZSBwdWJsaXF1ZSBlc3QgZW4gZHJvaXQgZOKAmWV4aWdlciBkdSB0aXR1bGFpcmUgbCdleMOpY3V0aW9uIGRlIG1lc3VyZXMgY29uc2VydmF0b2lyZXMsIG5vdGFtbWVudCBkJ29ww6lyYXRpb25zIGRlIHN0b2NrYWdlIG91IGRlIGdhcmRpZW5uYWdlwqA7CkF0dGVuZHUgcXXigJllbiBs4oCZZXNww6hjZSwgbGUgbWFyY2jDqSBhIMOpdMOpIHBhcnRpZWxsZW1lbnQgcsOpc2lsacOpIHBhciBs4oCZYWRtaW5pc3RyYXRpb24gZW4gbWFycyAyMDAyIGV0IHF1ZSwgcGFybWkgbGVzIG1lc3VyZXMgY29uc2VydmF0b2lyZXMgY29uc8OpY3V0aXZlcyDDoCBsYSByw6lzaWxpYXRpb24gcGFydGllbGxlLCBkZXMgcGFpZW1lbnRzIGRlIDI5McKgODk2wqDigqwgZXQgZGUgMTc1wqA4OTksNjDCoOKCrCBvbnQgw6l0w6kgZWZmZWN0dcOpcyBhdSBwcm9maXQgZGVzIHRpdHVsYWlyZXMgYXUgdGl0cmUgZHUgwqvCoHN1aXZpIHRlY2huaXF1ZSBqdXNxdWUgbGl2cmFpc29uwqDCu8KgOwpBdHRlbmR1IHF1ZSBsZXNkaXRzIHBhaWVtZW50cyBzb250IGFwcHV5w6lzIGRlIHBpw6hjZXMganVzdGlmaWNhdGl2ZXMsIHBhcm1pIGxlc3F1ZWxsZXMgdW5lIGFubmV4ZSBkw6lzaWduYW50IGxlcyBwb3N0ZXMgY29uY2VybsOpcyBwYXIgbGEgZMOpY2lzaW9uIGRlIHLDqXNpbGlhdGlvbiBldCBkYXTDqWUgZHUgMjLCoG1hcnPCoDIwMDIsIGRlcyBsZXR0cmVzIHJlY29tbWFuZMOpZXMgZGVzIDMxIG1hcnMgZXQgOSBhdnJpbCAyMDA5IG5vdGlmaWFudCBsZSBkw6ljb21wdGUgZGUgbGlxdWlkYXRpb24gYXJyw6p0w6kgcGFyIGzigJlhZG1pbmlzdHJhdGlvbiwgYWluc2kgcXVlIGxlIGTDqWNvbXB0ZSBkZSBsaXF1aWRhdGlvbiBkZXMgcG9zdGVzIGNvbmNlcm7DqXMgcGFyIGxhIHLDqXNpbGlhdGlvbiBxdWkgZMOpdGFpbGxlIGxlc2RpdGVzIG1lc3VyZXMgY29uc2VydmF0b2lyZXMsIGluY2x1YW50IGxlIHN1aXZpIHRlY2huaXF1ZSBqdXNxdeKAmcOgIGxhIGxpdnJhaXNvbiwgbGUgc3RvY2thZ2UgZGVzIG1hdMOpcmllbHMgZXQgZGVzIGxvY2F0aW9ucyBwb3VyIGxlIHBlcnNvbm5lbCwgYWluc2kgcXVlIGxlcyBtb250YW50cyBob3JzIHRheGVzIGV0IFRUQyBwb3VyIGNoYWN1biBkZXMgZGV1eCBjb2NvbnRyYWN0YW50c8KgOwpBdHRlbmR1IGFpbnNpIHF1ZSBsZSBjb21wdGFibGUgYSBkaXNwb3PDqSBhdSBtb21lbnQgZGVzIHBhaWVtZW50cyBkZXMgcGnDqGNlcyBqdXN0aWZpY2F0aXZlcyBsdWkgcGVybWV0dGFudCBkZSB2w6lyaWZpZXIgbOKAmWV4YWN0aXR1ZGUgZGVzIGNhbGN1bHMgZGUgbGlxdWlkYXRpb27CoDsgcXVlLCBkZSBtw6ptZSwgbOKAmWFnZW50IGNvbXB0YWJsZSBwb3V2YWl0IHbDqXJpZmllciBsYSBxdWFsaXTDqSBkZSBs4oCZb3Jkb25uYXRldXIsIHB1aXNxdWUgbGVzIHNpZ25hdGFpcmVzIMOpdGFpZW50IHRpdHVsYWlyZXMgZOKAmXVuZSBkw6lsw6lnYXRpb24gZOKAmW9yZG9ubmF0ZXVyIHNlY29uZGFpcmXCoDsKUXUnaWwgbid5IGEgZG9uYyBwYXMgbGlldSDDoCBkw6liZXQgw6AgY2UgdGl0cmUgOwpTdXIgbGEgZGF0ZSBkZSBkw6lwYXJ0IGRlcyBpbnTDqXLDqnRzIGzDqWdhdXgKQXR0ZW5kdSBxdSdpbCBjb252aWVudCBkZSBmaXhlciDDoCBsYSBkYXRlIGRlIG5vdGlmaWNhdGlvbiBkZXMgcsOpcXVpc2l0b2lyZXMgbGUgcG9pbnQgZGUgZMOpcGFydCBkZXMgaW50w6lyw6p0cyBsw6lnYXV4LCBzb2l0IGxlIDMganVpbGxldCAyMDEyIHBvdXIgTW1lIFksIGV0IGxlIDkganVpbGxldCAyMDEyIHBvdXIgTS7CoFg7ClN1ciBsYSByZXByaXNlIGRlcyBzb2xkZXMgZGUgbOKAmWV4ZXJjaWNlIDIwMDkKQXR0ZW5kdSBxdWUgbGEgcmVwcmlzZSBkZXMgc29sZGVzIGRlIGzigJlleGVyY2ljZSAyMDA5IGVuIGJhbGFuY2UgZOKAmWVudHLDqWUgZGUgbOKAmWV4ZXJjaWNlIDIwMTAgbuKAmWEgcGFzIMOpdMOpIHbDqXJpZmnDqWUsIE0uwqBaIG5lIHBldXQgw6p0cmUgZMOpY2hhcmfDqSBkZSBzYSBnZXN0aW9uIGF1IHRpdHJlIGRlwqBs4oCZZXhlcmNpY2XCoDIwMDnCoDsKUGFyIGNlcyBtb3RpZnMsCk9SRE9OTkUgOgpBcnRpY2xlIDFlci7CoOKAk8KgTS7CoFggZXN0IGNvbnN0aXR1w6kgZMOpYml0ZXVyIGRlcyBkZW5pZXJzIGRlIGwnw4l0YXQgcG91ciB1biBtb250YW50IGRlIDEzwqA4NTcsMDDCoOKCrCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwNiAoYWZmw6lyZW50IMOgIGxhIGNoYXJnZSBuwrDCoDIpLgpBcnRpY2xlIDIuwqDigJPCoE0uwqBYIGVzdCBjb25zdGl0dcOpIGTDqWJpdGV1ciBkZXMgZGVuaWVycyBkZSBsJ8OJdGF0IHBvdXIgdW4gbW9udGFudCBkZSA3wqA0ODAsNjDCoOKCrCBhdSB0aXRyZSBkZSBs4oCZZXhlcmNpY2UgMjAwOCAoYWZmw6lyZW50IMOgIGxhIGNoYXJnZSBuwrDCoDIpLgpBcnRpY2xlIDMuwqDigJPCoE0uwqBYIGVzdCBjb25zdGl0dcOpIGTDqWJpdGV1ciBkZXMgZGVuaWVycyBkZSBsJ8OJdGF0IHBvdXIgdW4gbW9udGFudCBkZSA4OMKgNTAwwqDigqwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDkgKGFmZsOpcmVudCDDoCBsYSBjaGFyZ2UgbsKwwqAyKS4KQXJ0aWNsZSA0LsKg4oCTwqBNbWUgWSBlc3QgY29uc3RpdHXDqWUgZMOpYml0cmljZSBkZXMgZGVuaWVycyBkZSBsJ8OJdGF0IHBvdXIgdW4gbW9udGFudCBkZSAxNMKgNDAwwqDigqwgYXUgdGl0cmUgZGUgbOKAmWV4ZXJjaWNlIDIwMDkgKGFmZsOpcmVudCDDoCBsYSBjaGFyZ2UgbsKwwqA1KS4KQXJ0aWNsZSA1LsKg4oCTwqBMZXMgZMOpYmV0cyBzdXNtZW50aW9ubsOpcyBwb3J0ZW50IGludMOpcsOqdCDDoCBjb21wdGVyIGR1IDMganVpbGxldCAyMDEyIHBvdXIgTW1lIFksIGV0IGR1IDkganVpbGxldCAyMDEyIHBvdXIgTS7CoFguCkFydGljbGUgNi7CoOKAk8KgSWwgbid5IGEgcGFzIGxpZXUgw6AgZMOpYmV0IGVuIGNlIHF1aSBjb25jZXJuZSBsZXMgYXV0cmVzIHByw6lzb21wdGlvbnMgZGUgY2hhcmdlIGV4cG9zw6llcyBkYW5zIGxlIHLDqXF1aXNpdG9pcmUuCi0tLS0tLS0tLS0tLS0tLQoKRmFpdCBldCBqdWfDqSBlbiBsYSBDb3VyIGRlcyBjb21wdGVzLCBkZXV4acOobWUgY2hhbWJyZSwgcHJlbWnDqHJlIHNlY3Rpb24sIGxlIGRvdXplIGTDqWNlbWJyZSBkZXV4IG1pbCBkb3V6ZS4gUHLDqXNlbnRzIDogTS7CoExldnksIHByw6lzaWRlbnQgZGUgY2hhbWJyZSwgcHLDqXNpZGFudCBsYSBzw6lhbmNlLCBNTS7CoFLDqW1vbmQsIFBhdWwsIE1tZSBTYWxpb3UsIE1NLsKgVml2ZXQsIEd1aWxsb3QgZXQgRG9ycywgY29uc2VpbGxlcnMgbWHDrnRyZXMuClNpZ27DqTogTGV2eSwgcHLDqXNpZGVudCBkZSBzZWN0aW9uLCBldCBMZSBCYXJvbiwgZ3JlZmZpZXIuCkNvbGxhdGlvbm7DqSwgY2VydGlmacOpIGNvbmZvcm1lIMOgIGxhIG1pbnV0ZSDDqXRhbnQgYXUgZ3JlZmZlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMuCkVuIGNvbnPDqXF1ZW5jZSwgbGEgUsOpcHVibGlxdWUgZnJhbsOnYWlzZSBtYW5kZSBldCBvcmRvbm5lIMOgIHRvdXMgaHVpc3NpZXJzIGRlIGp1c3RpY2UsIHN1ciBjZSByZXF1aXMsIGRlIG1ldHRyZSBsZWRpdCBhcnLDqnQgw6AgZXjDqWN1dGlvbiwgYXV4IHByb2N1cmV1cnMgZ8OpbsOpcmF1eCBldCBhdXggcHJvY3VyZXVycyBkZSBsYSBSw6lwdWJsaXF1ZSBwcsOocyBsZXMgdHJpYnVuYXV4IGRlIGdyYW5kZSBpbnN0YW5jZSBkJ3kgdGVuaXIgbGEgbWFpbiwgw6AgdG91cyBjb21tYW5kYW50cyBldCBvZmZpY2llcnMgZGUgbGEgZm9yY2UgcHVibGlxdWUgZGUgcHLDqnRlciBtYWluLWZvcnRlIGxvcnNxdSdpbHMgZW4gc2Vyb250IGzDqWdhbGVtZW50IHJlcXVpcy4KRMOpbGl2csOpIHBhciBtb2ksIHNlY3LDqXRhaXJlIGfDqW7DqXJhbC4KUG91ciBsZSBTZWNyw6l0YWlyZSBnw6luw6lyYWwKZXQgcGFyIGTDqWzDqWdhdGlvbiwKTGUgQ2hlZiBkdSBncmVmZmUgY29udGVudGlldXgKRGFuaWVsIEZFUkVaCg==</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131254">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131254</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65828</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme DEMIER, Conseillère maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. VERMEULEN, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>13/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">17/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Office public de l'habitat (OPH) de Bobigny (Seine-Saint-Denis). Appel d'un jugement de la chambre régionale des comptes d'Ile-de-France.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 23.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Office public de l'habitat</DESCRIPTEUR>
<DESCRIPTEUR>Créance</DESCRIPTEUR>
<DESCRIPTEUR>Recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Prescription</DESCRIPTEUR>
<DESCRIPTEUR>Réserve</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un comptable constitué en débet pour avoir laissé se prescrire une créance prise en charge faisait valoir, en appel, que le délai dont il disposait pour formuler ses réserves après sa prise de poste n'était pas expiré quand la créance s'était trouvée prescrite. La Cour a jugé que, si la responsabilité d'un comptable n'était pas susceptible d'être engagée lorsque la prescription d'un titre de recettes survenait dans les premières semaines qui suivent son installation, il en allait différemment lorsque, comme en l'espèce, la prescription était postérieure de onze mois à la passation de services. Estimant que des diligences auraient pu être effectuées par le comptable entrant, la Cour a rejeté l'appel et confirmé le débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'absence de caractère exonératoire, pour le comptable entrant, du défaut de diligences de son prédécesseur, dès lors qu'existaient des possibilités de préservation de la validité de la créance, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 24 juin 2004, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Tende&lt;/I&gt;, Recueil 2004, p. 85. Sur la prise en compte, par le juge financier, des possibilités matérielles de recouvrement des titres au moment de la remise de service, notamment le désordre du poste comptable, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 4 juillet 1996, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Lorgues&lt;/I&gt;, Recueil 1996, p. 75.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131254.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">ICBDT1VSIERFUyBDT01QVEVTCiAgICAgICAgICAgICAgIC0tLS0tLS0KUVVBVFJJRU1FIENIQU1CUkUKICAgICAgICAgICAgICAgLS0tLS0tLQogIFBSRU1JRVJFIFNFQ1RJT04KICAgICAgICAgICAgICAgLS0tLS0tLQogICAgICAgICAgQXJyw6p0IG7CsCA2NTgyOAoKb2ZmaWNlIHB1YmxpYyBkZSBs4oCZaGFiaXRhdCAoT1BIKQpkZSBib2JpZ255IChzZWluZS1zYWludC1kZW5pcykKCkFwcGVsIGTigJl1biBqdWdlbWVudCBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZOKAmcOObGUtZGUtRnJhbmNlIAoKUmFwcG9ydCBuwrAgMjAxMi02NTgtMAoKQXVkaWVuY2UgcHVibGlxdWUgZXQgZMOpbGliw6lyw6kgCmR1IDEzIGTDqWNlbWJyZSAyMDEyCgpMZWN0dXJlIHB1YmxpcXVlIGR1IDE3IGphbnZpZXIgMjAxMwoKCgoKTEEgQ09VUiBERVMgQ09NUFRFUyBhIHJlbmR1IGzigJlhcnLDqnQgc3VpdmFudMKgOgpMQSBDT1VSLApWdSBsYSByZXF1w6p0ZSwgZW5yZWdpc3Ryw6llIGxlIDMgYW/Du3QgMjAxMiBhdSBncmVmZmUgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGTigJnDjmxlLWRlLUZyYW5jZSwgcGFyIGxhcXVlbGxlIE1tZSBYLCBjb21wdGFibGUgZGUgbOKAmU9mZmljZSBwdWJsaWMgZGUgbOKAmWhhYml0YXQgKE9QSCkgZGUgQm9iaWdueSBwb3VyIGxlcyBleGVyY2ljZXMgMjAwNSDDoCAyMDA4LCBhIMOpbGV2w6kgYXBwZWwgZHUganVnZW1lbnQgbsKwwqAxMi0wMDE3wqBKIGR1IDE5IGp1aW4gMjAxMiBwYXIgbGVxdWVsIGxhZGl0ZSBjaGFtYnJlIGzigJlhIGNvbnN0aXR1w6llIGTDqWJpdHJpY2UgZGVzIGRlbmllcnMgZGUgY2V0IE9QSCBwb3VyIGxhIHNvbW1lIGRlIDPCoDQwMywxMsKg4oKsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgOwpWdSBsZSByw6lxdWlzaXRvaXJlIG7CsMKgMjAxMi01OSBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsLCBkdSAyMCBzZXB0ZW1icmUgMjAxMiwgdHJhbnNtZXR0YW50IMOgIGxhIENvdXIgbGEgcmVxdcOqdGUgcHLDqWNpdMOpZcKgOwpWdSBsZXMgcGnDqGNlcyBkZSBsYSBwcm9jw6lkdXJlIHN1aXZpZSBlbiBwcmVtacOocmUgaW5zdGFuY2UgOwpWdSBsZSBjb2RlIGfDqW7DqXJhbCBkZXMgY29sbGVjdGl2aXTDqXMgdGVycml0b3JpYWxlcyA7ClZ1IGzigJlhcnRpY2xlIDYwIGRlIGxhIGxvaSBkZSBmaW5hbmNlcyBuwrAgNjMtMTU2IGR1IDIzIGbDqXZyaWVyIDE5NjMgbW9kaWZpw6llIDsKVnUgbGUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjkgZMOpY2VtYnJlIDE5NjIgbW9kaWZpw6kgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgZW4gdmlndWV1ciDDoCBs4oCZw6lwb3F1ZSBkZXMgZmFpdHPCoDsKCgoKVnUgbGUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlc8KgOwpWdSBsZSByYXBwb3J0IGRlIE1tZSBDYXRoZXJpbmUgRMOpbWllciwgY29uc2VpbGzDqHJlIG1hw650cmXCoDsKVnUgbGVzIGNvbmNsdXNpb25zIGR1IFByb2N1cmV1ciBnw6luw6lyYWwgZHUgNiBkw6ljZW1icmUgMjAxMiA7CkVudGVuZHVzLCBsb3JzIGRlIGzigJlhdWRpZW5jZSBwdWJsaXF1ZSBkZSBjZSBqb3VyLCBNbWUgRMOpbWllciwgZW4gc29uIHJhcHBvcnQsIE0uwqBWaW5jZW50IEZlbGxlciwgYXZvY2F0IGfDqW7DqXJhbCwgZW4gbGVzIGNvbmNsdXNpb25zIGR1IHBhcnF1ZXQsIGzigJlhcHBlbGFudGUsIGluZm9ybcOpZSBkZSBs4oCZYXVkaWVuY2UsIG7igJnDqXRhbnQsIG5pIHByw6lzZW50ZSwgbmkgcmVwcsOpc2VudMOpZcKgOwpBcHLDqHMgYXZvaXIgZW50ZW5kdSwgZW4gZMOpbGliw6lyw6ksIE0uIFBhdHJpY2UgVmVybWV1bGVuLCBjb25zZWlsbGVyIG1hw650cmUsIGVuIHNlcyBvYnNlcnZhdGlvbnPCoDsKQXR0ZW5kdSBxdWUsIHBhciBqdWdlbWVudCBuwrDCoDEyLTAwMTfCoEogZHUgMTnCoGp1aW7CoDIwMTIsIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBk4oCZw45sZS1kZS1GcmFuY2UgYSBjb25zdGl0dcOpIE1tZSBYLCBhZ2VudCBjb21wdGFibGUsIGTDqWJpdHJpY2UgZGUgbOKAmU9QSCBkZSBCb2JpZ255IGRlIGxhIHNvbW1lIGRlIDPCoDQwMywxMsKg4oKsIHBvdXIgYXZvaXIgbGFpc3PDqSwgZmF1dGUgZGUgZGlsaWdlbmNlcywgc2UgcHJlc2NyaXJlIHVuZSBjcsOpYW5jZSA7CkF0dGVuZHUgcXVlIGzigJlhcHBlbGFudGUgZmFpdCB2YWxvaXIgcXVlIGNldHRlIGNyw6lhbmNlIHPigJllc3QgdHJvdXbDqWUgcHJlc2NyaXRlIGF2YW50IHF1ZSBsZSBkw6lsYWksIGZpeMOpIGF1IDMxIGTDqWNlbWJyZSAyMDA1LCBkb250IGVsbGUgZGlzcG9zYWl0IHBvdXIgZm9ybXVsZXIgc2VzIHLDqXNlcnZlcyDDoCBs4oCZZW5jb250cmUgZGUgbGEgZ2VzdGlvbiBkZSBzZXMgcHLDqWTDqWNlc3NldXJzLCBhaXQgZXhwaXLDqcKgOyBxdeKAmWFpbnNpIHNhIHJlc3BvbnNhYmlsaXTDqSBuZSBzYXVyYWl0IMOqdHJlIGVuZ2Fnw6llIGR1IGZhaXQgZHUgY2FyYWN0w6hyZSBkw6lmaW5pdGl2ZW1lbnQgaXJyw6ljb3V2cmFibGUgZGUgbGFkaXRlIGNyw6lhbmNlIGludGVydmVudSBsZSA0IGTDqWNlbWJyZSAyMDA1IDsKQ29uc2lkw6lyYW50IHF1ZSBsZSBjb21wdGFibGUgZW50cmFudCBu4oCZZXN0IHBhcyBleG9uw6lyw6kgZGUgc2VzIHJlc3BvbnNhYmlsaXTDqXMgZHUgc2V1bCBmYWl0IHF14oCZaWwgYSDDqW1pcyBvdSBxdeKAmWlsIHNlIHByb3Bvc2UgZOKAmcOpbWV0dHJlIGRlcyByw6lzZXJ2ZXMgc3VyIGxhIGdlc3Rpb24gZGUgc29uIHByw6lkw6ljZXNzZXVywqA7IHF1ZSBzaSBsZSBjb21wdGFibGUgZW50cmFudCBu4oCZZXN0IHBhcyBzdXNjZXB0aWJsZSBk4oCZYXZvaXIgw6AgcsOpcG9uZHJlIGRlIGxhIHByZXNjcmlwdGlvbiBk4oCZdW4gdGl0cmUgcXVpIHN1cnZpZW50IGRhbnMgbGVzIHByZW1pw6hyZXMgc2VtYWluZXMgcXVpIHN1aXQgc29uIGluc3RhbGxhdGlvbiwgbGUgZMOpZmF1dCBkZSBkaWxpZ2VuY2UgZGUgc29uIHByw6lkw6ljZXNzZXVyIG5lIGNvbnN0aXR1ZSBwYXMgw6AgbHVpIHNldWwgdW5lIGNpcmNvbnN0YW5jZSBleG9uw6lyYXRvaXJlIGRlIHNhIHByb3ByZSByZXNwb25zYWJpbGl0w6ksIGTDqHMgbG9ycyBxdeKAmWV4aXN0ZW50IGRlcyBwb3NzaWJpbGl0w6lzIGRlIHByw6lzZXJ2YXRpb24gZGUgbGEgdmFsaWRpdMOpIGRlIGxhIGNyw6lhbmNlLCBpbmTDqXBlbmRhbW1lbnQgZGUgbGEgZm9ybXVsYXRpb24gZGUgcsOpc2VydmVzwqA7CkNvbnNpZMOpcmFudCBxdWUgbGEgcHJlc2NyaXB0aW9uIGRlIGxhIGNyw6lhbmNlIGVuIGNhdXNlIMOpdGFpdCBwb3N0w6lyaWV1cmUgZGUgb256ZSBtb2lzIMOgIGxhIGRhdGUgZGUgcGFzc2F0aW9uIGRlIHNlcnZpY2VzwqA7IHF1ZSBsYWRpdGUgY3LDqWFuY2UgcGVybWV0dGFpdCBk4oCZaWRlbnRpZmllciBsZSBkw6liaXRldXIsIHNvbiBhZHJlc3NlLCBsZSBtb250YW50IGVuIGNhdXNlwqA7IHF1ZSBs4oCZYWdlbnQgY29tcHRhYmxlIMOpdGFpdCBlbiBtZXN1cmUgZGUgZMOpdGVybWluZXIgbGEgZGF0ZSBkZSBwcmVzY3JpcHRpb27CoDsKQ29uc2lkw6lyYW50IHF1ZSBsZSBkw6lzb3JkcmUgZHUgcG9zdGUgbuKAmcOpdGFpdCBwYXMgdGVsIHF1ZSBNbWUgWCBuZSBwdWlzc2UgZXhlcmNlciBlbnRyZSBsZSAxZXLCoGphbnZpZXLCoDIwMDUsIGRhdGUgZGUgc2EgcHJpc2UgZGUgZm9uY3Rpb24gZXQgbGUgNcKgZMOpY2VtYnJlwqAyMDA1LCBkYXRlIGRlIGxhIHByZXNjcmlwdGlvbiBkZSBsYSBjcsOpYW5jZSwgbOKAmXVuZSBkZXMgZGlsaWdlbmNlcyBxdWkgYXVyYWl0IHByw6lzZXJ2w6kgbGEgdmFsaWRpdMOpIGRlIGxhIGNyw6lhbmNlwqA7IHF1ZSBjZSBjb25zdGF0IGVzdCBhdHRlc3TDqSBwYXIgbGUgZmFpdCBxdWUgbOKAmWludMOpcmVzc8OpZSBhIG1lbsOpIGRlcyBkaWxpZ2VuY2VzIGludGVycm9tcGFudCBsYSBwcmVzY3JpcHRpb24gcG91ciBkZXMgY3LDqWFuY2VzIGNvbXBhcmFibGVzwqA7CgpQYXIgY2VzIG1vdGlmcywKREVDSURFwqA6CkFydGljbGUgdW5pcXVlIOKAkyBMYSByZXF1w6p0ZSBkZSBNbWUgWCBlc3QgcmVqZXTDqWUuCi0tLS0tLS0tLS0tLQpGYWl0IGV0IGp1Z8OpIMOgIGxhIENvdXIgZGVzIGNvbXB0ZXMsIHF1YXRyacOobWUgY2hhbWJyZSwgcHJlbWnDqHJlIHNlY3Rpb24uIFByw6lzZW50c8KgOsKgTU0uwqBCYXlsZSwgcHLDqXNpZGVudCwgTGFmYXVyZSwgVmVybWV1bGVuLCBNbWUgR2FkcmlvdC1SZW5hcmQsIGV0wqBNLsKgR2VvZmZyb3ksIGNvbnNlaWxsZXJzIG1hw650cmVzLgpTaWduw6nCoDogQmF5bGUsIHByw6lzaWRlbnQsIGV0IExlIEJhcm9uLCBncmVmZmllci4KQ29sbGF0aW9ubsOpLCBjZXJ0aWZpw6kgY29uZm9ybWUgw6AgbGEgbWludXRlIMOpdGFudCBhdSBncmVmZmUgZGUgbGEgQ291ciBkZXMgY29tcHRlcyBldCBkw6lsaXZyw6kgcGFyIG1vaSwgc2VjcsOpdGFpcmUgZ8OpbsOpcmFsLgpQb3VyIGxlIFNlY3LDqXRhaXJlIGfDqW7DqXJhbApldCBwYXIgZMOpbMOpZ2F0aW9uLApsZSBDaGVmIGR1IGdyZWZmZSBjb250ZW50aWV1eAoKCgoKCgoKRGFuaWVsIEZFUkVaCg==</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131251">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131251</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65696</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LEGER, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>13/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">17/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Lycée d'enseignement général et technologique (LEGT) Jean-Baptiste Darnet à Saint-Yrieix-la-Perche (Haute-Vienne) - Appel d'un jugement de la chambre régionale des comptes du Limousin.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131251.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131249">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131249</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65634</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme BOUTEREAU-TICHET, Conseillère référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme DEMIER, Conseillère maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>13/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">17/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Centre communal d'action sociale (CCAS) de la commune de Saint-Denis de La Réunion (974) - Appel d'un jugement de la chambre régionale des comptes de La Réunion.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Décharge</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131249.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">ICBDT1VSIERFUyBDT01QVEVTCiAgICAgICAgICAgICAgIC0tLS0tLS0tClFVQVRSSUVNRSBDSEFNQlJFCiAgICAgICAgICAgICAgIC0tLS0tLS0tCiAgUFJFTUlFUkUgU0VDVElPTgogICAgICAgICAgICAgICAtLS0tLS0tLQpBcnLDqnQgbsKwIDY1NjM0CgpjZW50cmUgQ09NTVVOQUwgZOKAmWFjdGlvbiBzb2NpYWxlIChDQ0FTKSBkZSBsYSBjb21tdW5lIApkZSBTYWludC1EZW5pcyBkZSBsYSBSw6l1bmlvbiAoOTc0KQoKCkFwcGVsIGTigJl1biBqdWdlbWVudCBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgbGEgUsOpdW5pb24KClJhcHBvcnQgbsKwIDIwMTItNjY2LTAKCkF1ZGllbmNlIHB1YmxpcXVlIGR1IDEzIGTDqWNlbWJyZSAyMDEyCgpMZWN0dXJlIHB1YmxpcXVlIGR1IDE3IGphbnZpZXIgMjAxMwoKTEEgQ09VUiBERVMgQ09NUFRFUyBhIHJlbmR1IGzigJlhcnLDqnQgc3VpdmFudMKgOgpMQSBDT1VSLApWdSBsYSByZXF1w6p0ZSwgZW5yZWdpc3Ryw6llIGxlIDIwIHNlcHRlbWJyZSAyMDEwIGF1IGdyZWZmZSBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgbGEgUsOpdW5pb24sIHBhciBsYXF1ZWxsZSBNLsKgWCwgY29tcHRhYmxlIGR1IGNlbnRyZSBjb21tdW5hbCBk4oCZYWN0aW9uIHNvY2lhbGUgKENDQVMpIGRlIGxhIGNvbW11bmUgZGUgU2FpbnQtRGVuaXMgREUgTEEgUkVVTklPTiwgYSDDqWxldsOpIGFwcGVsIGR1IGp1Z2VtZW50IG7CsMKgMjAwOS01Ni8yIGR1IDE1wqBqdWluIDIwMTAgcGFyIGxlcXVlbCBsYWRpdGUgY2hhbWJyZSBs4oCZYSBjb25zdGl0dcOpIGTDqWJpdGV1ciBkZXMgZGVuaWVycyBkdWRpdCBDQ0FTIHBvdXIgbGEgc29tbWUgdG90YWxlIGRlIDEwMcKgMTQzLDkxwqDigqwgYXVnbWVudMOpZSBkZXMgaW50w6lyw6p0cyBkZSBkcm9pdCA7ClZ1IGxlIG3DqW1vaXJlIGVuIGTDqWZlbnNlIGR1IFByb2N1cmV1ciBmaW5hbmNpZXIgcHLDqHMgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIGxhIFLDqXVuaW9uIGVuIGRhdGUgZHUgNiBvY3RvYnJlIDIwMTDCoDsKVnUgbGUgcsOpcXVpc2l0b2lyZSBuwrDCoDIwMTAtOTQgZHUgUHJvY3VyZXVyIGfDqW7DqXJhbCBlbiBkYXRlIGR1IDE0IGTDqWNlbWJyZSAyMDEwLCB0cmFuc21ldHRhbnQgbGEgcmVxdcOqdGUgcHLDqWNpdMOpZcKgOwpWdSBsZXMgcGnDqGNlcyBkZSBsYSBwcm9jw6lkdXJlIHN1aXZpZSBlbiBwcmVtacOocmUgaW5zdGFuY2UgOwpWdSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZGUgZmluYW5jZXMgbsKwwqA2My0xNTYgZHUgMjMgZsOpdnJpZXIgMTk2MyBtb2RpZmnDqWUgOwoKCgoKVnUgbGUgZMOpY3JldCBuwrDCoDYyLTE1ODcgZHUgMjkgZMOpY2VtYnJlIDE5NjIgbW9kaWZpw6kgcG9ydGFudCByw6hnbGVtZW50IGfDqW7DqXJhbCBzdXIgbGEgY29tcHRhYmlsaXTDqSBwdWJsaXF1ZSwgZW4gdmlndWV1ciBhdSBtb21lbnQgZGVzIGZhaXRzwqA7ClZ1IGxlIGNvZGUgZGVzIGp1cmlkaWN0aW9ucyBmaW5hbmNpw6hyZXPCoDsKVnUgbGUgcmFwcG9ydCBkZSBNbWUgU3lsdmllIEJvdXRlcmVhdS1UaWNoZXQsIGNvbnNlaWxsw6hyZSByw6lmw6lyZW5kYWlyZcKgOwpWdSBsZXMgY29uY2x1c2lvbnMgbsKwwqA3NDggZHUgUHJvY3VyZXVyIGfDqW7DqXJhbCBlbiBkYXRlIGR1IDI1IG9jdG9icmUgMjAxMsKgOwpFbnRlbmR1LCBsb3JzIGRlIGzigJlhdWRpZW5jZSBwdWJsaXF1ZSBkZSBjZSBqb3VyLCBNbWUgU3lsdmllIEJvdXRlcmVhdS1UaWNoZXQsIGVuIHNvbiByYXBwb3J0LCBNLiBWaW5jZW50IEZlbGxlciwgYXZvY2F0IGfDqW7DqXJhbCwgZW4gbGVzIGNvbmNsdXNpb25zIGR1IFBhcnF1ZXQsIGzigJlhcHBlbGFudCwgaW5mb3Jtw6kgZGUgbOKAmWF1ZGllbmNlLCBu4oCZw6l0YW50IG5pIHByw6lzZW50IG5pIHJlcHLDqXNlbnTDqSA7CkFwcsOocyBhdm9pciBlbnRlbmR1LCBlbiBkw6lsaWLDqXLDqSwgTW1lIENhdGhlcmluZSBEw6ltaWVyLCBjb25zZWlsbMOocmUgbWHDrnRyZSwgZW4gc2VzIG9ic2VydmF0aW9uc8KgOwpTdXIgbGEgZm9ybWUKQXR0ZW5kdSBxdWUgbGEgcmVxdcOqdGUgYSDDqXTDqSBwcm9kdWl0ZSBzYW5zIMOqdHJlIGFwcHV5w6llIGR1IGp1Z2VtZW50IGF0dGFxdcOpLCBjb250cmFpcmVtZW50IGF1eCBwcmVzY3JpcHRpb25zIGRlIGzigJlhcnRpY2xlIFIuwqAyNDMtNCBkdSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzwqA7Ck1haXMsIGF0dGVuZHUgcXVlIGxlZGl0IGFydGljbGUgbmUgc2FuY3Rpb25uZSBwYXMgZXhwcmVzc8OpbWVudCBs4oCZaW5vYnNlcnZhdGlvbiBkZSBjZXR0ZSBwcmVzY3JpcHRpb24gcGFyIGzigJlpcnJlY2V2YWJpbGl0w6kgZGUgbGEgcmVxdcOqdGXCoDsgcXXigJlhaW5zaSBjZWxsZS1jaSBlc3QgcmVjZXZhYmxlwqA7ClN1ciBsZSBmb25kCkF0dGVuZHUgcXVlLCBwYXIganVnZW1lbnQgZHUgMTUganVpbiAyMDEwIHByw6ljaXTDqSwgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIGxhIFLDqXVuaW9uIGEgZMOpY2xhcsOpIE0uIFggZMOpYml0ZXVyIGR1IENDQVMgZGUgbGEgY29tbXVuZSBkZSBTYWludC1EZW5pcywgYXUgbW90aWYgcXVlIGzigJlhYnNlbmNlIGRlIHBvdXJzdWl0ZXMgZGUgbmF0dXJlIMOgIGludGVycm9tcHJlIGxhIHByZXNjcmlwdGlvbiBkZXMgY3LDqWFuY2VzIMOgIGzigJllbmNvbnRyZSBkZSBsYSBjb21tdW5lIGRlIFNhaW50LURlbmlzIGV0IGR1IENOQVNFQSBhIG1hbmlmZXN0ZW1lbnQgY29tcHJvbWlzIGxlIHJlY291dnJlbWVudCBkZXMgdGl0cmVzIGRlIHJlY2V0dGVzIG7CsMKgMTMgZGUgOMKgNDMzLDA1wqDigqwgKGNvbW11bmUgZGUgU2FpbnQtRGVuaXMpLCBuwrDCoDE4NyBkZSA3McKgMzQwLDc4wqDigqwgKENOQVNFQSkgZXQgbsKwwqAxODggZGUgMjHCoDM3MCwwOMKg4oKsIChDTkFTRUEpLCBwcmlzIGVuIGNoYXJnZSBhdSBjb3VycyBkZSBs4oCZZXhlcmNpY2UgMjAwMMKgOwpBdHRlbmR1IHF1ZSBsZXMgdGl0cmVzIGRlIHJlY2V0dGVzLCDDqW1pcyBkdXJhbnQgbOKAmWV4ZXJjaWNlIDIwMDAsIG9udCDDqXTDqSBwcmlzIGVuIGNoYXJnZSBwYXIgbGUgcHLDqWTDqWNlc3NldXIgZGUgTS7CoFggcXVpIG7igJllc3QgZW50csOpIGVuIGZvbmN0aW9uIHF1ZSBsZSAyNcKgZMOpY2VtYnJlwqAyMDAzwqA7IHF1ZSBsZSBjb250csO0bGUgZGUgbOKAmWF1dG9yaXNhdGlvbiBkZSBwZXJjZXZvaXIgbGEgcmVjZXR0ZSBu4oCZaW5jb21iYWl0IHBhcyBhdSBjb21wdGFibGUgYXBwZWxhbnQsIG1haXMgw6Agc29uIHByw6lkw6ljZXNzZXVywqA7IHF14oCZYWluc2kgbOKAmW9ic2VydmF0aW9uIGR1IFByb2N1cmV1ciBmaW5hbmNpZXIgZGFucyBzb24gbcOpbW9pcmUgbuKAmWVzdCBwYXMgZm9uZMOpZcKgOwpBdHRlbmR1IHF1ZSBs4oCZYXBwZWxhbnQgbuKAmWEgZm9ybXVsw6kgYXVjdW5lIHLDqXNlcnZlIGxvcnMgZGUgc2EgcHJpc2UgZGUgZm9uY3Rpb24gOyBxdeKAmcOgIGTDqWZhdXQsIGlsIGFzc3VtZSBzZXVsIGxhIHJlc3BvbnNhYmlsaXTDqSBkZXMgb3DDqXJhdGlvbnMgZGUgcmVjb3V2cmVtZW50IHByaXNlcyBlbiBjaGFyZ2UsIHNhdWYgw6AgYXBwb3J0ZXIgbGEgcHJldXZlIHF14oCZw6Agc29uIGVudHLDqWUgZW4gZm9uY3Rpb24sIGxlcyBjcsOpYW5jZXMgw6l0YWllbnQgaXJyw6ljb3V2cmFibGVzIG91IGTDqWrDoCBwcmVzY3JpdGVzwqA7ClF1ZSBj4oCZZXN0IMOgIGJvbiBkcm9pdCBxdWUgbGUganVnZW1lbnQgZG9udCBlc3QgYXBwZWwgYSBlbmdhZ8OpIGxhIHJlc3BvbnNhYmlsaXTDqSBkZSBNLsKgWCwgZmF1dGUgcG91ciBjZWx1aS1jaSBkZSBu4oCZYXZvaXIgcHJvZHVpdCBlbiBwcmVtacOocmUgaW5zdGFuY2UgbGVzIGRvY3VtZW50cyBkw6lnYWdlYW50IHNhIHJlc3BvbnNhYmlsaXTDqcKgOwpBdHRlbmR1IHF1ZSwgZGFucyBzYSByZXF1w6p0ZSwgbOKAmWFwcGVsYW50IGludm9xdWUgdW4gbW95ZW4gbm91dmVhdSwgY2VsdWkgZGUgbOKAmWlycsOpY291dnJhYmlsaXTDqSBkZSBsYSBjcsOpYW5jZcKgOwpBdHRlbmR1IHF1ZSBNLsKgWCBhcHB1aWUgc29uIGFwcGVsIGTigJl1biBtYW5kYXQgZGUgbOKAmW9yZG9ubmF0ZXVyIGFubnVsYW50IGxlIHRpdHJlIGxpdGlnaWV1eMKgOyBxdWUgY2UgbWFuZGF0IGVzdCBhY2NvbXBhZ27DqSBkZXMgcGnDqGNlcyBhdHRlc3RhbnQgZGUgc2EgdmFsaWRpdMOpLCBub3RhbW1lbnQgbGVzIGNvcGllcyBkZSBjZXJ0aWZpY2F0cyBhZG1pbmlzdHJhdGlmcywgZGF0w6lzIGR1IDMxwqBhb8O7dMKgMjAxMCBldCBzaWduw6lzIGR1IHByw6lzaWRlbnQgZHUgQ0NBUywgY2VydGlmaWFudCBxdWUgbGVzIHByb2R1aXRzIGF2YWllbnQgZMOpasOgIMOpdMOpIHJlY291dnLDqXPCoDsgcXVlLCBtw6ptZSB0YXJkaWZzLCBjZXMgZG9jdW1lbnRzIGFtw6huZW50IMOgIGNvbnNpZMOpcmVyIHF1ZSBsYSBjcsOpYW5jZSBuZSBwb3V2YWl0IMOqdHJlIHJlY291dnLDqWXCoDsgCkF0dGVuZHUsIGTDqHMgbG9ycywgcXVlIGxhIGNyw6lhbmNlIGVzdCByw6lwdXTDqWUgbuKAmWF2b2lyIGphbWFpcyBleGlzdMOpwqA7IHF1ZSBsZSBkw6liZXQgcG91ciBkw6lmYXV0IGRlIHJlY291dnJlbWVudCBkZSBsYWRpdGUgY3LDqWFuY2UgZXN0IGFpbnNpIGTDqXBvdXJ2dSBkZSBmb25kZW1lbnQgOyBxdeKAmWlsIGNvbnZpZW50LCBlbiBjb25zw6lxdWVuY2UsIGTigJlpbmZpcm1lciBsZSBqdWdlbWVudCBlbnRyZXByaXPCoDsKUGFyIGNlcyBtb3RpZnMsCk9SRE9OTkXCoDoKTGUganVnZW1lbnQgbsKwwqAyMDA5LTU2LzIgZHUgMTXCoGp1aW7CoDIwMTAgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIGxhIFLDqXVuaW9uIGVzdCBpbmZpcm3DqS4KLS0tLS0tLS0tLQpGYWl0IGV0IGp1Z8OpIGVuIGxhIENvdXIgZGVzIGNvbXB0ZXMsIHF1YXRyacOobWUgY2hhbWJyZSwgcHJlbWnDqHJlIHNlY3Rpb24uIFByw6lzZW50c8KgOiBNLsKgQmF5bGUsIHByw6lzaWRlbnQsIE1NLsKgTGFmYXVyZSwgVmVybWV1bGVuLCBNbWVzIEdhZHJpb3QtUmVuYXJkLCBEw6ltaWVyIGV0IE0uwqBHZW9mZnJveSwgY29uc2VpbGxlcnMgbWHDrnRyZXMuClNpZ27DqcKgOiBCYXlsZSwgcHLDqXNpZGVudCwgZXQgTGUgQmFyb24sIGdyZWZmaWVyLgpDb2xsYXRpb25uw6ksIGNlcnRpZmnDqSBjb25mb3JtZSDDoCBsYSBtaW51dGUgw6l0YW50IGF1IGdyZWZmZSBkZSBsYSBDb3VyIGRlcyBjb21wdGVzIGV0IGTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuClBvdXIgbGUgU2VjcsOpdGFpcmUgZ8OpbsOpcmFsCmV0IHBhciBkw6lsw6lnYXRpb24sCmxlIENoZWYgZHUgZ3JlZmZlIGNvbnRlbnRpZXV4CgoKCgoKCkRhbmllbCBGRVJFWgoK</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131247">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131247</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65600</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme DEMIER, Conseillère maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">17/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Centre communal d'action sociale (CCAS) de Contes (Alpes maritimes) - Appel d'un jugement de la chambre régionale des comptes Provence-Alpes-Côte d'Azur. </TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131247.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">IENPVVIgREVTIENPTVBURVMKICAgICAgICAgICAgICAgIC0tLS0tLS0tClFVQVRSSUVNRSBDSEFNQlJFCiAgICAgICAgICAgICAgICAtLS0tLS0tLQogUFJFTUlFUkUgU0VDVElPTgogICAgICAgICAgICAgICAgLS0tLS0tLS0KQXJyw6p0IG7CsCA2NTYwMAoKQ2VudHJlIGNvbW11bmFsIGTigJlhY3Rpb24gc29jaWFsZSAoQ0NBUykgZGUgQ09OVEVTIAooQWxwZXMgbWFyaXRpbWVzKQoKCkFwcGVsIGTigJl1biBqdWdlbWVudCBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgUHJvdmVuY2UtQWxwZXMtQ8O0dGUgZOKAmUF6dXIKClJhcHBvcnQgbsKwwqAyMDEyLTY0NC0wCgpBdWRpZW5jZSBwdWJsaXF1ZSBldCBkw6lsaWLDqXLDqSAKZHUgNSBkw6ljZW1icmUgMjAxMgoKTGVjdHVyZSBwdWJsaXF1ZSBkdSAxNyBqYW52aWVyIDIwMTMKTEEgQ09VUiBERVMgQ09NUFRFUyBhIHJlbmR1IGzigJlhcnLDqnQgc3VpdmFudMKgOgpMQSBDT1VSLApWdSBsYSByZXF1w6p0ZSwgZW5yZWdpc3Ryw6llIGxlIDI1IG1haSAyMDEyIGF1IGdyZWZmZSBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgUHJvdmVuY2UtQWxwZXMtQ8O0dGUgZOKAmUF6dXIsIHBhciBsYXF1ZWxsZSBNLsKgWCwgY29tcHRhYmxlIGR1IENDQVMgZGUgQ09OVEVTLCBhIMOpbGV2w6kgYXBwZWwgZHUganVnZW1lbnQgbsKwwqAyMDEyLTAwMDEgZHUgMjDCoG1hcnPCoDIwMTIgcGFyIGxlcXVlbCBsYWRpdGUgY2hhbWJyZSBs4oCZYSBjb25zdGl0dcOpIGTDqWJpdGV1ciBkZXMgZGVuaWVycyBkdWRpdCDDqXRhYmxpc3NlbWVudCBwb3VyIGxhIHNvbW1lIGRlIDLCoDg0Myw1M8Kg4oKsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgOwpWdSBsZSByw6lxdWlzaXRvaXJlIG7CsMKgMjAxMi00NiBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsLCBkdSAxMyBqdWlsbGV0IDIwMTIsIHRyYW5zbWV0dGFudCDDoCBsYSBDb3VyIGxhIHJlcXXDqnRlIHByw6ljaXTDqWXCoDsKVnUgbGVzIHBpw6hjZXMgZGUgbGEgcHJvY8OpZHVyZSBzdWl2aWUgZW4gcHJlbWnDqHJlIGluc3RhbmNlIDsKVnUgbGUgY29kZSBjaXZpbCwgbm90YW1tZW50IHNvbiBhcnRpY2xlIDg3N8KgOwpWdSBsZSBjb2RlIGfDqW7DqXJhbCBkZXMgY29sbGVjdGl2aXTDqXMgdGVycml0b3JpYWxlcyA7CgoKVnUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGRlIGZpbmFuY2VzIG7CsMKgNjMtMTU2IGR1IDIzIGbDqXZyaWVyIDE5NjMgbW9kaWZpw6llwqA7ClZ1IGxlIGTDqWNyZXQgbsKwwqA2Mi0xNTg3IGR1IDI5IGTDqWNlbWJyZSAxOTYyIG1vZGlmacOpIHBvcnRhbnQgcsOoZ2xlbWVudCBnw6luw6lyYWwgc3VyIGxhIGNvbXB0YWJpbGl0w6kgcHVibGlxdWUsIGVuIHZpZ3VldXIgYXUgbW9tZW50IGRlcyBmYWl0c8KgOwpWdSBsZSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzwqA7ClZ1IGxlIHJhcHBvcnQgZGUgTW1lIENhdGhlcmluZSBEw6ltaWVyLCBjb25zZWlsbMOocmUgbWHDrnRyZcKgOwpWdSBsZXMgY29uY2x1c2lvbnMgbsKwwqA4MDYgZHUgUHJvY3VyZXVyIGfDqW7DqXJhbCBkdSAyMiBub3ZlbWJyZSAyMDEyIDsKRW50ZW5kdSwgbG9ycyBkZSBs4oCZYXVkaWVuY2UgcHVibGlxdWUgZGUgY2Ugam91ciwgTW1lIETDqW1pZXIsIGVuIHNvbiByYXBwb3J0LCBNLsKgVmluY2VudCBGZWxsZXIsIGF2b2NhdCBnw6luw6lyYWwsIGVuIGxlcyBjb25jbHVzaW9ucyBkdSBtaW5pc3TDqHJlIHB1YmxpYywgbOKAmWFwcGVsYW50LCBpbmZvcm3DqSBkZSBs4oCZYXVkaWVuY2UsIG7igJnDqXRhbnQgbmkgcHLDqXNlbnQgbmkgcmVwcsOpc2VudMOpIDsKQXByw6hzIGF2b2lyIGVudGVuZHUsIGVuIGTDqWxpYsOpcsOpLCBNLsKgUGhpbGlwcGUgR2VvZmZyb3ksIGNvbnNlaWxsZXIgbWHDrnRyZSwgZW4gc2VzIG9ic2VydmF0aW9uc8KgOwpBdHRlbmR1IHF1ZSBwYXIgbGUganVnZW1lbnQgZW50cmVwcmlzLCBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgUHJvdmVuY2UtQWxwZXMtQ8O0dGUgZOKAmUF6dXIgYSBwcm9ub25jw6kgdW4gZMOpYmV0IMOgIGzigJllbmNvbnRyZSBkZSBNLsKgWCBkZSAywqA4NDMsNTPCoOKCrCwgbW9udGFudCB0b3RhbCBkZSB0aXRyZXMgZGUgcmVjZXR0ZXMgw6ltaXMgZHUgMTfCoGF2cmlswqAyMDAyIGF1IDIywqBqdWlsbGV0wqAyMDA0LCBhdSBtb3RpZiBxdWUgZmF1dGUgZOKAmWF2b2lyIGV4ZXJjw6kgZGVzIGRpbGlnZW5jZXMgY29tcGzDqHRlcywgcmFwaWRlcyBldCBhZMOpcXVhdGVzIGVuIHZ1ZSBkdSByZWNvdXZyZW1lbnQgZGUgY2VzIGNyw6lhbmNlcywgZWxsZXMgc2Ugc29udCB0cm91dsOpZXMgcHJlc2NyaXRlcyBlbnRyZSBsZSAxNyBhdnJpbCAyMDA2ICBsZcKgMjjCoGp1aWxsZXTCoDIwMDggOwpBdHRlbmR1IHF1ZSBsZSBjb21wdGFibGUsIGRhbnMgc2EgcmVxdcOqdGUsIGluZGlxdWUgcXVlIGxlIHJlZGV2YWJsZSBlc3QgZMOpY8OpZMOpIGxlwqAyM8KgZsOpdnJpZXLCoDIwMDYsIHNhbnMgc3VjY2Vzc2lvbiBvdXZlcnRlLCBuaSBhY3RpZiBjb25udcKgOyBxdeKAmWlsIGZvdXJuaXQgw6AgbOKAmWFwcHVpIGRlIHNvbiByZWNvdXJzIGNvcGllIGRlIGRldXggwqvCoHJlcXXDqnRlcyBpbmZvcm1hdGlxdWVzwqDCuyBxdeKAmWlsIGEgZWZmZWN0dcOpZXMgbGUgMjPCoG1hacKgMjAxMiBkYW5zIGRlcyBiYXNlcyBkZSBkb25uw6llcyBkZSBsYSBkaXJlY3Rpb24gZ8OpbsOpcmFsZSBkZXMgZmluYW5jZXMgcHVibGlxdWVzIGNvbmNlcm5hbnQgbGEgcGVyc29ubmUgZMOpY8OpZMOpZcKgOwpBdHRlbmR1IHF14oCZZW4gYXBwbGljYXRpb24gZGUgbOKAmWFydGljbGUgODc3IHN1c3Zpc8OpIGR1IGNvZGUgY2l2aWwsIGNvbW1lIGzigJlhIHJhcHBlbMOpIGxlIGp1Z2VtZW50IGRlIHByZW1pw6hyZSBpbnN0YW5jZSwgbGUgZMOpY8OocyBkdSBkw6liaXRldXIgbuKAmWEgcGFzIHBvdXIgZWZmIGTigJnDqXRlaW5kcmUgc2VzIGRldHRlc8KgOyBxdWUgY2UgZMOpY8OocyBvdXZyZSBsYSBzdWNjZXNzaW9uICBxdWUgbGVzIHRpdHJlcyBjb25zZXJ2ZW50IGxldXIgZm9yY2UgZXjDqWN1dG9pcmUgw6AgbOKAmWVuY29udHJlIGRlcyDDqXZlbnR1ZWxzIGjDqXJpdGllcnPCoDsKQXR0ZW5kdSBxdWUgbGVzIGJhc2VzIGRlIGRvbm7DqWVzIGNvbnN1bHTDqWVzIG5lIGNvbXBvcnRlbnQgYXVjdW5lIHJ1YnJpcXVlIHJlbGF0aXZlIGF1eCBheWFudHMtZHJvaXQgZOKAmXVuIGNvbnRyaWJ1YWJsZcKgOyBxdeKAmWVsbGVzIG5lIHJlbnNlaWduZW50IHBhcyBzdXIgbOKAmWV4aXN0ZW5jZSBvdSBub24gZOKAmXVuIGFjdGlmIHN1Y2Nlc3NvcmFsIG5pIHN1ciBs4oCZb3V2ZXJ0dXJlIG91IG5vbiBk4oCZdW5lIHN1Y2Nlc3Npb27CoDsgcXXigJlhaW5zaSBs4oCZYXBwZWxhbnQgbuKAmWFwcG9ydGUgbGEgcHJldXZlIG5pIGRlIGzigJlhYnNlbmNlIGTigJlhY3RpZiBzdWNjZXNzb3JhbCwgbmkgZGUgbOKAmWFic2VuY2UgZOKAmWjDqXJpdGllcnMgcXXigJlpbCBhbGzDqGd1ZcKgOwpBdHRlbmR1IHF14oCZaWwgZmFpdCDDqWdhbGVtZW50IHZhbG9pciBxdWUgbGEgZHRlIGR1ZGl0IHJlZGV2YWJsZSBhIMOpdMOpIGFkbWlzZSBlbiBub24tdmFsZXVyIHBhciB1bmUgZMOpbGliw6lyYXRpb24gZHUgY29uc2VpbCBk4oCZYWRtaW5pc3RyYXRpb24gZHUgQ0NBUyBkZSBDb250ZXMgZHUgMTbCoGTDqWNlbWJyZcKgMjAxMcKgOwpBdHRlbmR1IHF14oCZdW5lIGFkbWlzc2lvbiBlbiBub24tdmFsZXVyIG7igJlleG9uw6hyZSBwYXMgbGUgY29tcHRhYmxlIGRlIHNhIG7DqWdsaWdlbmNlIGFudMOpcmlldXJlIGV0IG5lIHNhdXJhaXQgZMOpZ2FnZXIgc2EgcmVzcG9uc2FiaWxpdMOpIDsgClBhciBjZXMgbW90aWZzLApPUkRPTk5FwqA6CkFydGljbGUgdW5pcXVlwqA6IExhIHJlcXXDqnRlIGRlIE0uwqBYIGVzdCByZWpldMOpZS4KLS0tLS0tLS0tLS0tCkZhaXQgZXQganVnw6kgZW4gbGEgQ291ciBkZXMgY29tcHRlcywgcXVhdHJpw6htZSBjaGFtYnJlLCBwcmVtacOocmUgc2VjdGlvbi4gUHLDqXNlbnRzwqA6IE1NLsKgQmF5bGUsIHByw6lzaWRlbnQsIEdhbnNlciwgcHLDqXNpZGVudCBkZSBzZWN0aW9uLCBNbWUgR2FkcmlvdC1SZW5hcmQgZXTCoE0uwqBHZW9mZnJveSwgY29uc2VpbGxlcnMgbWHDrnRyZXMuClNpZ27DqcKgOiBCYXlsZSwgcHLDqXNpZGVudCwgZXQgRsOpcmV6LCBncmVmZmllci4KQ29sbGF0aW9ubsOpLCBjZXJ0aWZpw6kgY29uZm9ybWUgw6AgbGEgbWludXRlIMOpdGFudCBhdSBncmVmZmUgZGUgbGEgQ291ciBkZXMgY29tcHRlcyBldCBkw6lsaXZyw6kgcGFyIG1vaSwgc2VjcsOpdGFpcmUgZ8OpbsOpcmFsLgpQb3VyIGxlIFNlY3LDqXRhaXJlIGfDqW7DqXJhbApldCBwYXIgZMOpbMOpZ2F0aW9uLApsZSBDaGVmIGR1IGdyZWZmZSBjb250ZW50aWV1eAoKCgoKCgoKCkRhbmllbCBGRVJFWgo=</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131245">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131245</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65598</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme DEMIER, Conseillère maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GEOFFROY, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">17/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Maison de retraite de Beuzeville (Eure) - Appel d'un jugement de la chambre régionale des comptes de Haute-Normandie.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 22.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public local social et médico-social</DESCRIPTEUR>
<DESCRIPTEUR>Rémunération</DESCRIPTEUR>
<DESCRIPTEUR>Personnel mis à disposition</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Exactitude des calculs de liquidation</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le comptable d'une maison de retraite avait été constitué en débet pour avoir remboursé à un centre hospitalier la rémunération d'un agent mis à la disposition de la maison de retraite, sans être en mesure de contrôler l'exactitude des calculs de liquidation. Il soutenait en appel que cette exactitude avait été préalablement attestée par l'ordonnateur et le comptable du centre hospitalier. La Cour a rejeté cette argumentation en jugeant que l'intervention d'une autre autorité publique ne dispensait pas le comptable des contrôles qui lui incombent en matière de régularité de la dépense et qui ne varient pas selon l'identité du créancier.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur les contrôles à réaliser par le comptable en matière de personnel mis à disposition, cf. CC, 7 mars 2012, &lt;I style="mso-bidi-font-style: normal"&gt;ACAM&lt;/I&gt;, Recueil 2012, p. 47 et CC, 23 juillet 2008 &lt;I style="mso-bidi-font-style: normal"&gt;AFII&lt;/I&gt;, Recueil 2008, p. 41.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131245.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">IENPVVIgREVTIENPTVBURVMKICAgICAgICAgICAgICAgIC0tLS0tLS0tClFVQVRSSUVNRSBDSEFNQlJFCiAgICAgICAgICAgICAgIC0tLS0tLS0tCiBQUkVNSUVSRSBTRUNUSU9OCiAgICAgICAgICAgICAgIC0tLS0tLS0tCkFycsOqdCBuwrAgNjU1OTgKCm1haXNvbiBkZSByZXRyYWl0ZSBkZSBiZXV6ZXZpbGxlCihldXJlKQoKCkFwcGVsIGTigJl1biBqdWdlbWVudCBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgSGF1dGUtTm9ybWFuZGllCgpSYXBwb3J0IG7CsMKgMjAxMi02MzItMAoKQXVkaWVuY2UgcHVibGlxdWUgZXQgZMOpbGliw6lyw6kgCmR1IDUgZMOpY2VtYnJlIDIwMTIKCkxlY3R1cmUgcHVibGlxdWUgZHUgMTcgamFudmllciAyMDEzCgoKCgpMQSBDT1VSIERFUyBDT01QVEVTIGEgcmVuZHUgbOKAmWFycsOqdCBzdWl2YW50wqA6CkxBIENPVVIsClZ1IGxhIHJlcXXDqnRlLCBlbnJlZ2lzdHLDqWUgbGUgOSBtYWkgMjAxMiBhdSBncmVmZmUgZGUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIEhhdXRlLU5vcm1hbmRpZSwgcGFyIGxhcXVlbGxlIE1tZSBYLCBjb21wdGFibGUgZGUgbGEgTWFpc29uIGRlIHJldHJhaXRlIGRlIEJFVVpFVklMTEUgcG91ciBsZXMgZXhlcmNpY2VzIDIwMDUgw6AgMjAwNywgYcKgw6lsZXbDqSBhcHBlbCBkdSBqdWdlbWVudCBuwrDCoDIwMTItMDAwMSBkdSAxM8KgbWFyc8KgMjAxMiBwYXIgbGVxdWVsIGxhZGl0ZSBjaGFtYnJlIGzigJlhwqBjb25zdGl0dcOpZSBkw6liaXRyaWNlIGRlcyBkZW5pZXJzIGRlIGNldCDDqXRhYmxpc3NlbWVudCBwb3VyIGxhIHNvbW1lIGRlIDPCoDY4NCw3MsKg4oKsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgOwpWdSBsZSByw6lxdWlzaXRvaXJlIG7CsMKgMjAxMi00MyBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsLCBkdSAyIGp1aWxsZXQgMjAxMiwgdHJhbnNtZXR0YW50IMOgIGxhIENvdXIgbGEgcmVxdcOqdGUgcHLDqWNpdMOpZcKgOwpWdSBsZXMgcGnDqGNlcyBkZSBsYSBwcm9jw6lkdXJlIHN1aXZpZSBlbiBwcmVtacOocmUgaW5zdGFuY2UgOwpWdSBsZSBjb2RlIGRlIGxhIHNhbnTDqSBwdWJsaXF1ZSA7ClZ1IGxlIGNvZGUgZ8OpbsOpcmFsIGRlcyBjb2xsZWN0aXZpdMOpcyB0ZXJyaXRvcmlhbGVzwqA7CgoKVnUgbOKAmWFydGljbGUgNjAgZGUgbGEgbG9pIGRlIGZpbmFuY2VzIG7CsMKgNjMtMTU2IGR1IDIzIGbDqXZyaWVyIDE5NjMgbW9kaWZpw6llwqA7IApWdSBsZSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOSBkw6ljZW1icmUgMTk2MiBtb2RpZmnDqSBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBlbiB2aWd1ZXVyIGF1IG1vbWVudCBkZXMgZmFpdHMgOwpWdSBsZSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzwqA7ClZ1IGxlIHJhcHBvcnQgZGUgTW1lIENhdGhlcmluZSBEw6ltaWVyLCBjb25zZWlsbMOocmUgbWHDrnRyZSA7ClZ1IGxlcyBjb25jbHVzaW9ucyBuwrDCoDY4NiBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIGR1IDPCoG9jdG9icmXCoDIwMTIgOwpFbnRlbmR1ZXMsIGxvcnMgZGUgbOKAmWF1ZGllbmNlIHB1YmxpcXVlIGRlIGNlIGpvdXIsIE1tZSBEw6ltaWVyLCBlbiBzb24gcmFwcG9ydCwgTW1lIE1hcmllLUFpbcOpZSBHYXNwYXJpLCBlbiBsZXMgY29uY2x1c2lvbnMgZHUgUGFycXVldCwgbOKAmWFwcGVsYW50ZSwgaW5mb3Jtw6llIGRlIGzigJlhdWRpZW5jZSwgbuKAmcOpdGFudCBuaSBwcsOpc2VudGUgbmkgcmVwcsOpc2VudMOpZSA7CkFwcsOocyBhdm9pciBlbnRlbmR1LCBlbiBkw6lsaWLDqXLDqSwgTS7CoFBoaWxpcHBlIEdlb2Zmcm95LCBjb25zZWlsbGVyIG1hw650cmUsIGVuIHNlcyBvYnNlcnZhdGlvbnPCoDsKQXR0ZW5kdSBxdWUsIHBhciBsZSBqdWdlbWVudCBlbnRyZXByaXMsIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBkZcKgSGF1dGUtTm9ybWFuZGllIGEgbWlzIGVuIGTDqWJldCBNbWUgWCDDoCByYWlzb24gZHUgcGFpZW1lbnQgYXUgY2VudHJlIGhvc3BpdGFsaWVyIGRlIExhIFJpc2xlIGTigJl1biBtYW5kYXQgZW4gZGF0ZSBkdSAxNMKgamFudmllcsKgMjAwNyBk4oCZdW4gbW9udGFudCBkZSAzwqA2ODQsNzLCoOKCrCBjb3JyZXNwb25kYW50IGF1IHJlbWJvdXJzZW1lbnQgZGUgbGEgcsOpbXVuw6lyYXRpb24gZGUgcGVyc29ubmVsIG1pcyDDoCBkaXNwb3NpdGlvbiBkZSBsYSBtYWlzb24gZGUgcmV0cmFpdGUgcGFyIGNlIGNlbnRyZSBob3NwaXRhbGllciwgc2FucyBhdm9pciBkaXNwb3PDqSBkZSBwacOoY2VzIHBlcm1ldHRhbnQgZGUgY29udHLDtGxlciBs4oCZZXhhY3RpdHVkZSBkZXMgY2FsY3VscyBkZSBsaXF1aWRhdGlvbiBkZSBsYWRpdGUgZMOpcGVuc2UsIGNvbnRyw7RsZSBxdWkgbHVpIGluY29tYmFpdCBlbiBhcHBsaWNhdGlvbiBkZXMgYXJ0aWNsZXMgMTIgZXQgMTMgZHUgZMOpY3JldCBkdSAyOcKgZMOpY2VtYnJlwqAxOTYyIHN1c3Zpc8OpIDsKQXR0ZW5kdSBxdWUgbOKAmWFwcGVsYW50ZSBzb3V0aWVudCwgZW4gcHJlbWllciBsaWV1LCBxdWUgbGUgcGFpZW1lbnQgZXN0IGludGVydmVudSBkYW5zIGxlIHJlc3BlY3QgZGVzIGRpc3Bvc2l0aW9ucyBkdSBjb2RlIGfDqW7DqXJhbCBkZXMgY29sbGVjdGl2aXTDqXMgdGVycml0b3JpYWxlcywgZG9udCBs4oCZYW5uZXhlIEkgcHLDqXZvaXQgcXVlLCBz4oCZYWdpc3NhbnQgZHUgcmVtYm91cnNlbWVudCBkZSBsYSByw6ltdW7DqXJhdGlvbiBkZSBwZXJzb25uZWwgbWlzIMOgIGRpc3Bvc2l0aW9uIHBhciB1bmUgYXV0cmUgY29sbGVjdGl2aXTDqSBwdWJsaXF1ZSwgc29pZW50IGpvaW50cyBhdSBwYWllbWVudCBsYSBkw6lsaWLDqXJhdGlvbiBhdXRvcmlzYW50IGxhIGNvbmNsdXNpb24gZOKAmXVuZSBjb252ZW50aW9uIGRlIG1pc2Ugw6AgZGlzcG9zaXRpb24sIGxhIGNvbnZlbnRpb24gZWxsZS1tw6ptZSBldCB1biDDqXRhdCBsaXF1aWRhdGlmwqA7IHF1ZSBsZSB0aXRyZSBkZSByZWNldHRlIMOpbWlzIHBhciBsZSBjZW50cmUgaG9zcGl0YWxpZXIgZGUgTGEgUmlzbGUgZXQgam9pbnQgYXUgcGFpZW1lbnQgY29udGllbmRyYWl0IGxlcyDDqWzDqW1lbnRzIHBlcm1ldHRhbnQgZGUgdsOpcmlmaWVyIGzigJlleGFjdGl0dWRlIGRlcyBjYWxjdWxzIGRlIGxpcXVpZGF0aW9uIGRlIGxhIGTDqXBlbnNlwqA7IHF14oCZYWluc2ksIGxlcyBwacOoY2VzIMOgIGzigJlhcHB1aSBkdSBwYWllbWVudCBzZXJhaWVudCBzdWZmaXNhbnRlc8KgOwpBdHRlbmR1IGVuIGVmZmV0IHF1ZSBsZSBjb21wdGFibGUgbuKAmWVzdCBwYXMgdGVudSBkZSBzdXJzZW9pciDDoCBwYXllciBkYW5zIGzigJlhdHRlbnRlIGRlIGxhIHByb2R1Y3Rpb24gZOKAmXVuZSBwacOoY2Ugbm9uIHByw6l2dWUgcGFyIGxhIG5vbWVuY2xhdHVyZSA7IAoKQXR0ZW5kdSB0b3V0ZWZvaXMgcXXigJllbiBs4oCZZXNww6hjZSBsZSB0aXRyZSBkZSByZWNldHRlcyBqb2ludCBhdSBwYWllbWVudCBuZSBwcsOpY2lzYWl0IG5pIGzigJlpZGVudGl0w6kgZGUgbGEgcGVyc29ubmUgbWlzZSDDoCBkaXNwb3NpdGlvbiwgbmkgc2EgcsOpbXVuw6lyYXRpb24gdG90YWxlIHBhciBsZSBjZW50cmUgaG9zcGl0YWxpZXIsIG5pIGxlIHByb3JhdGEgdGVtcG9yaXMgcGVybWV0dGFudCBkZSBjYWxjdWxlciBsZSByZW1ib3Vyc2VtZW50IHByw6l2dSBwYXIgbGEgY29udmVudGlvbsKgOyBxdeKAmWFpbnNpIGNlIGRvY3VtZW50IG5lIHBvdXZhaXQgZmFpcmUgb2ZmaWNlIGTigJnDqXRhdCBsaXF1aWRhdGlmIHRlbCBxdWUgcHLDqXZ1IHBhciBsYSBub21lbmNsYXR1cmXCoDsgcXXigJllbiB0b3V0IMOpdGF0IGRlIGNhdXNlIGlsIG5lIHBlcm1ldHRhaXQgcGFzIGF1IGNvbXB0YWJsZSBkZSB2w6lyaWZpZXIgbOKAmWV4YWN0aXR1ZGUgZGVzIGNhbGN1bHMgZGUgbGlxdWlkYXRpb24gZGUgbGEgZMOpcGVuc2XCoDsKQXR0ZW5kdSBxdWUgbOKAmWFwcGVsYW50ZSBmYWl0IHZhbG9pciwgZW4gc2Vjb25kIGxpZXUsIHF1ZSBs4oCZZXhhY3RpdHVkZSBkZXMgY2FsY3VscyBkZSBsaXF1aWRhdGlvbiBhdXJhaXQgw6l0w6kgcHLDqWFsYWJsZW1lbnQgYXR0ZXN0w6llIHBhciBs4oCZb3Jkb25uYXRldXIgZXQgbGUgY29tcHRhYmxlIGR1IGNlbnRyZSBob3NwaXRhbGllciBkZSBMYSBSaXNsZcKgOwpBdHRlbmR1IHF1ZSBs4oCZaW50ZXJ2ZW50aW9uIGTigJl1bmUgYXV0cmUgYXV0b3JpdMOpIHB1YmxpcXVlIGV0IGNlbGxlIGTigJl1biBhdXRyZSBjb21wdGFibGUgcHVibGljIGNoYXJnw6kgZHUgcmVjb3V2cmVtZW50IGTigJl1bmUgY3LDqWFuY2UgbmUgZGlzcGVuc2VudCBhdWN1bmVtZW50IGxlIGNvbXB0YWJsZSBwYXlldXIgZGVzIGNvbnRyw7RsZXMgcHLDqXZ1cyBlbiBtYXRpw6hyZSBkZSBkw6lwZW5zZXMgcGFyIGxlcyBhcnRpY2xlcyAxMiBldCAxMyBkdSBkw6ljcmV0IGR1wqAyOcKgZMOpY2VtYnJlwqAxOTYyIHN1c3Zpc8OpLCBsZXNxdWVscyByZXbDqnRlbnQgdW4gY2FyYWN0w6hyZSBnw6luw6lyYWwsIHF1ZWxsZSBxdWUgc29pdCBs4oCZaWRlbnRpdMOpIGR1IGNyw6lhbmNpZXIgOwpBdHRlbmR1LCBlbiB0cm9pc2nDqG1lIGV0IGRlcm5pZXIgbGlldSwgcXVlIGzigJlhcHBlbGFudGUgaW5kaXF1ZSBxdWUgbOKAmWF0dGVzdGF0aW9uIHBhciBsYXF1ZWxsZSBs4oCZb3Jkb25uYXRldXIgYSBkw6l0YWlsbMOpIGxlcyBjYWxjdWxzIGRlIGxpcXVpZGF0aW9uIG5lIHBvdXZhaXQgw6p0cmUgcXVlIHBvc3TDqXJpZXVyZSBhdSBwYWllbWVudCwgcHVpc3F14oCZZWxsZSBhIMOpdMOpIMOpdGFibGllIMOgIGzigJlvY2Nhc2lvbiBkZSBs4oCZaW5zdHJ1Y3Rpb24gZGUgcHJlbWnDqHJlIGluc3RhbmNlwqA7IApBdHRlbmR1IHF1ZSBsZSBqdWdlbWVudCBlbnRyZXByaXMgbuKAmWEgcGFzIHByb25vbmPDqSBsZSBkw6liZXQgYXUgbW90aWYgZOKAmXVuIG1hbnF1ZW1lbnQgw6AgbGEgbm9tZW5jbGF0dXJlIGRlcyBwacOoY2VzIGp1c3RpZmljYXRpdmVzLCBtYWlzIMOgIHJhaXNvbiBk4oCZdW5lIGluc3VmZmlzYW5jZSBkZXMgcGnDqGNlcyBwZXJtZXR0YW50IGTigJlhdHRlc3RlciBkdSBjb250csO0bGUgZGUgbOKAmWV4YWN0aXR1ZGUgZGVzIGNhbGN1bHMgZGUgbGlxdWlkYXRpb27CoDsgcXXigJnDoCBjZXQgw6lnYXJkLCBsZSBjb21wdGFibGUgYXVyYWl0IHB1IHByb2R1aXJlIMOgIHNhIGTDqWNoYXJnZSB1bmUgcGnDqGNlIGp1c3RpZmljYXRpdmUgcXVpLCBxdW9pcXVlIG5vbiBqb2ludGUgYXV4IHBhaWVtZW50cywgYXVyYWl0IGF0dGVzdMOpIHF14oCZaWwgYXZhaXQgw6l0w6kgZW4gbWVzdXJlIGRlIHByb2PDqWRlciBhdWRpdCBjb250csO0bGXCoDsgcXVlIHRvdXRlZm9pcywgbGEgcmVzcG9uc2FiaWxpdMOpIGR1IGNvbXB0YWJsZSBz4oCZYXBwcsOpY2lhbnQgw6AgbGEgZGF0ZSBkZXMgcGFpZW1lbnRzLCB1bmUgdGVsbGUgcGnDqGNlIG7igJlhdXJhaXQgcHUgw6p0cmUgYWRtaXNlIHBhciBsZSBqdWdlIGZpbmFuY2llciBxdWUgc291cyByw6lzZXJ2ZSBxdeKAmWVsbGUgYWl0IMOpdMOpIMOpdGFibGllIGFudMOpcmlldXJlbWVudCBhdXhkaXRzIHBhaWVtZW50c8KgOwpBdHRlbmR1IHF14oCZZW4gbOKAmWVzcMOoY2UgbGUgZMOpdGFpbCBkZXMgY2FsY3VscyBkZSBsaXF1aWRhdGlvbiBwcm9kdWl0IHBhciBsZSBjb21wdGFibGUgYSDDqXTDqSDDqXRhYmxpIHBhciBs4oCZb3Jkb25uYXRldXIgcG9zdMOpcmlldXJlbWVudCBhdSBwYWllbWVudMKgOyBxdeKAmWVuIGNvbnPDqXF1ZW5jZSBj4oCZZXN0IMOgIGJvbiBkcm9pdCBxdWUgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIEhhdXRlLU5vcm1hbmRpZSBs4oCZYSDDqWNhcnTDqSBjb21tZSBqdXN0aWZpY2F0aW9uIMOgIGTDqWNoYXJnZcKgOwpQYXIgY2VzIG1vdGlmcywKT1JET05ORcKgOgpBcnRpY2xlIHVuaXF1ZcKgOiBMYSByZXF1w6p0ZSBkZSBNbWUgWCBlc3QgcmVqZXTDqWUuCi0tLS0tLS0tLS0tLQpGYWl0IGV0IGp1Z8OpIGVuIGxhIENvdXIgZGVzIGNvbXB0ZXMsIHF1YXRyacOobWUgY2hhbWJyZSwgcHJlbWnDqHJlIHNlY3Rpb24gbGUgY2lucSBkw6ljZW1icmUgZGV1eCBtaWwgZG91emUuIFByw6lzZW50c8KgOiBNLsKgQmF5bGUsIHByw6lzaWRlbnQsIE0uwqBHYW5zZXIsIHByw6lzaWRlbnQgZGUgc2VjdGlvbiwgTW1lIEdhZHJpb3QtUmVuYXJkIGV0wqBNLsKgR2VvZmZyb3ksIGNvbnNlaWxsZXJzIG1hw650cmVzLgpTaWduw6nCoDogQmF5bGUsIHByw6lzaWRlbnQsIGV0IEbDqXJleiwgZ3JlZmZpZXIuCkNvbGxhdGlvbm7DqSwgY2VydGlmacOpIGNvbmZvcm1lIMOgIGxhIG1pbnV0ZSDDqXRhbnQgYXUgZ3JlZmZlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMgZXTCoGTDqWxpdnLDqSBwYXIgbW9pLCBzZWNyw6l0YWlyZSBnw6luw6lyYWwuClBvdXIgbGUgU2VjcsOpdGFpcmUgZ8OpbsOpcmFsCmV0IHBhciBkw6lsw6lnYXRpb24sCmxlIENoZWYgZHUgZ3JlZmZlIGNvbnRlbnRpZXV4CgoKCgoKCgoKRGFuaWVsIEZFUkVaCg==</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131243">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131243</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65632</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>Mme BOUTEREAU-TICHET, Conseillère référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme DEMIER, Conseillère maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>13/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">17/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Saint-Denis de la Réunion (974) - Appel d'un jugement de la chambre régionale des comptes de La Réunion.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Décharge</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 20.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Redevance</DESCRIPTEUR>
<DESCRIPTEUR>Recouvrement</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Certificat administratif</DESCRIPTEUR>
<DESCRIPTEUR>Infirmation</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le comptable d'une commune avait été constitué en débet pour défaut de diligences en matière de recouvrement d'une créance. Il produisait, en appel, un certificat administratif indiquant que la redevance, objet du titre en cause, n'était pas due. Conformément aux conclusions du Procureur général, la Cour a jugé qu'un tel certificat, nonobstant son caractère tardif, amenait à considérer que la créance était réputée n'avoir jamais existé et n'avait donc pas à être recouvrée. Le débet prononcé en première instance étant ainsi dépourvu de fondement, la Cour a infirmé le jugement.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Dès lors qu'il permet de démontrer l'inexistence de la créance, le certificat administratif émanant de l'ordonnateur a les mêmes conséquences qu'une annulation du titre de recettes initial ; sur ce point, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 24 septembre 1991, &lt;I style="mso-bidi-font-style: normal"&gt;réunion perceptorale de Rugles&lt;/I&gt;, Recueil 1991, p. 85 et CC, 15 décembre 2011,&lt;I style="mso-bidi-font-style: normal"&gt; lycée international de Ferney-Voltaire&lt;/I&gt;, Recueil 2011, p. 147. Sur l'hypothèse proche d'un titre de recettes déjà irrécouvrable lors de l'entrée en fonction du comptable, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 24 avril 1992, &lt;I style="mso-bidi-font-style: normal"&gt;receveurs des impôts du Finistère&lt;/I&gt;, Recueil 1992, p. 37. Sur les conditions auxquelles l'annulation d'un titre de créance doit répondre afin de dégager la responsabilité du comptable et l'effet de la prescription, cf. CC, 28 février 2013, &lt;I style="mso-bidi-font-style: normal"&gt;département des Pyrénées-orientales&lt;/I&gt;, Recueil 2013, p. 30.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131243.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY">ICBDT1VSIERFUyBDT01QVEVTCiAgICAgICAgICAgICAgICAtLS0tLS0tClFVQVRSSUVNRSBDSEFNQlJFCiAgICAgICAgICAgICAgICAtLS0tLS0tCiAgUFJFTUlFUkUgU0VDVElPTgogICAgICAgICAgICAgICAgLS0tLS0tLQogICAgICAgICAgIEFycsOqdCBuwrAgNjU2MzIKCgoKY29tbXVuZSBkZSBTYWludC1EZW5pcwpkZSBsYSBSw6l1bmlvbiAoOTc0KQoKCkFwcGVsIGTigJl1biBqdWdlbWVudCBkZSBsYSBjaGFtYnJlIHLDqWdpb25hbGUgZGVzIGNvbXB0ZXMgZGUgbGEgUsOpdW5pb24KClJhcHBvcnQgbsKwIDIwMTItNjY3LTAKCkF1ZGllbmNlIHB1YmxpcXVlIGR1IDEzIGTDqWNlbWJyZSAyMDEyCgpMZWN0dXJlIHB1YmxpcXVlIGR1IDE3IGphbnZpZXIgMjAxMwpMQSBDT1VSIERFUyBDT01QVEVTIGEgcmVuZHUgbOKAmWFycsOqdCBzdWl2YW50wqA6CkxBIENPVVIsClZ1IGxhIHJlcXXDqnRlLCBlbnJlZ2lzdHLDqWUgbGUgMjAgc2VwdGVtYnJlIDIwMTAgYXUgZ3JlZmZlIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBkZSBsYSBSw6l1bmlvbiwgcGFyIGxhcXVlbGxlIE0uwqBYLCBjb21wdGFibGUgZGUgbGEgY29tbXVuZSBkZSBTYWludC1EZW5pcywgYSDDqWxldsOpIGFwcGVsIGR1IGp1Z2VtZW50IG7CsMKgMjAwOS01NS8yIGR1IDE1wqBqdWluwqAyMDEwIHBhciBsZXF1ZWwgbGFkaXRlIGNoYW1icmUgbOKAmWEgY29uc3RpdHXDqSBkw6liaXRldXIgZGVzIGRlbmllcnMgZGUgbGEgY29tbXVuZSBkZSBTYWludC1EZW5pcyBwb3VyIGxhIHNvbW1lIGRlIDfCoDQ5MSwzNMKg4oKsIGF1Z21lbnTDqWUgZGVzIGludMOpcsOqdHMgZGUgZHJvaXQgOwpWdSBsZSBtw6ltb2lyZSBlbiBkw6lmZW5zZSBkdSBQcm9jdXJldXIgZmluYW5jaWVyIHByw6hzIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBkZSBsYSBSw6l1bmlvbiBlbiBkYXRlIGR1IDQgb2N0b2JyZSAyMDEwwqA7ClZ1IGxlIHLDqXF1aXNpdG9pcmUgbsKwwqAyMDEwLTk1IGR1IFByb2N1cmV1ciBnw6luw6lyYWwgZW4gZGF0ZSBkdSAxNMKgZMOpY2VtYnJlwqAyMDEwLCB0cmFuc21ldHRhbnQgbGEgcmVxdcOqdGUgcHLDqWNpdMOpZcKgOwpWdSBsZXMgcGnDqGNlcyBkZSBsYSBwcm9jw6lkdXJlIHN1aXZpZSBlbiBwcmVtacOocmUgaW5zdGFuY2UgOwpWdSBs4oCZYXJ0aWNsZSA2MCBkZSBsYSBsb2kgZGUgZmluYW5jZXMgbsKwwqA2My0xNTYgZHUgMjMgZsOpdnJpZXIgMTk2MyBtb2RpZmnDqWUgOwoKCgpWdSBsZSBkw6ljcmV0IG7CsMKgNjItMTU4NyBkdSAyOSBkw6ljZW1icmUgMTk2MiBtb2RpZmnDqSBwb3J0YW50IHLDqGdsZW1lbnQgZ8OpbsOpcmFsIHN1ciBsYSBjb21wdGFiaWxpdMOpIHB1YmxpcXVlLCBlbiB2aWd1ZXVyIGF1IG1vbWVudCBkZXMgZmFpdHPCoDsKVnUgbGUgY29kZSBkZXMganVyaWRpY3Rpb25zIGZpbmFuY2nDqHJlc8KgOwpWdSBsZSByYXBwb3J0IGRlIE1tZSBTeWx2aWUgQm91dGVyZWF1LVRpY2hldCwgY29uc2VpbGzDqHJlIHLDqWbDqXJlbmRhaXJlwqA7ClZ1IGxlcyBjb25jbHVzaW9ucyBuwrDCoDc0OSBkdSBQcm9jdXJldXIgZ8OpbsOpcmFsIGVuIGRhdGUgZHUgMjUgb2N0b2JyZSAyMDEywqA7CkVudGVuZHUsIGxvcnMgZGUgbOKAmWF1ZGllbmNlIHB1YmxpcXVlIGRlIGNlIGpvdXIsIE1tZSBTeWx2aWUgQm91dGVyZWF1LVRpY2hldCwgZW4gc29uIHJhcHBvcnQsIE0uwqBWaW5jZW50IEZlbGxlciwgYXZvY2F0IGfDqW7DqXJhbCwgZW4gbGVzIGNvbmNsdXNpb25zIGR1IFBhcnF1ZXQsIGzigJlhcHBlbGFudCwgaW5mb3Jtw6kgZGUgbOKAmWF1ZGllbmNlLCBu4oCZw6l0YW50IG5pIHByw6lzZW50IG5pIHJlcHLDqXNlbnTDqSA7CkFwcsOocyBhdm9pciBlbnRlbmR1LCBlbiBkw6lsaWLDqXLDqSwgTW1lIENhdGhlcmluZSBEw6ltaWVyLCBjb25zZWlsbMOocmUgbWHDrnRyZSwgZW4gc2VzIG9ic2VydmF0aW9uc8KgOwpTdXIgbGEgZm9ybWUKQXR0ZW5kdSBxdWUgbGEgcmVxdcOqdGUgYSDDqXTDqSBwcm9kdWl0ZSBzYW5zIMOqdHJlIGFwcHV5w6llIGR1IGp1Z2VtZW50IGF0dGFxdcOpLCBjb250cmFpcmVtZW50IGF1eCBwcmVzY3JpcHRpb25zIGRlIGzigJlhcnRpY2xlIFIuwqAyNDMtNCBkdSBjb2RlIGRlcyBqdXJpZGljdGlvbnMgZmluYW5jacOocmVzwqA7Ck1haXMsIGF0dGVuZHUgcXVlIGxlZGl0IGFydGljbGUgbmUgc2FuY3Rpb25uZSBwYXMgZXhwcmVzc8OpbWVudCBs4oCZaW5vYnNlcnZhdGlvbiBkZSBjZXR0ZSBwcmVzY3JpcHRpb24gcGFyIGzigJlpcnJlY2V2YWJpbGl0w6kgZGUgbGEgcmVxdcOqdGXCoDsgcXXigJlhaW5zaSBjZWxsZS1jaSBlc3QgcmVjZXZhYmxlwqA7ClN1ciBsZSBmb25kCkF0dGVuZHUgcXVlLCBwYXIganVnZW1lbnQgZHUgMTUganVpbiAyMDEwIHByw6ljaXTDqSwgbGEgY2hhbWJyZSByw6lnaW9uYWxlIGRlcyBjb21wdGVzIGRlIGxhIFLDqXVuaW9uIGEgZMOpY2xhcsOpIE0uwqBYIGTDqWJpdGV1ciBkZSBsYSBjb21tdW5lIGRlIFNhaW50LURlbmlzLCBhdSBtb3RpZiBxdWUgbOKAmWFic2VuY2UgZGUgcG91cnN1aXRlcyBkZSBuYXR1cmUgw6AgaW50ZXJyb21wcmUgbGEgcHJlc2NyaXB0aW9uIGTigJl1bmUgY3LDqWFuY2Ugw6AgbOKAmWVuY29udHJlIGRlIGxhIHNvY2nDqXTDqSBk4oCZw6ljb25vbWllIG1peHRlIGxvY2FsZSBTT0RJUEFSSyBhIG1hbmlmZXN0ZW1lbnQgY29tcHJvbWlzIGxlIHJlY291dnJlbWVudCBkdSB0aXRyZSBkZSByZWNldHRlcyBkZSA3wqA0OTEsMzTCoOKCrCwgcHJpcyBlbiBjaGFyZ2UgbGUgMzDCoGp1aWxsZXTCoDIwMDEgOwpBdHRlbmR1IHF1ZSBsZSB0aXRyZSBkZSByZWNldHRlcywgw6ltaXMgZHVyYW50IGzigJlleGVyY2ljZSAyMDAxLCBhIMOpdMOpIHByaXMgZW4gY2hhcmdlIHBhciBsZSBwcsOpZMOpY2Vzc2V1ciBkZSBNLsKgWCBxdWkgbuKAmWVzdCBlbnRyw6kgZW4gZm9uY3Rpb24gcXVlIGxlIDI1wqBkw6ljZW1icmXCoDIwMDPCoDsgcXVlIGxlIGNvbnRyw7RsZSBkZSBs4oCZYXV0b3Jpc2F0aW9uIGRlIHBlcmNldm9pciBsYSByZWNldHRlIG7igJlpbmNvbWJhaXQgcGFzIGF1IGNvbXB0YWJsZSBhcHBlbGFudCwgbWFpcyDDoCBzb24gcHLDqWTDqWNlc3NldXLCoDsgcXXigJlhaW5zaSBs4oCZb2JzZXJ2YXRpb24gZHUgUHJvY3VyZXVyIGZpbmFuY2llciBkYW5zIHNvbiBtw6ltb2lyZSBu4oCZZXN0IHBhcyBmb25kw6llwqA7CkF0dGVuZHUgcXVlIGzigJlhcHBlbGFudCBu4oCZYSBmb3JtdWzDqSBhdWN1bmUgcsOpc2VydmUgbG9ycyBkZSBzYSBwcmlzZSBkZSBmb25jdGlvbiA7IHF14oCZw6AgZMOpZmF1dCwgaWwgYXNzdW1lIHNldWwgbGEgcmVzcG9uc2FiaWxpdMOpIGRlcyBvcMOpcmF0aW9ucyBkZSByZWNvdXZyZW1lbnQgcHJpc2VzIGVuIGNoYXJnZSwgc2F1ZiDDoCBhcHBvcnRlciBsYSBwcmV1dmUgcXXigJnDoCBzb24gZW50csOpZSBlbiBmb25jdGlvbiwgbGVzIGNyw6lhbmNlcyDDqXRhaWVudCBpcnLDqWNvdXZyYWJsZXMgb3UgZMOpasOgIHByZXNjcml0ZXPCoDsKUXVlIGPigJllc3Qgw6AgYm9uIGRyb2l0IHF1ZSBsZSBqdWdlbWVudCBkb250IGVzdCBhcHBlbCBhIGVuZ2Fnw6kgbGEgcmVzcG9uc2FiaWxpdMOpIGRlIE0uwqBYLCBmYXV0ZSBwb3VyIGNlbHVpLWNpIGRlIG7igJlhdm9pciBwcm9kdWl0IGVuIHByZW1pw6hyZSBpbnN0YW5jZSBsZXMgZG9jdW1lbnRzIGTDqWdhZ2VhbnQgc2EgcmVzcG9uc2FiaWxpdMOpwqA7CkF0dGVuZHUgcXVlLCBkYW5zIHNhIHJlcXXDqnRlLCBs4oCZYXBwZWxhbnQgaW52b3F1ZSB1biBtb3llbiBub3V2ZWF1LCBjZWx1aSBkZSAgbOKAmWlycsOpY291dnJhYmlsaXTDqSBkZSBsYSBjcsOpYW5jZcKgOwpBdHRlbmR1IHF1ZSBNLsKgWCBhcHB1aWUgc29uIGFwcGVsIGTigJl1biBtYW5kYXQgZGUgbOKAmW9yZG9ubmF0ZXVyIGFubnVsYW50IGxlIHRpdHJlIGxpdGlnaWV1eMKgOyBxdWUgY2UgbWFuZGF0IGVzdCBhY2NvbXBhZ27DqSBkZXMgcGnDqGNlcyBhdHRlc3RhbnQgZGUgc2EgdmFsaWRpdMOpLCBub3RhbW1lbnQgbGEgY29waWUgZOKAmXVuIGNlcnRpZmljYXQgYWRtaW5pc3RyYXRpZiwgZGF0w6kgZHUgMzEgYW/Du3QgMjAxMCBldCBzaWduw6kgZGUgbOKAmWFkam9pbnQgZMOpbMOpZ3XDqSByZXByw6lzZW50YW50IGR1IG1haXJlIGRlIGxhIGNvbW11bmUgZGUgU2FpbnQtRGVuaXMsIGNlcnRpZmlhbnQgcXVlIGxhIHJlZGV2YW5jZSBvYmpldCBkdSB0aXRyZSBlbiBjYXVzZSBu4oCZw6l0YWl0IHBhcyBkdWXCoDsgcXVlLCBtw6ptZSB0YXJkaWZzLCBjZXMgZG9jdW1lbnRzIGFtw6huZW50IMOgIGNvbnNpZMOpcmVyIHF1ZSBsYSBjcsOpYW5jZSBu4oCZYXZhaXQgcGFzIMOgIMOqdHJlIHJlY291dnLDqWXCoDsgCkF0dGVuZHUsIGTDqHMgbG9ycywgcXVlIGxhIGNyw6lhbmNlIGVzdCByw6lwdXTDqWUgbuKAmWF2b2lyIGphbWFpcyBleGlzdMOpwqA7IHF1ZSBsZSBkw6liZXQgcG91ciBkw6lmYXV0IGRlIHJlY291dnJlbWVudCBkZSBsYWRpdGUgY3LDqWFuY2UgZXN0IGFpbnNpIGTDqXBvdXJ2dSBkZSBmb25kZW1lbnQgOyBxdeKAmWlsIGNvbnZpZW50LCBlbiBjb25zw6lxdWVuY2UsIGTigJlpbmZpcm1lciBsZSBqdWdlbWVudCBlbnRyZXByaXPCoDsKUGFyIGNlcyBtb3RpZnMsCk9SRE9OTkXCoDoKTGUganVnZW1lbnQgbsKwwqAyMDA5LTU1LzIgZHUgMTUganVpbiAyMDEwIGRlIGxhIGNoYW1icmUgcsOpZ2lvbmFsZSBkZXMgY29tcHRlcyBkZSBsYSBSw6l1bmlvbiBlc3QgaW5maXJtw6kuCi0tLS0tLS0tLS0KRmFpdCBldCBqdWfDqSBlbiBsYSBDb3VyIGRlcyBjb21wdGVzLCBxdWF0cmnDqG1lIGNoYW1icmUsIHByZW1pw6hyZSBzZWN0aW9uLiBQcsOpc2VudHPCoDogTS7CoEJheWxlLCBwcsOpc2lkZW50LCBNTS7CoExhZmF1cmUsIFZlcm1ldWxlbiwgTW1lc8KgR2FkcmlvdC1SZW5hcmQsIETDqW1pZXIgZXQgTS7CoEdlb2Zmcm95LCBjb25zZWlsbGVycyBtYcOudHJlcy4KU2lnbsOpwqA6IEJheWxlLCBwcsOpc2lkZW50LCBldCBMZSBCYXJvbiwgZ3JlZmZpZXIuCkNvbGxhdGlvbm7DqSwgY2VydGlmacOpIGNvbmZvcm1lIMOgIGxhIG1pbnV0ZSDDqXRhbnQgYXUgZ3JlZmZlIGRlIGxhIENvdXIgZGVzIGNvbXB0ZXMgZXQgZMOpbGl2csOpIHBhciBtb2ksIHNlY3LDqXRhaXJlIGfDqW7DqXJhbC4KUG91ciBsZSBTZWNyw6l0YWlyZSBnw6luw6lyYWwKZXQgcGFyIGTDqWzDqWdhdGlvbiwKbGUgQ2hlZiBkdSBncmVmZmUgY29udGVudGlldXgKCgoKCgoKCkRhbmllbCBGRVJFWgo=</FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131222">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131222</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65172</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. BRANA, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>Mme DEMIER, Conseillère maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>18/10/2012</DATE_SEANCE></DATES_SEANCE>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE2" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">17/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Commune de Mahina (Polynésie française) - Gestion de fait des deniers de la commune de Mahina.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Gestion de fait</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 19.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Commune</DESCRIPTEUR>
<DESCRIPTEUR>Gestion de fait</DESCRIPTEUR>
<DESCRIPTEUR>Conseiller municipal</DESCRIPTEUR>
<DESCRIPTEUR>Maniement des fonds</DESCRIPTEUR>
<DESCRIPTEUR>Ingérence dans le recouvrement des recettes</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Comptable de fait</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Un conseiller municipal avait été déclaré comptable de fait par une chambre territoriale des comptes au motif qu'il aurait toléré la remise, à des employés municipaux autres que le régisseur, du produit de la vente de véhicules communaux. En appel, la Cour avait accueilli le moyen selon lequel, dépourvu de délégation, l'intéressé, informé ou non, n'était pas en mesure de faire cesser la gestion occulte. Elle avait donc infirmé sur ce point le jugement entrepris mais, constatant que des éléments concordants donnaient à penser que l'appelant avait, par la suite, manié certains des deniers de cette gestion, avait renvoyé ces éléments à une procédure contradictoire nouvelle. Au cours de celle-ci, invité à présenter des justifications à sa décharge, l'intéressé n'a pas répondu aux demandes de la Cour. Ses motifs n'étant pas contredits, elle le déclare comptable de fait des deniers de la commune. La Cour ne juge pas elle-même le compte mais renvoie à la chambre territoriale des comptes le soin de juger le compte de la gestion de fait.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la même affaire, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 18 mars 2010, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Mahina&lt;/I&gt;, Recueil 2010, p. 27.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'ingérence dans le recouvrement des recettes par des gestionnaires de fait, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 13 décembre 2004, &lt;I style="mso-bidi-font-style: normal"&gt;ENSP&lt;/I&gt;, Recueil 2004, p. 126 ; CC, 13 juin 2007, &lt;I style="mso-bidi-font-style: normal"&gt;OTAH&lt;/I&gt;, Recueil 2007, p. 39 et CC, 26 mai 2011, &lt;I style="mso-bidi-font-style: normal"&gt;musée national du sport&lt;/I&gt;, Recueil 2011, p. 54.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131222.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131204">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>4ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131204</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65507</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. GEOFFROY, Conseiller maître</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GANSER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt d'appel</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>05/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">17/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Communauté d'agglomération de Saint-Malo (Ille-et-Vilaine) - Appel d'un jugement de la chambre régionale des comptes de Bretagne.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION>
<SOLUTION>Procédure</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 14.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Communauté d'agglomération</DESCRIPTEUR>
<DESCRIPTEUR>Syndicat intercommunal</DESCRIPTEUR>
<DESCRIPTEUR>Dépense obligatoire</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Validité de la créance</DESCRIPTEUR>
<DESCRIPTEUR>Emprunt</DESCRIPTEUR>
<DESCRIPTEUR>Transfert de charges</DESCRIPTEUR>
<DESCRIPTEUR>Transfert de compétence</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR>
<DESCRIPTEUR>Non-lieu</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Le comptable d'une communauté d'agglomération avait été constitué débiteur pour avoir payé les échéances de trois emprunts souscrits par un syndicat intercommunal en l'absence, selon la chambre régionale des comptes, des pièces établissant leur transfert à la communauté d'agglomération. Saisie en appel, la Cour a estimé que la validité de la créance devait être prouvée par des documents antérieurs aux paiements et faisant état sans ambiguïté du consentement de la communauté d'agglomération au transfert des emprunts et obligations liées. La Cour a également relevé que le caractère obligatoire des dépenses au sens du code général des collectivités territoriales ne dispensait pas le comptable des contrôles prévus par le décret du 29 décembre 1962. Après avoir refusé, à décharge, divers documents postérieurs aux paiements ou de nature purement budgétaire ou n'émanant pas de la communauté d'agglomération, la Cour a admis, à titre de justification de certaines créances, l'état de la dette annexé au budget primitif de la communauté d'agglomération, au motif que, ce document indiquant explicitement les caractéristiques des emprunts en cause et le budget primitif étant devenu exécutoire, la preuve était rapportée du consentement de la communauté d'agglomération à reprendre les emprunts en cause.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur l'effet de délibérations budgétaires en matière de justification de paiements, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 8 décembre 2011&lt;I style="mso-bidi-font-style: normal"&gt;, maison de retraite Les Fontenottes à Ancy-le-Franc&lt;/I&gt;, Recueil 2012, p. 117. Sur l'absence d'effet, sur la responsabilité des comptables, de documents postérieurs au paiement, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 31 janvier 2002, &lt;I style="mso-bidi-font-style: normal"&gt;commune de Villefranche-sur-Saône&lt;/I&gt;, Recueil 2002, p. 12.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131204.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00131148">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>1ère chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00131148</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65535</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. ORY-LAVOLLEE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. CHOUVET, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>14/11/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">17/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">16/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Receveurs des impôts de la direction des services fiscaux (DSF) de la Guadeloupe - Exercices 1995 à 2002 (suites).</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00131148.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00130875">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>7ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00130875</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65790</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. LE MENE, Conseiller maitre</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. GAUTIER, Conseiller maitre</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>12/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">09/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">09/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Service du contrôle budgétaire et comptable placé auprès du ministre (CBCM) de l'écologie et du développement durable - Exercice 2007.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 12.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etat</DESCRIPTEUR>
<DESCRIPTEUR>Ministère</DESCRIPTEUR>
<DESCRIPTEUR>Service facturier</DESCRIPTEUR>
<DESCRIPTEUR>Ordonnance de paiement</DESCRIPTEUR>
<DESCRIPTEUR>Hiérarchie des normes juridiques</DESCRIPTEUR>
<DESCRIPTEUR>Délégation de signature</DESCRIPTEUR>
<DESCRIPTEUR>Pièces justificatives</DESCRIPTEUR>
<DESCRIPTEUR>Dématérialisation</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Dans le cadre d'un service facturier et d'une procédure dématérialisée, un comptable avait payé diverses sommes sans rechercher expressément si les personnes ayant ordonnancé informatiquement la dite dépense avaient reçu une délégation régulière. En l'occurrence, la liste des personnes habilitées à effectuer les transactions informatiques était différente de celle des agents ayant délégation de signature.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Le comptable doit être en mesure d'effectuer les contrôles prévus par les textes législatifs et règlementaires, auxquels il ne peut être dérogé par simple convention ou instruction du ministre. En conséquence, la Cour a rappelé que la dématérialisation des procédures via une chaîne informatique entre l'ordonnateur et le comptable devait permettre la réalisation &lt;I style="mso-bidi-font-style: normal"&gt;effective&lt;/I&gt; et &lt;I style="mso-bidi-font-style: normal"&gt;tracée&lt;/I&gt; des contrôles qui incombent au comptable. Dans ces conditions, le comptable n'a pas été en mesure de contrôler la qualité de l'ordonnateur et a donc été constitué en débet.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions antérieures à la loi n° 2011-1978 du 28 décembre 2011. 
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Un comptable manque à ses obligations en ne s'assurant pas de la qualité de la personne ayant ordonnancé informatiquement la dépense en l'absence de publication régulière de délégation de signature au &lt;I style="mso-bidi-font-style: normal"&gt;Journal officiel&lt;/I&gt;, &lt;I style="mso-bidi-font-style: normal"&gt;cf.&lt;/I&gt; CC, 26 juillet 2012, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM de l'outre-mer&lt;/I&gt;, Recueil 2012, p. 132 ; CC, 21 décembre 2012, &lt;I style="mso-bidi-font-style: normal"&gt;TPG de la Haute-Loire&lt;/I&gt;, Recueil 2012, p. 181 et CC, 10 mars 2014, &lt;I style="mso-bidi-font-style: normal"&gt;CBCM de l'écologie&lt;/I&gt;, que l'on peut consulter sur le site Internet &lt;EM&gt;ccomptes.fr&lt;/EM&gt;.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
En revanche, la Cour a admis la certification du service fait réalisée par voie électronique par des agents ayant reçu délégation régulière de signature publiée au &lt;I style="mso-bidi-font-style: normal"&gt;Journal officiel&lt;/I&gt; sur la base de captures d'écran, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CC, 25 janvier 2013, &lt;I style="mso-bidi-font-style: normal"&gt;ACSIA&lt;/I&gt;, Recueil 2013, p. 27.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00130875.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
<FICHE ID="JF00130871">
<JURIDICTION FIELDNAME="JF_JURIDICT" TABLENAME="PRO_DOC" DESCRIPTION="Juridiction" TYPE="VARCHAR">Cour des comptes</JURIDICTION>
<CHAMBRES FIELDNAME="JF_CHAMBRE" TABLENAME="PRO_DOC" DESCRIPTION="Chambre" TYPE="VARCHAR">
<CHAMBRE>7ème chambre</CHAMBRE></CHAMBRES>
<REFERENCE FIELDNAME="DOC_REF" TABLENAME="PRO_DOC" DESCRIPTION="Référence" TYPE="VARCHAR">JF00130871</REFERENCE>
<NUMERO_ARPEGES FIELDNAME="JF_N_ARPEGES" TABLENAME="PRO_DOC" DESCRIPTION="N° Arpèges" TYPE="VARCHAR">65752</NUMERO_ARPEGES>
<RAPPORTEURS FIELDNAME="JF_RAP" TABLENAME="PRO_DOC" DESCRIPTION="Rapporteur(s)" TYPE="VARCHAR">
<RAPPORTEUR>M. THEVENON, Conseiller référendaire</RAPPORTEUR></RAPPORTEURS>
<REVISEURS FIELDNAME="JF_RAP_C" TABLENAME="PRO_DOC" DESCRIPTION="Contre-rapporteur(s)" TYPE="VARCHAR">
<REVISEUR>M. ORTIZ, Conseiller maître</REVISEUR></REVISEURS>
<TYPE_DOC FIELDNAME="DOC_TYPE" TABLENAME="PRO_DOC" DESCRIPTION="Type de document" TYPE="VARCHAR">Arrêt</TYPE_DOC>
<DATES_SEANCE FIELDNAME="JF_D_SEANCE1" TABLENAME="PRO_DOC" DESCRIPTION="Date(s) de séance" TYPE="DATE">
<DATE_SEANCE>19/12/2012</DATE_SEANCE></DATES_SEANCE>
<DATE_DOC FIELDNAME="JF_D_ENVOI" TABLENAME="PRO_DOC" DESCRIPTION="Date du document" TYPE="DATE">09/01/2013</DATE_DOC>
<DATE_LECTURE FIELDNAME="JF_D_LECTURE" TABLENAME="PRO_DOC" DESCRIPTION="Date de lecture" TYPE="DATE">09/01/2013</DATE_LECTURE>
<TITRE FIELDNAME="DOC_TITRE" TABLENAME="PRO_DOC" DESCRIPTION="Titre" TYPE="VARCHAR">Ecole nationale des ponts et chaussées (ENPC) - Exercices 2006 à 2010.</TITRE>
<SOLUTIONS FIELDNAME="JF_SOLUTION" TABLENAME="PRO_DOC" DESCRIPTION="Solution" TYPE="VARCHAR">
<SOLUTION>Débet</SOLUTION></SOLUTIONS>
<PUBLICATION FIELDNAME="JF_PUBLICAT" TABLENAME="PRO_DOC" DESCRIPTION="Publication" TYPE="VARCHAR"><PARAGRAPHE><ALINEA>
Arrêts, jugements et communications des juridictions financières, 2013. - DILA, 2014, p. 11.
</ALINEA></PARAGRAPHE></PUBLICATION>
<DESCRIPTEURS1 FIELDNAME="JF_DEE_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Descripteurs 1" TYPE="VARCHAR">
<DESCRIPTEUR>Etablissement public scientifique, culturel et professionnel</DESCRIPTEUR>
<DESCRIPTEUR>Honoraires</DESCRIPTEUR>
<DESCRIPTEUR>Exactitude des calculs de liquidation</DESCRIPTEUR>
<DESCRIPTEUR>Paiement irrégulier</DESCRIPTEUR>
<DESCRIPTEUR>Diligences du comptable</DESCRIPTEUR>
<DESCRIPTEUR>Préjudice financier</DESCRIPTEUR>
<DESCRIPTEUR>Contrôle sélectif de la dépense</DESCRIPTEUR>
<DESCRIPTEUR>Débet</DESCRIPTEUR></DESCRIPTEURS1>
<RESUME1 FIELDNAME="JF_RESU_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Résumé 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Plusieurs comptables d'un établissement public avaient effectué des paiements relatifs au règlement d'honoraires médicaux en dépassement du tarif conventionnel. Le trop payé en résultant avait manifestement causé un préjudice financier à l'établissement. La Cour a donc prononcé un débet. Lorsque le comptable est constitué en débet, le juge des comptes vérifie le respect des règles de contrôle sélectif des dépenses. En l'espèce, la Cour constate que le manquement du comptable a eu lieu dans un champ non couvert par un plan de contrôle sélectif des dépenses. En conséquence, l'éventuelle remise gracieuse des sommes mises à la charge du comptable sera plafonnée conformément à la loi.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></RESUME1>
<COMMENTAIRES1 FIELDNAME="JF_COMM_JRS1" TABLENAME="PRO_DOC" DESCRIPTION="Commentaires juris 1" TYPE="VARCHAR">
<TEXTE_STRUCTURE><PARAGRAPHE><ALINEA>
Cette décision a été rendue sous l'empire des dispositions de la loi n° 2011-1978 du 28 décembre 2011.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur la réforme des conditions de mise en jeu de la responsabilité des comptables depuis la loi 2011-1978 du 28 décembre 2011, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. &lt;I style="mso-bidi-font-style: normal"&gt;AJDA&lt;/I&gt; 2013, p. 681 et &lt;I style="mso-bidi-font-style: normal"&gt;Gestion et finances publiques &lt;/I&gt;2013, n° 8, p. 4.
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
« &lt;I style="mso-bidi-font-style: normal"&gt;Les comptables publics dont la responsabilité personnelle et pécuniaire a été mise en jeu dans les cas mentionnés au troisième alinéa du même VI peuvent obtenir du ministre chargé du budget la remise gracieuse des sommes mises à leur charge. Hormis le cas de décès du comptable ou de respect par celui-ci, sous l'appréciation du juge des comptes, des règles de contrôle sélectif des dépenses, aucune remise gracieuse totale ne peut être accordée au comptable public dont la responsabilité personnelle et pécuniaire a été mise en jeu par le juge des comptes, le ministre chargé du budget étant dans l'obligation de laisser à la charge du comptable une somme au moins égale au double de la somme mentionnée au deuxième alinéa dudit VI. &lt;/I&gt;» (article 60, IX, de la loi du 23 février 1963 modifiée).
</ALINEA></PARAGRAPHE><PARAGRAPHE><ALINEA>
Sur le contrôle hiérarchisé de la dépense, &lt;I style="mso-bidi-font-style: normal"&gt;cf&lt;/I&gt;. CRC, 5 juillet 2011, &lt;I style="mso-bidi-font-style: normal"&gt;département de la Somme&lt;/I&gt;, Recueil 2011, p. 85 et CC, 15 septembre 2011, &lt;I style="mso-bidi-font-style: normal"&gt;AUP&lt;/I&gt;, Recueil 2011, p. 103.
</ALINEA></PARAGRAPHE></TEXTE_STRUCTURE></COMMENTAIRES1>
<FT_SFNAME FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte Intégral" TYPE="VARCHAR">jf00130871.html</FT_SFNAME>
<FT_SFNAME__CONTENU FIELDNAME="FT_SFNAME" TABLENAME="PRO_DOC" DESCRIPTION="Texte intégral" TYPE="BINARY"></FT_SFNAME__CONTENU></FICHE>
</CADIC>
